{
  "version": 3,
  "sources": ["../../three/examples/jsm/nodes/core/constants.js", "../../three/examples/jsm/nodes/core/NodeUtils.js", "../../three/examples/jsm/nodes/core/Node.js", "../../three/examples/jsm/nodes/core/InputNode.js", "../../three/examples/jsm/nodes/core/UniformNode.js", "../../three/examples/jsm/nodes/core/ArrayUniformNode.js", "../../three/examples/jsm/nodes/core/VaryingNode.js", "../../three/examples/jsm/nodes/core/AttributeNode.js", "../../three/examples/jsm/nodes/core/BypassNode.js", "../../three/examples/jsm/nodes/core/CodeNode.js", "../../three/examples/jsm/nodes/core/ConstNode.js", "../../three/examples/jsm/nodes/core/ContextNode.js", "../../three/examples/jsm/nodes/core/TempNode.js", "../../three/examples/jsm/nodes/core/ExpressionNode.js", "../../three/examples/jsm/nodes/core/FunctionCallNode.js", "../../three/examples/jsm/nodes/core/FunctionNode.js", "../../three/examples/jsm/nodes/core/InstanceIndexNode.js", "../../three/examples/jsm/nodes/core/NodeAttribute.js", "../../three/examples/jsm/nodes/core/NodeUniform.js", "../../three/examples/jsm/nodes/core/NodeVarying.js", "../../three/examples/jsm/nodes/core/NodeVar.js", "../../three/examples/jsm/nodes/core/NodeCode.js", "../../three/examples/jsm/nodes/core/NodeKeywords.js", "../../three/examples/jsm/nodes/core/NodeBuilder.js", "../../three/examples/jsm/nodes/core/NodeFrame.js", "../../three/examples/jsm/nodes/core/NodeFunctionInput.js", "../../three/examples/jsm/nodes/core/PropertyNode.js", "../../three/examples/jsm/nodes/math/OperatorNode.js", "../../three/examples/jsm/nodes/core/VarNode.js", "../../three/examples/jsm/nodes/accessors/BufferNode.js", "../../three/examples/jsm/nodes/accessors/Object3DNode.js", "../../three/examples/jsm/nodes/accessors/CameraNode.js", "../../three/examples/jsm/nodes/accessors/UVNode.js", "../../three/examples/jsm/nodes/accessors/TextureNode.js", "../../three/examples/jsm/nodes/accessors/ReferenceNode.js", "../../three/examples/jsm/nodes/accessors/MaterialReferenceNode.js", "../../three/examples/jsm/nodes/utils/SplitNode.js", "../../three/examples/jsm/nodes/accessors/MaterialNode.js", "../../three/examples/jsm/nodes/accessors/ModelNode.js", "../../three/examples/jsm/nodes/utils/JoinNode.js", "../../three/examples/jsm/nodes/math/MathNode.js", "../../three/examples/jsm/nodes/accessors/PositionNode.js", "../../three/examples/jsm/nodes/accessors/ModelViewProjectionNode.js", "../../three/examples/jsm/nodes/accessors/NormalNode.js", "../../three/examples/jsm/nodes/accessors/PointUVNode.js", "../../three/examples/jsm/nodes/accessors/StorageBufferNode.js", "../../three/examples/jsm/nodes/accessors/UserDataNode.js", "../../three/examples/jsm/nodes/display/FrontFacingNode.js", "../../three/examples/jsm/nodes/gpgpu/ComputeNode.js", "../../three/examples/jsm/nodes/math/CondNode.js", "../../three/examples/jsm/nodes/utils/ArrayElementNode.js", "../../three/examples/jsm/nodes/utils/ConvertNode.js", "../../three/examples/jsm/nodes/shadernode/ShaderNode.js", "../../three/examples/jsm/nodes/shadernode/ShaderNodeBaseElements.js", "../../three/examples/jsm/nodes/accessors/ReflectVectorNode.js", "../../three/examples/jsm/nodes/accessors/CubeTextureNode.js", "../../three/examples/jsm/nodes/accessors/InstanceNode.js", "../../three/examples/jsm/nodes/accessors/SkinningNode.js", "../../three/examples/jsm/nodes/geometry/RangeNode.js", "../../three/examples/jsm/nodes/display/ColorAdjustmentNode.js", "../../three/examples/jsm/nodes/display/ColorSpaceNode.js", "../../three/examples/jsm/nodes/display/NormalMapNode.js", "../../three/examples/jsm/nodes/display/ToneMappingNode.js", "../../three/examples/jsm/nodes/lighting/LightingNode.js", "../../three/examples/jsm/nodes/lighting/LightsNode.js", "../../three/examples/jsm/nodes/lighting/LightingContextNode.js", "../../three/examples/jsm/nodes/utils/MatcapUVNode.js", "../../three/examples/jsm/nodes/utils/MaxMipLevelNode.js", "../../three/examples/jsm/nodes/utils/TimerNode.js", "../../three/examples/jsm/nodes/utils/OscNode.js", "../../three/examples/jsm/nodes/utils/RotateUVNode.js", "../../three/examples/jsm/nodes/utils/SpriteSheetUVNode.js", "../../three/examples/jsm/nodes/procedural/CheckerNode.js", "../../three/examples/jsm/nodes/fog/FogNode.js", "../../three/examples/jsm/nodes/fog/FogRangeNode.js", "../../three/examples/jsm/nodes/functions/BSDF/F_Schlick.js", "../../three/examples/jsm/nodes/functions/BSDF/V_GGX_SmithCorrelated.js", "../../three/examples/jsm/nodes/functions/BSDF/D_GGX.js", "../../three/examples/jsm/nodes/functions/BSDF/BRDF_GGX.js", "../../three/examples/jsm/nodes/functions/BSDF/BRDF_Lambert.js", "../../three/examples/jsm/nodes/functions/BSDF/DFGApprox.js", "../../three/examples/jsm/nodes/functions/light/getDistanceAttenuation.js", "../../three/examples/jsm/nodes/functions/material/getGeometryRoughness.js", "../../three/examples/jsm/nodes/functions/material/getRoughness.js", "../../three/examples/jsm/nodes/functions/PhysicalLightingModel.js", "../../three/examples/jsm/nodes/shadernode/ShaderNodeElements.js", "../../three/examples/jsm/nodes/lighting/AnalyticLightNode.js", "../../three/examples/jsm/nodes/lighting/PunctualLightNode.js", "../../three/examples/jsm/nodes/lighting/HemisphereLightNode.js", "../../three/examples/jsm/nodes/lighting/EnvironmentNode.js", "../../three/examples/jsm/nodes/lighting/AONode.js", "../../three/examples/jsm/nodes/loaders/NodeLoader.js", "../../three/examples/jsm/nodes/materials/NodeMaterial.js", "../../three/examples/jsm/nodes/materials/LineBasicNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshBasicNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshStandardNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshPhysicalNodeMaterial.js", "../../three/examples/jsm/nodes/materials/PointsNodeMaterial.js", "../../three/examples/jsm/nodes/materials/SpriteNodeMaterial.js", "../../three/examples/jsm/nodes/materials/Materials.js", "../../three/examples/jsm/nodes/loaders/NodeMaterialLoader.js", "../../three/examples/jsm/nodes/loaders/NodeObjectLoader.js", "../../three/examples/jsm/nodes/Nodes.js"],
  "sourcesContent": ["export const NodeShaderStage = {\n\tVertex: 'vertex',\n\tFragment: 'fragment'\n};\n\nexport const NodeUpdateType = {\n\tNone: 'none',\n\tFrame: 'frame',\n\tObject: 'object'\n};\n\nexport const NodeType = {\n\tBoolean: 'bool',\n\tInteger: 'int',\n\tFloat: 'float',\n\tVector2: 'vec2',\n\tVector3: 'vec3',\n\tVector4: 'vec4',\n\tMatrix3: 'mat3',\n\tMatrix4: 'mat4'\n};\n", "import { Color, Matrix3, Matrix4, Vector2, Vector3, Vector4 } from 'three';\n\nexport const getNodesKeys = ( object ) => {\n\n\tconst props = [];\n\n\tfor ( const name in object ) {\n\n\t\tconst value = object[ name ];\n\n\t\tif ( value && value.isNode === true ) {\n\n\t\t\tprops.push( name );\n\n\t\t}\n\n\t}\n\n\treturn props;\n\n};\n\nexport const getValueType = ( value ) => {\n\n\tif ( typeof value === 'number' ) {\n\n\t\treturn 'float';\n\n\t} else if ( typeof value === 'boolean' ) {\n\n\t\treturn 'bool';\n\n\t} else if ( value?.isVector2 === true ) {\n\n\t\treturn 'vec2';\n\n\t} else if ( value?.isVector3 === true ) {\n\n\t\treturn 'vec3';\n\n\t} else if ( value?.isVector4 === true ) {\n\n\t\treturn 'vec4';\n\n\t} else if ( value?.isMatrix3 === true ) {\n\n\t\treturn 'mat3';\n\n\t} else if ( value?.isMatrix4 === true ) {\n\n\t\treturn 'mat4';\n\n\t} else if ( value?.isColor === true ) {\n\n\t\treturn 'color';\n\n\t}\n\n\treturn null;\n\n};\n\nexport const getValueFromType = ( type, ...params ) => {\n\n\tconst last4 = type?.slice( - 4 );\n\n\tif ( type === 'color' ) {\n\n\t\treturn new Color( ...params );\n\n\t} else if ( last4 === 'vec2' ) {\n\n\t\treturn new Vector2( ...params );\n\n\t} else if ( last4 === 'vec3' ) {\n\n\t\treturn new Vector3( ...params );\n\n\t} else if ( last4 === 'vec4' ) {\n\n\t\treturn new Vector4( ...params );\n\n\t} else if ( last4 === 'mat3' ) {\n\n\t\treturn new Matrix3( ...params );\n\n\t} else if ( last4 === 'mat4' ) {\n\n\t\treturn new Matrix4( ...params );\n\n\t} else if ( type === 'bool' ) {\n\n\t\treturn false;\n\n\t} else if ( ( type === 'float' ) || ( type === 'int' ) || ( type === 'uint' ) ) {\n\n\t\treturn 0;\n\n\t}\n\n\treturn null;\n\n};\n", "import { NodeUpdateType } from './constants.js';\nimport { getNodesKeys } from './NodeUtils.js';\nimport { MathUtils } from 'three';\n\nlet _nodeId = 0;\n\nclass Node {\n\n\tconstructor( nodeType = null ) {\n\n\t\tthis.isNode = true;\n\n\t\tthis.nodeType = nodeType;\n\n\t\tthis.updateType = NodeUpdateType.None;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tObject.defineProperty( this, 'id', { value: _nodeId ++ } );\n\n\t}\n\n\tget type() {\n\n\t\treturn this.constructor.name;\n\n\t}\n\n\tgetChildren() {\n\n\t\tconst children = [];\n\n\t\tfor ( const property in this ) {\n\n\t\t\tconst object = this[ property ];\n\n\t\t\tif ( Array.isArray( object ) === true ) {\n\n\t\t\t\tfor ( const child of object ) {\n\n\t\t\t\t\tif ( child?.isNode === true ) {\n\n\t\t\t\t\t\tchildren.push( child );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object?.isNode === true ) {\n\n\t\t\t\tchildren.push( object );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn children;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn this.uuid;\n\n\t}\n\n\tgetUpdateType( /*builder*/ ) {\n\n\t\treturn this.updateType;\n\n\t}\n\n\tgetNodeType( /*builder*/ ) {\n\n\t\treturn this.nodeType;\n\n\t}\n\n\tgetConstructHash( /*builder*/ ) {\n\n\t\treturn this.uuid;\n\n\t}\n\n\tgetReference( builder ) {\n\n\t\tconst hash = this.getHash( builder );\n\t\tconst nodeFromHash = builder.getNodeFromHash( hash );\n\n\t\treturn nodeFromHash || this;\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\tfor ( const childNode of this.getChildren() ) {\n\n\t\t\tnodeProperties[ '_node' + childNode.id ] = childNode;\n\n\t\t}\n\n\t\t// return a outputNode if exists\n\t\treturn null;\n\n\t}\n\n\tanalyze( builder ) {\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\t\tnodeData.dependenciesCount = nodeData.dependenciesCount === undefined ? 1 : nodeData.dependenciesCount + 1;\n\n\t\tif ( nodeData.dependenciesCount === 1 ) {\n\n\t\t\t// node flow children\n\n\t\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\t\tfor ( const childNode of Object.values( nodeProperties ) ) {\n\n\t\t\t\tif ( childNode?.isNode === true ) {\n\n\t\t\t\t\tchildNode.build( builder );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst { outputNode } = builder.getNodeProperties( this );\n\n\t\tif ( outputNode?.isNode === true ) {\n\n\t\t\treturn outputNode.build( builder, output );\n\n\t\t}\n\n\t}\n\n\tupdate( /*frame*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tbuild( builder, output = null ) {\n\n\t\tconst refNode = this.getReference( builder );\n\n\t\tif ( this !== refNode ) {\n\n\t\t\treturn refNode.build( builder, output );\n\n\t\t}\n\n\t\tbuilder.addNode( this );\n\t\tbuilder.addStack( this );\n\n\t\t/* expected return:\n\t\t\t- \"construct\"\t-> Node\n\t\t\t- \"analyze\"\t\t-> null\n\t\t\t- \"generate\"\t-> String\n\t\t*/\n\t\tlet result = null;\n\n\t\tconst buildStage = builder.getBuildStage();\n\n\t\tif ( buildStage === 'construct' ) {\n\n\t\t\tconst properties = builder.getNodeProperties( this );\n\n\t\t\tif ( properties.initialized !== true || builder.context.tempRead === false ) {\n\n\t\t\t\tproperties.initialized = true;\n\t\t\t\tproperties.outputNode = this.construct( builder );\n\n\t\t\t\tfor ( const childNode of Object.values( properties ) ) {\n\n\t\t\t\t\tif ( childNode?.isNode === true ) {\n\n\t\t\t\t\t\tchildNode.build( builder );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( buildStage === 'analyze' ) {\n\n\t\t\tthis.analyze( builder );\n\n\t\t} else if ( buildStage === 'generate' ) {\n\n\t\t\tconst isGenerateOnce = this.generate.length === 1;\n\n\t\t\tif ( isGenerateOnce ) {\n\n\t\t\t\tconst type = this.getNodeType( builder );\n\t\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\t\tresult = nodeData.snippet;\n\n\t\t\t\tif ( result === undefined /*|| builder.context.tempRead === false*/ ) {\n\n\t\t\t\t\tresult = this.generate( builder ) || '';\n\n\t\t\t\t\tnodeData.snippet = result;\n\n\t\t\t\t}\n\n\t\t\t\tresult = builder.format( result, type, output );\n\n\t\t\t} else {\n\n\t\t\t\tresult = this.generate( builder, output ) || '';\n\n\t\t\t}\n\n\t\t}\n\n\t\tbuilder.removeStack( this );\n\n\t\treturn result;\n\n\t}\n\n\tserialize( json ) {\n\n\t\tconst nodeKeys = getNodesKeys( this );\n\n\t\tif ( nodeKeys.length > 0 ) {\n\n\t\t\tconst inputNodes = {};\n\n\t\t\tfor ( const property of nodeKeys ) {\n\n\t\t\t\tinputNodes[ property ] = this[ property ].toJSON( json.meta ).uuid;\n\n\t\t\t}\n\n\t\t\tjson.inputNodes = inputNodes;\n\n\t\t}\n\n\t}\n\n\tdeserialize( json ) {\n\n\t\tif ( json.inputNodes !== undefined ) {\n\n\t\t\tconst nodes = json.meta.nodes;\n\n\t\t\tfor ( const property in json.inputNodes ) {\n\n\t\t\t\tconst uuid = json.inputNodes[ property ];\n\n\t\t\t\tthis[ property ] = nodes[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst { uuid, type } = this;\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t}\n\n\t\t// serialize\n\n\t\tlet data = meta.nodes[ uuid ];\n\n\t\tif ( data === undefined ) {\n\n\t\t\tdata = {\n\t\t\t\tuuid,\n\t\t\t\ttype,\n\t\t\t\tmeta,\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Node',\n\t\t\t\t\tgenerator: 'Node.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmeta.nodes[ data.uuid ] = data;\n\n\t\t\tthis.serialize( data );\n\n\t\t\tdelete data.meta;\n\n\t\t}\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nexport default Node;\n", "import Node from './Node.js';\nimport { getValueType, getValueFromType } from './NodeUtils.js';\n\nclass InputNode extends Node {\n\n\tconstructor( value, nodeType = null ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.isInputNode = true;\n\n\t\tthis.value = value;\n\n\t}\n\n\tgetNodeType( /*builder*/ ) {\n\n\t\tif ( this.nodeType === null ) {\n\n\t\t\treturn getValueType( this.value );\n\n\t\t}\n\n\t\treturn this.nodeType;\n\n\t}\n\n\tgetInputType( builder ) {\n\n\t\treturn this.getNodeType( builder );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.value = this.value?.toArray?.() || this.value;\n\t\tdata.valueType = getValueType( this.value );\n\t\tdata.nodeType = this.nodeType;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.nodeType = data.nodeType;\n\t\tthis.value = getValueFromType( data.valueType );\n\t\tthis.value = this.value?.fromArray?.( data.value ) || data.value;\n\n\t}\n\n\tgenerate( /*builder, output*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n}\n\nexport default InputNode;\n", "import InputNode from './InputNode.js';\n\nclass UniformNode extends InputNode {\n\n\tconstructor( value, nodeType = null ) {\n\n\t\tsuper( value, nodeType );\n\n\t\tthis.isUniformNode = true;\n\n\t}\n\n\tgetUniformHash( builder ) {\n\n\t\treturn this.getHash( builder );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst hash = this.getUniformHash( builder );\n\n\t\tlet sharedNode = builder.getNodeFromHash( hash );\n\n\t\tif ( sharedNode === undefined ) {\n\n\t\t\tbuilder.setHashNode( this, hash );\n\n\t\t\tsharedNode = this;\n\n\t\t}\n\n\t\tconst sharedNodeType = sharedNode.getInputType( builder );\n\n\t\tconst nodeUniform = builder.getUniformFromNode( sharedNode, builder.shaderStage, sharedNodeType );\n\t\tconst propertyName = builder.getPropertyName( nodeUniform );\n\n\t\treturn builder.format( propertyName, type, output );\n\n\t}\n\n}\n\nexport default UniformNode;\n", "import UniformNode from './UniformNode.js';\n\nclass ArrayUniformNode extends UniformNode {\n\n\tconstructor( nodes = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayUniformNode = true;\n\n\t\tthis.nodes = nodes;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.nodes[ 0 ].getNodeType( builder );\n\n\t}\n\n}\n\nexport default ArrayUniformNode;\n", "import Node from './Node.js';\nimport { NodeShaderStage } from './constants.js';\n\nclass VaryingNode extends Node {\n\n\tconstructor( node, name = null ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.name = name;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\t// VaryingNode is auto type\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst node = this.node;\n\t\tconst name = this.name;\n\n\t\tconst nodeVarying = builder.getVaryingFromNode( this, type );\n\n\t\tif ( name !== null ) {\n\n\t\t\tnodeVarying.name = name;\n\n\t\t}\n\n\t\tconst propertyName = builder.getPropertyName( nodeVarying, NodeShaderStage.Vertex );\n\n\t\t// force node run in vertex stage\n\t\tbuilder.flowNodeFromShaderStage( NodeShaderStage.Vertex, node, type, propertyName );\n\n\t\treturn builder.getPropertyName( nodeVarying );\n\n\t}\n\n}\n\nexport default VaryingNode;\n", "import Node from './Node.js';\nimport VaryingNode from './VaryingNode.js';\n\nclass AttributeNode extends Node {\n\n\tconstructor( attributeName, nodeType = null ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis._attributeName = attributeName;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.getAttributeName( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tlet nodeType = super.getNodeType( builder );\n\n\t\tif ( nodeType === null ) {\n\n\t\t\tconst attributeName = this.getAttributeName( builder );\n\t\t\tconst attribute = builder.geometry.getAttribute( attributeName );\n\n\t\t\tnodeType = builder.getTypeFromLength( attribute.itemSize );\n\n\t\t}\n\n\t\treturn nodeType;\n\n\t}\n\n\tsetAttributeName( attributeName ) {\n\n\t\tthis._attributeName = attributeName;\n\n\t\treturn this;\n\n\t}\n\n\tgetAttributeName( /*builder*/ ) {\n\n\t\treturn this._attributeName;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst attribute = builder.getAttribute( this.getAttributeName( builder ), this.getNodeType( builder ) );\n\n\t\tif ( builder.isShaderStage( 'vertex' ) ) {\n\n\t\t\treturn attribute.name;\n\n\t\t} else {\n\n\t\t\tconst nodeVarying = new VaryingNode( this );\n\n\t\t\treturn nodeVarying.build( builder, attribute.type );\n\n\t\t}\n\n\t}\n\n}\n\nexport default AttributeNode;\n", "import Node from './Node.js';\n\nclass BypassNode extends Node {\n\n\tconstructor( returnNode, callNode ) {\n\n\t\tsuper();\n\n\t\tthis.isBypassNode = true;\n\n\t\tthis.outputNode = returnNode;\n\t\tthis.callNode = callNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.outputNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst snippet = this.callNode.build( builder, 'void' );\n\n\t\tif ( snippet !== '' ) {\n\n\t\t\tbuilder.addFlowCode( snippet );\n\n\t\t}\n\n\t\treturn this.outputNode.build( builder, output );\n\n\t}\n\n}\n\nexport default BypassNode;\n", "import Node from './Node.js';\n\nclass CodeNode extends Node {\n\n\tconstructor( code = '', nodeType = 'code' ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.isCodeNode = true;\n\n\t\tthis.code = code;\n\n\t\tthis._includes = [];\n\n\t}\n\n\tsetIncludes( includes ) {\n\n\t\tthis._includes = includes;\n\n\t\treturn this;\n\n\t}\n\n\tgetIncludes( /*builder*/ ) {\n\n\t\treturn this._includes;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst includes = this.getIncludes( builder );\n\n\t\tfor ( const include of includes ) {\n\n\t\t\tinclude.build( builder );\n\n\t\t}\n\n\t\tconst nodeCode = builder.getCodeFromNode( this, this.getNodeType( builder ) );\n\t\tnodeCode.code = this.code;\n\n\t\treturn nodeCode.code;\n\n\t}\n\n}\n\nexport default CodeNode;\n", "import InputNode from './InputNode.js';\n\nclass ConstNode extends InputNode {\n\n\tconstructor( value, nodeType = null ) {\n\n\t\tsuper( value, nodeType );\n\n\t\tthis.isConstNode = true;\n\n\t}\n\n\tgenerateConst( builder ) {\n\n\t\treturn builder.getConst( this.getNodeType( builder ), this.value );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\treturn builder.format( this.generateConst( builder ), type, output );\n\n\t}\n\n}\n\nexport default ConstNode;\n", "import Node from './Node.js';\n\nclass ContextNode extends Node {\n\n\tconstructor( node, context = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isContextNode = true;\n\n\t\tthis.node = node;\n\t\tthis.context = context;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst previousContext = builder.getContext();\n\n\t\tbuilder.setContext( { ...builder.context, ...this.context } );\n\n\t\tconst node = this.node.build( builder );\n\n\t\tbuilder.setContext( previousContext );\n\n\t\treturn node;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst previousContext = builder.getContext();\n\n\t\tbuilder.setContext( { ...builder.context, ...this.context } );\n\n\t\tconst snippet = this.node.build( builder, output );\n\n\t\tbuilder.setContext( previousContext );\n\n\t\treturn snippet;\n\n\t}\n\n}\n\nexport default ContextNode;\n", "import Node from './Node.js';\n\nclass TempNode extends Node {\n\n\tconstructor( type ) {\n\n\t\tsuper( type );\n\n\t\tthis.isTempNode = true;\n\n\t}\n\n\tbuild( builder, output ) {\n\n\t\tconst buildStage = builder.getBuildStage();\n\n\t\tif ( buildStage === 'generate' ) {\n\n\t\t\tconst type = builder.getVectorType( this.getNodeType( builder, output ) );\n\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\tif ( builder.context.tempRead !== false && nodeData.propertyName !== undefined ) {\n\n\t\t\t\treturn builder.format( nodeData.propertyName, type, output );\n\n\t\t\t} else if ( builder.context.tempWrite !== false && type !== 'void ' && output !== 'void' && nodeData.dependenciesCount > 1 ) {\n\n\t\t\t\tconst snippet = super.build( builder, type );\n\n\t\t\t\tconst nodeVar = builder.getVarFromNode( this, type );\n\t\t\t\tconst propertyName = builder.getPropertyName( nodeVar );\n\n\t\t\t\tbuilder.addFlowCode( `${propertyName} = ${snippet}` );\n\n\t\t\t\tnodeData.snippet = snippet;\n\t\t\t\tnodeData.propertyName = propertyName;\n\n\t\t\t\treturn builder.format( nodeData.propertyName, type, output );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn super.build( builder, output );\n\n\t}\n\n}\n\nexport default TempNode;\n", "import TempNode from './TempNode.js';\n\nclass ExpressionNode extends TempNode {\n\n\tconstructor( snipped = '', nodeType = 'void' ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.snipped = snipped;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst snipped = this.snipped;\n\n\t\tif ( type === 'void' ) {\n\n\t\t\tbuilder.addFlowCode( snipped );\n\n\t\t} else {\n\n\t\t\treturn `( ${ snipped } )`;\n\n\t\t}\n\n\t}\n\n}\n\nexport default ExpressionNode;\n", "import TempNode from './TempNode.js';\n\nclass FunctionCallNode extends TempNode {\n\n\tconstructor( functionNode = null, parameters = {} ) {\n\n\t\tsuper();\n\n\t\tthis.functionNode = functionNode;\n\t\tthis.parameters = parameters;\n\n\t}\n\n\tsetParameters( parameters ) {\n\n\t\tthis.parameters = parameters;\n\n\t\treturn this;\n\n\t}\n\n\tgetParameters() {\n\n\t\treturn this.parameters;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.functionNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst params = [];\n\n\t\tconst functionNode = this.functionNode;\n\n\t\tconst inputs = functionNode.getInputs( builder );\n\t\tconst parameters = this.parameters;\n\n\t\tfor ( const inputNode of inputs ) {\n\n\t\t\tconst node = parameters[ inputNode.name ];\n\n\t\t\tif ( node !== undefined ) {\n\n\t\t\t\tparams.push( node.build( builder, inputNode.type ) );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( `FunctionCallNode: Input '${inputNode.name}' not found in FunctionNode.` );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst functionName = functionNode.build( builder, 'property' );\n\n\t\treturn `${functionName}( ${params.join( ', ' )} )`;\n\n\t}\n\n}\n\nexport default FunctionCallNode;\n", "import CodeNode from './CodeNode.js';\nimport FunctionCallNode from './FunctionCallNode.js';\n\nclass FunctionNode extends CodeNode {\n\n\tconstructor( code = '' ) {\n\n\t\tsuper( code );\n\n\t\tthis.keywords = {};\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.getNodeFunction( builder ).type;\n\n\t}\n\n\tgetInputs( builder ) {\n\n\t\treturn this.getNodeFunction( builder ).inputs;\n\n\t}\n\n\tgetNodeFunction( builder ) {\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\tlet nodeFunction = nodeData.nodeFunction;\n\n\t\tif ( nodeFunction === undefined ) {\n\n\t\t\tnodeFunction = builder.parser.parseFunction( this.code );\n\n\t\t\tnodeData.nodeFunction = nodeFunction;\n\n\t\t}\n\n\t\treturn nodeFunction;\n\n\t}\n\n\tcall( parameters = {} ) {\n\n\t\treturn new FunctionCallNode( this, parameters );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tsuper.generate( builder );\n\n\t\tconst nodeFunction = this.getNodeFunction( builder );\n\n\t\tconst name = nodeFunction.name;\n\t\tconst type = nodeFunction.type;\n\n\t\tconst nodeCode = builder.getCodeFromNode( this, type );\n\n\t\tif ( name !== '' ) {\n\n\t\t\t// use a custom property name\n\n\t\t\tnodeCode.name = name;\n\n\t\t}\n\n\t\tconst propertyName = builder.getPropertyName( nodeCode );\n\n\t\tlet code = this.getNodeFunction( builder ).getCode( propertyName );\n\n\t\tconst keywords = this.keywords;\n\t\tconst keywordsProperties = Object.keys( keywords );\n\n\t\tif ( keywordsProperties.length > 0 ) {\n\n\t\t\tfor ( const property of keywordsProperties ) {\n\n\t\t\t\tconst propertyRegExp = new RegExp( `\\\\b${property}\\\\b`, 'g' );\n\t\t\t\tconst nodeProperty = keywords[ property ].build( builder, 'property' );\n\n\t\t\t\tcode = code.replace( propertyRegExp, nodeProperty );\n\n\t\t\t}\n\n\t\t}\n\n\t\tnodeCode.code = code;\n\n\t\tif ( output === 'property' ) {\n\n\t\t\treturn propertyName;\n\n\t\t} else {\n\n\t\t\treturn builder.format( `${ propertyName }()`, type, output );\n\n\t\t}\n\n\t}\n\n}\n\nexport default FunctionNode;\n", "import Node from './Node.js';\n\nclass InstanceIndexNode extends Node {\n\n\tconstructor() {\n\n\t\tsuper( 'uint' );\n\n\t\tthis.isInstanceIndexNode = true;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\treturn builder.getInstanceIndex();\n\n\t}\n\n}\n\nexport default InstanceIndexNode;\n", "class NodeAttribute {\n\n\tconstructor( name, type ) {\n\n\t\tthis.isNodeAttribute = true;\n\n\t\tthis.name = name;\n\t\tthis.type = type;\n\n\t}\n\n}\n\nexport default NodeAttribute;\n", "class NodeUniform {\n\n\tconstructor( name, type, node, needsUpdate = undefined ) {\n\n\t\tthis.isNodeUniform = true;\n\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.node = node;\n\t\tthis.needsUpdate = needsUpdate;\n\n\t}\n\n\tget value() {\n\n\t\treturn this.node.value;\n\n\t}\n\n\tset value( val ) {\n\n\t\tthis.node.value = val;\n\n\t}\n\n}\n\nexport default NodeUniform;\n", "class NodeVarying {\n\n\tconstructor( name, type ) {\n\n\t\tthis.isNodeVarying = true;\n\n\t\tthis.name = name;\n\t\tthis.type = type;\n\n\t}\n\n}\n\nexport default NodeVarying;\n", "class NodeVar {\n\n\tconstructor( name, type ) {\n\n\t\tthis.isNodeVar = true;\n\n\t\tthis.name = name;\n\t\tthis.type = type;\n\n\t}\n\n}\n\nexport default NodeVar;\n", "class NodeCode {\n\n\tconstructor( name, type, code = '' ) {\n\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.code = code;\n\n\t\tObject.defineProperty( this, 'isNodeCode', { value: true } );\n\n\t}\n\n}\n\nexport default NodeCode;\n", "class NodeKeywords {\n\n\tconstructor() {\n\n\t\tthis.keywords = [];\n\t\tthis.nodes = [];\n\t\tthis.keywordsCallback = {};\n\n\t}\n\n\tgetNode( name ) {\n\n\t\tlet node = this.nodes[ name ];\n\n\t\tif ( node === undefined && this.keywordsCallback[ name ] !== undefined ) {\n\n\t\t\tnode = this.keywordsCallback[ name ]( name );\n\n\t\t\tthis.nodes[ name ] = node;\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n\taddKeyword( name, callback ) {\n\n\t\tthis.keywords.push( name );\n\t\tthis.keywordsCallback[ name ] = callback;\n\n\t\treturn this;\n\n\t}\n\n\tparse( code ) {\n\n\t\tconst keywordNames = this.keywords;\n\n\t\tconst regExp = new RegExp( `\\\\b${keywordNames.join( '\\\\b|\\\\b' )}\\\\b`, 'g' );\n\n\t\tconst codeKeywords = code.match( regExp );\n\n\t\tconst keywordNodes = [];\n\n\t\tif ( codeKeywords !== null ) {\n\n\t\t\tfor ( const keyword of codeKeywords ) {\n\n\t\t\t\tconst node = this.getNode( keyword );\n\n\t\t\t\tif ( node !== undefined && keywordNodes.indexOf( node ) === - 1 ) {\n\n\t\t\t\t\tkeywordNodes.push( node );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn keywordNodes;\n\n\t}\n\n\tinclude( builder, code ) {\n\n\t\tconst keywordNodes = this.parse( code );\n\n\t\tfor ( const keywordNode of keywordNodes ) {\n\n\t\t\tkeywordNode.build( builder );\n\n\t\t}\n\n\t}\n\n}\n\nexport default NodeKeywords;\n", "import NodeUniform from './NodeUniform.js';\nimport NodeAttribute from './NodeAttribute.js';\nimport NodeVarying from './NodeVarying.js';\nimport NodeVar from './NodeVar.js';\nimport NodeCode from './NodeCode.js';\nimport NodeKeywords from './NodeKeywords.js';\nimport { NodeUpdateType } from './constants.js';\n\nimport { REVISION, LinearEncoding } from 'three';\n\nexport const defaultShaderStages = [ 'fragment', 'vertex' ];\nexport const shaderStages = [ ...defaultShaderStages, 'compute' ];\nexport const vector = [ 'x', 'y', 'z', 'w' ];\n\nconst typeFromLength = new Map();\ntypeFromLength.set( 1, 'float' );\ntypeFromLength.set( 2, 'vec2' );\ntypeFromLength.set( 3, 'vec3' );\ntypeFromLength.set( 4, 'vec4' );\ntypeFromLength.set( 9, 'mat3' );\ntypeFromLength.set( 16, 'mat4' );\n\nconst toFloat = ( value ) => {\n\n\tvalue = Number( value );\n\n\treturn value + ( value % 1 ? '' : '.0' );\n\n};\n\nclass NodeBuilder {\n\n\tconstructor( object, renderer, parser ) {\n\n\t\tthis.object = object;\n\t\tthis.material = object.material || null;\n\t\tthis.geometry = object.geometry || null;\n\t\tthis.renderer = renderer;\n\t\tthis.parser = parser;\n\n\t\tthis.nodes = [];\n\t\tthis.updateNodes = [];\n\t\tthis.hashNodes = {};\n\n\t\tthis.scene = null;\n\t\tthis.lightsNode = null;\n\t\tthis.fogNode = null;\n\n\t\tthis.vertexShader = null;\n\t\tthis.fragmentShader = null;\n\t\tthis.computeShader = null;\n\n\t\tthis.flowNodes = { vertex: [], fragment: [], compute: [] };\n\t\tthis.flowCode = { vertex: '', fragment: '', compute: [] };\n\t\tthis.uniforms = { vertex: [], fragment: [], compute: [], index: 0 };\n\t\tthis.codes = { vertex: [], fragment: [], compute: [] };\n\t\tthis.attributes = [];\n\t\tthis.varyings = [];\n\t\tthis.vars = { vertex: [], fragment: [], compute: [] };\n\t\tthis.flow = { code: '' };\n\t\tthis.stack = [];\n\n\t\tthis.context = {\n\t\t\tkeywords: new NodeKeywords(),\n\t\t\tmaterial: object.material\n\t\t};\n\n\t\tthis.nodesData = new WeakMap();\n\t\tthis.flowsData = new WeakMap();\n\n\t\tthis.shaderStage = null;\n\t\tthis.buildStage = null;\n\n\t}\n\n\tget node() {\n\n\t\treturn this.stack[ this.stack.length - 1 ];\n\n\t}\n\n\taddStack( node ) {\n\n\t\t/*\n\t\tif ( this.stack.indexOf( node ) !== - 1 ) {\n\n\t\t\tconsole.warn( 'Recursive node: ', node );\n\n\t\t}\n\t\t*/\n\n\t\tthis.stack.push( node );\n\n\t}\n\n\tremoveStack( node ) {\n\n\t\tconst lastStack = this.stack.pop();\n\n\t\tif ( lastStack !== node ) {\n\n\t\t\tthrow new Error( 'NodeBuilder: Invalid node stack!' );\n\n\t\t}\n\n\t}\n\n\tsetHashNode( node, hash ) {\n\n\t\tthis.hashNodes[ hash ] = node;\n\n\t}\n\n\taddNode( node ) {\n\n\t\tif ( this.nodes.indexOf( node ) === - 1 ) {\n\n\t\t\tconst updateType = node.getUpdateType( this );\n\n\t\t\tif ( updateType !== NodeUpdateType.None ) {\n\n\t\t\t\tthis.updateNodes.push( node );\n\n\t\t\t}\n\n\t\t\tthis.nodes.push( node );\n\n\t\t\tthis.setHashNode( node, node.getHash( this ) );\n\n\t\t}\n\n\t}\n\n\tgetMethod( method ) {\n\n\t\treturn method;\n\n\t}\n\n\tgetNodeFromHash( hash ) {\n\n\t\treturn this.hashNodes[ hash ];\n\n\t}\n\n\taddFlow( shaderStage, node ) {\n\n\t\tthis.flowNodes[ shaderStage ].push( node );\n\n\t\treturn node;\n\n\t}\n\n\tsetContext( context ) {\n\n\t\tthis.context = context;\n\n\t}\n\n\tgetContext() {\n\n\t\treturn this.context;\n\n\t}\n\n\tisAvailable( /*name*/ ) {\n\n\t\treturn false;\n\n\t}\n\n\tgetInstanceIndex() {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetFrontFacing() {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetTexture( /* textureProperty, uvSnippet */ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetTextureLevel( /* textureProperty, uvSnippet, levelSnippet */ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetCubeTexture( /* textureProperty, uvSnippet */ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetCubeTextureLevel( /* textureProperty, uvSnippet, levelSnippet */ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\t// @TODO: rename to .generateConst()\n\tgetConst( type, value ) {\n\n\t\tif ( type === 'float' ) return toFloat( value );\n\t\tif ( type === 'int' ) return `${ Math.round( value ) }`;\n\t\tif ( type === 'uint' ) return value >= 0 ? `${ Math.round( value ) }u` : '0u';\n\t\tif ( type === 'bool' ) return value ? 'true' : 'false';\n\t\tif ( type === 'color' ) return `${ this.getType( 'vec3' ) }( ${ toFloat( value.r ) }, ${ toFloat( value.g ) }, ${ toFloat( value.b ) } )`;\n\n\t\tconst typeLength = this.getTypeLength( type );\n\n\t\tconst componentType = this.getComponentType( type );\n\n\t\tconst getConst = value => this.getConst( componentType, value );\n\n\t\tif ( typeLength === 2 ) {\n\n\t\t\treturn `${ this.getType( type ) }( ${ getConst( value.x ) }, ${ getConst( value.y ) } )`;\n\n\t\t} else if ( typeLength === 3 ) {\n\n\t\t\treturn `${ this.getType( type ) }( ${ getConst( value.x ) }, ${ getConst( value.y ) }, ${ getConst( value.z ) } )`;\n\n\t\t} else if ( typeLength === 4 ) {\n\n\t\t\treturn `${ this.getType( type ) }( ${ getConst( value.x ) }, ${ getConst( value.y ) }, ${ getConst( value.z ) }, ${ getConst( value.w ) } )`;\n\n\t\t} else if ( typeLength > 4 ) {\n\n\t\t\treturn `${ this.getType( type ) }()`;\n\n\t\t}\n\n\t\tthrow new Error( `NodeBuilder: Type '${type}' not found in generate constant attempt.` );\n\n\t}\n\n\tgetType( type ) {\n\n\t\treturn type;\n\n\t}\n\n\tgenerateMethod( method ) {\n\n\t\treturn method;\n\n\t}\n\n\tgetAttribute( name, type ) {\n\n\t\tconst attributes = this.attributes;\n\n\t\t// find attribute\n\n\t\tfor ( const attribute of attributes ) {\n\n\t\t\tif ( attribute.name === name ) {\n\n\t\t\t\treturn attribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create a new if no exist\n\n\t\tconst attribute = new NodeAttribute( name, type );\n\n\t\tattributes.push( attribute );\n\n\t\treturn attribute;\n\n\t}\n\n\tgetPropertyName( node/*, shaderStage*/ ) {\n\n\t\treturn node.name;\n\n\t}\n\n\tisVector( type ) {\n\n\t\treturn /vec\\d/.test( type );\n\n\t}\n\n\tisMatrix( type ) {\n\n\t\treturn /mat\\d/.test( type );\n\n\t}\n\n\tisReference( type ) {\n\n\t\treturn type === 'void' || type === 'property' || type === 'sampler' || type === 'texture' || type === 'cubeTexture';\n\n\t}\n\n\tisShaderStage( shaderStage ) {\n\n\t\treturn this.shaderStage === shaderStage;\n\n\t}\n\n\tgetTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( map && map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\n\n\t\t\tencoding = map.texture.encoding;\n\n\t\t} else {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tgetComponentType( type ) {\n\n\t\ttype = this.getVectorType( type );\n\n\t\tconst componentType = /(b|i|u|)(vec|mat)([2-4])/.exec( type );\n\n\t\tif ( componentType === null ) return null;\n\n\t\tif ( componentType[ 1 ] === 'b' ) return 'bool';\n\t\tif ( componentType[ 1 ] === 'i' ) return 'int';\n\t\tif ( componentType[ 1 ] === 'u' ) return 'uint';\n\n\t\treturn 'float';\n\n\t}\n\n\tgetVectorType( type ) {\n\n\t\tif ( type === 'color' ) return 'vec3';\n\t\tif ( type === 'texture' ) return 'vec4';\n\n\t\treturn type;\n\n\t}\n\n\tgetTypeFromLength( length ) {\n\n\t\treturn typeFromLength.get( length );\n\n\t}\n\n\tgetTypeLength( type ) {\n\n\t\tconst vecType = this.getVectorType( type );\n\t\tconst vecNum = /vec([2-4])/.exec( vecType );\n\n\t\tif ( vecNum !== null ) return Number( vecNum[ 1 ] );\n\t\tif ( vecType === 'float' || vecType === 'bool' || vecType === 'int' || vecType === 'uint' ) return 1;\n\t\tif ( /mat3/.test( type ) === true ) return 9;\n\t\tif ( /mat4/.test( type ) === true ) return 16;\n\n\t\treturn 0;\n\n\t}\n\n\tgetVectorFromMatrix( type ) {\n\n\t\treturn type.replace( 'mat', 'vec' );\n\n\t}\n\n\tgetDataFromNode( node, shaderStage = this.shaderStage ) {\n\n\t\tlet nodeData = this.nodesData.get( node );\n\n\t\tif ( nodeData === undefined ) {\n\n\t\t\tnodeData = { vertex: {}, fragment: {}, compute: {} };\n\n\t\t\tthis.nodesData.set( node, nodeData );\n\n\t\t}\n\n\t\treturn shaderStage !== null ? nodeData[ shaderStage ] : nodeData;\n\n\t}\n\n\tgetNodeProperties( node, shaderStage = this.shaderStage ) {\n\n\t\tconst nodeData = this.getDataFromNode( this, shaderStage );\n\t\tconst constructHash = node.getConstructHash( this );\n\n\t\tnodeData.properties = nodeData.properties || {};\n\t\tnodeData.properties[ constructHash ] = nodeData.properties[ constructHash ] || { outputNode: null };\n\n\t\treturn nodeData.properties[ constructHash ];\n\n\t}\n\n\tgetUniformFromNode( node, shaderStage, type ) {\n\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\n\n\t\tlet nodeUniform = nodeData.uniform;\n\n\t\tif ( nodeUniform === undefined ) {\n\n\t\t\tconst index = this.uniforms.index ++;\n\n\t\t\tnodeUniform = new NodeUniform( 'nodeUniform' + index, type, node );\n\n\t\t\tthis.uniforms[ shaderStage ].push( nodeUniform );\n\n\t\t\tnodeData.uniform = nodeUniform;\n\n\t\t}\n\n\t\treturn nodeUniform;\n\n\t}\n\n\tgetVarFromNode( node, type, shaderStage = this.shaderStage ) {\n\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\n\n\t\tlet nodeVar = nodeData.variable;\n\n\t\tif ( nodeVar === undefined ) {\n\n\t\t\tconst vars = this.vars[ shaderStage ];\n\t\t\tconst index = vars.length;\n\n\t\t\tnodeVar = new NodeVar( 'nodeVar' + index, type );\n\n\t\t\tvars.push( nodeVar );\n\n\t\t\tnodeData.variable = nodeVar;\n\n\t\t}\n\n\t\treturn nodeVar;\n\n\t}\n\n\tgetVaryingFromNode( node, type ) {\n\n\t\tconst nodeData = this.getDataFromNode( node, null );\n\n\t\tlet nodeVarying = nodeData.varying;\n\n\t\tif ( nodeVarying === undefined ) {\n\n\t\t\tconst varyings = this.varyings;\n\t\t\tconst index = varyings.length;\n\n\t\t\tnodeVarying = new NodeVarying( 'nodeVarying' + index, type );\n\n\t\t\tvaryings.push( nodeVarying );\n\n\t\t\tnodeData.varying = nodeVarying;\n\n\t\t}\n\n\t\treturn nodeVarying;\n\n\t}\n\n\tgetCodeFromNode( node, type, shaderStage = this.shaderStage ) {\n\n\t\tconst nodeData = this.getDataFromNode( node );\n\n\t\tlet nodeCode = nodeData.code;\n\n\t\tif ( nodeCode === undefined ) {\n\n\t\t\tconst codes = this.codes[ shaderStage ];\n\t\t\tconst index = codes.length;\n\n\t\t\tnodeCode = new NodeCode( 'nodeCode' + index, type );\n\n\t\t\tcodes.push( nodeCode );\n\n\t\t\tnodeData.code = nodeCode;\n\n\t\t}\n\n\t\treturn nodeCode;\n\n\t}\n\n\taddFlowCode( code ) {\n\n\t\tthis.flow.code += code;\n\n\t}\n\n\tgetFlowData( node/*, shaderStage*/ ) {\n\n\t\treturn this.flowsData.get( node );\n\n\t}\n\n\tflowNode( node ) {\n\n\t\tconst output = node.getNodeType( this );\n\n\t\tconst flowData = this.flowChildNode( node, output );\n\n\t\tthis.flowsData.set( node, flowData );\n\n\t\treturn flowData;\n\n\t}\n\n\tflowChildNode( node, output = null ) {\n\n\t\tconst previousFlow = this.flow;\n\n\t\tconst flow = {\n\t\t\tcode: '',\n\t\t};\n\n\t\tthis.flow = flow;\n\n\t\tflow.result = node.build( this, output );\n\n\t\tthis.flow = previousFlow;\n\n\t\treturn flow;\n\n\t}\n\n\tflowNodeFromShaderStage( shaderStage, node, output = null, propertyName = null ) {\n\n\t\tconst previousShaderStage = this.shaderStage;\n\n\t\tthis.setShaderStage( shaderStage );\n\n\t\tconst flowData = this.flowChildNode( node, output );\n\n\t\tif ( propertyName !== null ) {\n\n\t\t\tflowData.code += `${propertyName} = ${flowData.result};\\n\\t`;\n\n\t\t}\n\n\t\tthis.flowCode[ shaderStage ] = this.flowCode[ shaderStage ] + flowData.code;\n\n\t\tthis.setShaderStage( previousShaderStage );\n\n\t\treturn flowData;\n\n\t}\n\n\tgetAttributes( /*shaderStage*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetVaryings( /*shaderStage*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetVars( shaderStage ) {\n\n\t\tlet snippet = '';\n\n\t\tconst vars = this.vars[ shaderStage ];\n\n\t\tfor ( const variable of vars ) {\n\n\t\t\tsnippet += `${variable.type} ${variable.name}; `;\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n\tgetUniforms( /*shaderStage*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetCodes( shaderStage ) {\n\n\t\tconst codes = this.codes[ shaderStage ];\n\n\t\tlet code = '';\n\n\t\tfor ( const nodeCode of codes ) {\n\n\t\t\tcode += nodeCode.code + '\\n';\n\n\t\t}\n\n\t\treturn code;\n\n\t}\n\n\tgetHash() {\n\n\t\treturn this.vertexShader + this.fragmentShader + this.computeShader;\n\n\t}\n\n\tsetShaderStage( shaderStage ) {\n\n\t\tthis.shaderStage = shaderStage;\n\n\t}\n\n\tgetShaderStage() {\n\n\t\treturn this.shaderStage;\n\n\t}\n\n\tsetBuildStage( buildStage ) {\n\n\t\tthis.buildStage = buildStage;\n\n\t}\n\n\tgetBuildStage() {\n\n\t\treturn this.buildStage;\n\n\t}\n\n\tbuildCode() {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tbuild() {\n\n\t\t// stage 1: generate shader node\n\n\t\tthis.setBuildStage( 'construct' );\n\n\t\tfor ( const shaderStage of shaderStages ) {\n\n\t\t\tthis.setShaderStage( shaderStage );\n\n\t\t\tconst flowNodes = this.flowNodes[ shaderStage ];\n\n\t\t\tfor ( const node of flowNodes ) {\n\n\t\t\t\tnode.build( this );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// stage 2: analyze nodes to possible optimization and validation\n\n\t\tthis.setBuildStage( 'analyze' );\n\n\t\tfor ( const shaderStage of shaderStages ) {\n\n\t\t\tthis.setShaderStage( shaderStage );\n\n\t\t\tconst flowNodes = this.flowNodes[ shaderStage ];\n\n\t\t\tfor ( const node of flowNodes ) {\n\n\t\t\t\tnode.build( this );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// stage 3: pre-build vertex code used in fragment shader\n\n\t\tthis.setBuildStage( 'generate' );\n\n\t\tif ( this.context.vertex && this.context.vertex.isNode ) {\n\n\t\t\tthis.flowNodeFromShaderStage( 'vertex', this.context.vertex );\n\n\t\t}\n\n\t\t// stage 4: generate shader\n\n\t\tthis.setBuildStage( 'generate' );\n\n\t\tfor ( const shaderStage of shaderStages ) {\n\n\t\t\tthis.setShaderStage( shaderStage );\n\n\t\t\tconst flowNodes = this.flowNodes[ shaderStage ];\n\n\t\t\tfor ( const node of flowNodes ) {\n\n\t\t\t\tthis.flowNode( node );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setBuildStage( null );\n\t\tthis.setShaderStage( null );\n\n\t\t// stage 5: build code for a specific output\n\n\t\tthis.buildCode();\n\n\t\treturn this;\n\n\t}\n\n\tformat( snippet, fromType, toType ) {\n\n\t\tfromType = this.getVectorType( fromType );\n\t\ttoType = this.getVectorType( toType );\n\n\t\tif ( fromType === toType || toType === null || this.isReference( toType ) ) {\n\n\t\t\treturn snippet;\n\n\t\t}\n\n\t\tconst fromTypeLength = this.getTypeLength( fromType );\n\t\tconst toTypeLength = this.getTypeLength( toType );\n\n\t\tif ( fromTypeLength > 4 ) { // fromType is matrix-like\n\n\t\t\t// @TODO: ignore for now\n\n\t\t\treturn snippet;\n\n\t\t}\n\n\t\tif ( toTypeLength > 4 || toTypeLength === 0 ) { // toType is matrix-like or unknown\n\n\t\t\t// @TODO: ignore for now\n\n\t\t\treturn snippet;\n\n\t\t}\n\n\t\tif ( fromTypeLength === toTypeLength ) {\n\n\t\t\treturn `${ this.getType( toType ) }( ${ snippet } )`;\n\n\t\t}\n\n\t\tif ( fromTypeLength > toTypeLength ) {\n\n\t\t\treturn this.format( `${ snippet }.${ 'xyz'.slice( 0, toTypeLength ) }`, this.getTypeFromLength( toTypeLength ), toType );\n\n\t\t}\n\n\t\tif ( toTypeLength === 4 ) { // toType is vec4-like\n\n\t\t\treturn `${ this.getType( toType ) }( ${ this.format( snippet, fromType, 'vec3' ) }, 1.0 )`;\n\n\t\t}\n\n\t\tif ( fromTypeLength === 2 ) { // fromType is vec2-like and toType is vec3-like\n\n\t\t\treturn `${ this.getType( toType ) }( ${ this.format( snippet, fromType, 'vec2' ) }, 0.0 )`;\n\n\t\t}\n\n\t\treturn `${ this.getType( toType ) }( ${ snippet } )`; // fromType is float-like\n\n\t}\n\n\tgetSignature() {\n\n\t\treturn `// Three.js r${ REVISION } - NodeMaterial System\\n`;\n\n\t}\n\n}\n\nexport default NodeBuilder;\n", "import { NodeUpdateType } from './constants.js';\n\nclass NodeFrame {\n\n\tconstructor() {\n\n\t\tthis.time = 0;\n\t\tthis.deltaTime = 0;\n\n\t\tthis.frameId = 0;\n\n\t\tthis.startTime = null;\n\n\t\tthis.updateMap = new WeakMap();\n\n\t\tthis.renderer = null;\n\t\tthis.material = null;\n\t\tthis.camera = null;\n\t\tthis.object = null;\n\n\t}\n\n\tupdateNode( node ) {\n\n\t\tif ( node.updateType === NodeUpdateType.Frame ) {\n\n\t\t\tif ( this.updateMap.get( node ) !== this.frameId ) {\n\n\t\t\t\tthis.updateMap.set( node, this.frameId );\n\n\t\t\t\tnode.update( this );\n\n\t\t\t}\n\n\t\t} else if ( node.updateType === NodeUpdateType.Object ) {\n\n\t\t\tnode.update( this );\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tthis.frameId ++;\n\n\t\tif ( this.lastTime === undefined ) this.lastTime = performance.now();\n\n\t\tthis.deltaTime = ( performance.now() - this.lastTime ) / 1000;\n\n\t\tthis.lastTime = performance.now();\n\n\t\tthis.time += this.deltaTime;\n\n\t}\n\n}\n\nexport default NodeFrame;\n", "class NodeFunctionInput {\n\n\tconstructor( type, name, count = null, qualifier = '', isConst = false ) {\n\n\t\tthis.type = type;\n\t\tthis.name = name;\n\t\tthis.count = count;\n\t\tthis.qualifier = qualifier;\n\t\tthis.isConst = isConst;\n\n\t}\n\n}\n\nNodeFunctionInput.isNodeFunctionInput = true;\n\nexport default NodeFunctionInput;\n", "import Node from './Node.js';\n\nclass PropertyNode extends Node {\n\n\tconstructor( name = null, nodeType = 'vec4' ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.name = name;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst nodeVary = builder.getVarFromNode( this, this.getNodeType( builder ) );\n\t\tconst name = this.name;\n\n\t\tif ( name !== null ) {\n\n\t\t\tnodeVary.name = name;\n\n\t\t}\n\n\t\treturn builder.getPropertyName( nodeVary );\n\n\t}\n\n}\n\nexport default PropertyNode;\n", "import TempNode from '../core/TempNode.js';\n\nclass OperatorNode extends TempNode {\n\n\tconstructor( op, aNode, bNode, ...params ) {\n\n\t\tsuper();\n\n\t\tthis.op = op;\n\n\t\tif ( params.length > 0 ) {\n\n\t\t\tlet finalBNode = bNode;\n\n\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\n\n\t\t\t\tfinalBNode = new OperatorNode( op, finalBNode, params[ i ] );\n\n\t\t\t}\n\n\t\t\tbNode = finalBNode;\n\n\t\t}\n\n\t\tthis.aNode = aNode;\n\t\tthis.bNode = bNode;\n\n\t}\n\n\tgetNodeType( builder, output ) {\n\n\t\tconst op = this.op;\n\n\t\tconst aNode = this.aNode;\n\t\tconst bNode = this.bNode;\n\n\t\tconst typeA = aNode.getNodeType( builder );\n\t\tconst typeB = bNode.getNodeType( builder );\n\n\t\tif ( typeA === 'void' || typeB === 'void' ) {\n\n\t\t\treturn 'void';\n\n\t\t} else if ( op === '=' || op === '%' ) {\n\n\t\t\treturn typeA;\n\n\t\t} else if ( op === '&' || op === '|' || op === '^' || op === '>>' || op === '<<' ) {\n\n\t\t\treturn 'int';\n\n\t\t} else if ( op === '==' || op === '&&' || op === '||' || op === '^^' ) {\n\n\t\t\treturn 'bool';\n\n\t\t} else if ( op === '<' || op === '>' || op === '<=' || op === '>=' ) {\n\n\t\t\tconst typeLength = builder.getTypeLength( output );\n\n\t\t\treturn typeLength > 1 ? `bvec${ typeLength }` : 'bool';\n\n\t\t} else {\n\n\t\t\tif ( typeA === 'float' && builder.isMatrix( typeB ) ) {\n\n\t\t\t\treturn typeB;\n\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\n\n\t\t\t\t// matrix x vector\n\n\t\t\t\treturn builder.getVectorFromMatrix( typeA );\n\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\n\n\t\t\t\t// vector x matrix\n\n\t\t\t\treturn builder.getVectorFromMatrix( typeB );\n\n\t\t\t} else if ( builder.getTypeLength( typeB ) > builder.getTypeLength( typeA ) ) {\n\n\t\t\t\t// anytype x anytype: use the greater length vector\n\n\t\t\t\treturn typeB;\n\n\t\t\t}\n\n\t\t\treturn typeA;\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst op = this.op;\n\n\t\tconst aNode = this.aNode;\n\t\tconst bNode = this.bNode;\n\n\t\tconst type = this.getNodeType( builder, output );\n\n\t\tlet typeA = null;\n\t\tlet typeB = null;\n\n\t\tif ( type !== 'void' ) {\n\n\t\t\ttypeA = aNode.getNodeType( builder );\n\t\t\ttypeB = bNode.getNodeType( builder );\n\n\t\t\tif ( op === '=' ) {\n\n\t\t\t\ttypeB = typeA;\n\n\t\t\t} else if ( op === '<' || op === '>' || op === '<=' || op === '>=' ) {\n\n\t\t\t\tif ( builder.isVector( typeA ) ) {\n\n\t\t\t\t\ttypeB = typeA;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttypeA = typeB = 'float';\n\n\t\t\t\t}\n\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\n\n\t\t\t\t// matrix x vector\n\n\t\t\t\ttypeB = builder.getVectorFromMatrix( typeA );\n\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\n\n\t\t\t\t// vector x matrix\n\n\t\t\t\ttypeA = builder.getVectorFromMatrix( typeB );\n\n\t\t\t} else {\n\n\t\t\t\t// anytype x anytype\n\n\t\t\t\ttypeA = typeB = type;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\ttypeA = typeB = type;\n\n\t\t}\n\n\t\tconst a = aNode.build( builder, typeA );\n\t\tconst b = bNode.build( builder, typeB );\n\n\t\tconst outputLength = builder.getTypeLength( output );\n\n\t\tif ( output !== 'void' ) {\n\n\t\t\tif ( op === '=' ) {\n\n\t\t\t\tbuilder.addFlowCode( `${a} ${this.op} ${b}` );\n\n\t\t\t\treturn a;\n\n\t\t\t} else if ( op === '>' && outputLength > 1 ) {\n\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThan' ) }( ${a}, ${b} )`, type, output );\n\n\t\t\t} else if ( op === '<=' && outputLength > 1 ) {\n\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThanEqual' ) }( ${a}, ${b} )`, type, output );\n\n\t\t\t} else {\n\n\t\t\t\treturn builder.format( `( ${a} ${this.op} ${b} )`, type, output );\n\n\t\t\t}\n\n\t\t} else if ( typeA !== 'void' ) {\n\n\t\t\treturn builder.format( `${a} ${this.op} ${b}`, type, output );\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.op = this.op;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.op = data.op;\n\n\t}\n\n}\n\nexport default OperatorNode;\n", "import Node from './Node.js';\nimport OperatorNode from '../math/OperatorNode.js';\n\nclass VarNode extends Node {\n\n\tconstructor( node, name = null ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.name = name;\n\n\t}\n\n\top( op, ...params ) {\n\n\t\tthis.node = new OperatorNode( op, this.node, ...params );\n\n\t\treturn this;\n\n\t}\n\n\tassign( ...params ) {\n\n\t\treturn this.op( '=', ...params );\n\n\t}\n\n\tadd( ...params ) {\n\n\t\treturn this.op( '+', ...params );\n\n\t}\n\n\tsub( ...params ) {\n\n\t\treturn this.op( '-', ...params );\n\n\t}\n\n\tmul( ...params ) {\n\n\t\treturn this.op( '*', ...params );\n\n\t}\n\n\tdiv( ...params ) {\n\n\t\treturn this.op( '/', ...params );\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst node = this.node;\n\t\tconst name = this.name;\n\n\t\tif ( name === null && node.isTempNode === true ) {\n\n\t\t\treturn node.build( builder );\n\n\t\t}\n\n\t\tconst type = builder.getVectorType( this.getNodeType( builder ) );\n\n\t\tconst snippet = node.build( builder, type );\n\t\tconst nodeVar = builder.getVarFromNode( this, type );\n\n\t\tif ( name !== null ) {\n\n\t\t\tnodeVar.name = name;\n\n\t\t}\n\n\t\tconst propertyName = builder.getPropertyName( nodeVar );\n\n\t\tbuilder.addFlowCode( `${propertyName} = ${snippet}` );\n\n\t\treturn propertyName;\n\n\t}\n\n}\n\nexport default VarNode;\n", "import UniformNode from '../core/UniformNode.js';\n\nclass BufferNode extends UniformNode {\n\n\tconstructor( value, bufferType, bufferCount = 0 ) {\n\n\t\tsuper( value, bufferType );\n\n\t\tthis.isBufferNode = true;\n\n\t\tthis.bufferType = bufferType;\n\t\tthis.bufferCount = bufferCount;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'buffer';\n\n\t}\n\n}\n\nexport default BufferNode;\n", "import { Vector3 } from 'three';\nimport Node from '../core/Node.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass Object3DNode extends Node {\n\n\tstatic VIEW_MATRIX = 'viewMatrix';\n\tstatic NORMAL_MATRIX = 'normalMatrix';\n\tstatic WORLD_MATRIX = 'worldMatrix';\n\tstatic POSITION = 'position';\n\tstatic VIEW_POSITION = 'viewPosition';\n\n\tconstructor( scope = Object3DNode.VIEW_MATRIX, object3d = null ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\t\tthis.object3d = object3d;\n\n\t\tthis.updateType = NodeUpdateType.Object;\n\n\t\tthis._uniformNode = new UniformNode( null );\n\n\t}\n\n\tgetNodeType() {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX ) {\n\n\t\t\treturn 'mat4';\n\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\n\n\t\t\treturn 'mat3';\n\n\t\t} else if ( scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION ) {\n\n\t\t\treturn 'vec3';\n\n\t\t}\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst object = this.object3d;\n\t\tconst uniformNode = this._uniformNode;\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === Object3DNode.VIEW_MATRIX ) {\n\n\t\t\tuniformNode.value = object.modelViewMatrix;\n\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\n\n\t\t\tuniformNode.value = object.normalMatrix;\n\n\t\t} else if ( scope === Object3DNode.WORLD_MATRIX ) {\n\n\t\t\tuniformNode.value = object.matrixWorld;\n\n\t\t} else if ( scope === Object3DNode.POSITION ) {\n\n\t\t\tuniformNode.value.setFromMatrixPosition( object.matrixWorld );\n\n\t\t} else if ( scope === Object3DNode.VIEW_POSITION ) {\n\n\t\t\tconst camera = frame.camera;\n\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\n\t\t\tuniformNode.value.setFromMatrixPosition( object.matrixWorld );\n\n\t\t\tuniformNode.value.applyMatrix4( camera.matrixWorldInverse );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX ) {\n\n\t\t\tthis._uniformNode.nodeType = 'mat4';\n\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\n\n\t\t\tthis._uniformNode.nodeType = 'mat3';\n\n\t\t} else if ( scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION ) {\n\n\t\t\tthis._uniformNode.nodeType = 'vec3';\n\n\t\t}\n\n\t\treturn this._uniformNode.build( builder );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nexport default Object3DNode;\n", "import Object3DNode from './Object3DNode.js';\n\nclass CameraNode extends Object3DNode {\n\n\tstatic PROJECTION_MATRIX = 'projectionMatrix';\n\n\tconstructor( scope = CameraNode.POSITION ) {\n\n\t\tsuper( scope );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\treturn 'mat4';\n\n\t\t}\n\n\t\treturn super.getNodeType( builder );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst camera = frame.camera;\n\t\tconst uniformNode = this._uniformNode;\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.projectionMatrix;\n\n\t\t} else if ( scope === CameraNode.VIEW_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.matrixWorldInverse;\n\n\t\t} else {\n\n\t\t\tthis.object3d = camera;\n\n\t\t\tsuper.update( frame );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\tthis._uniformNode.nodeType = 'mat4';\n\n\t\t}\n\n\t\treturn super.generate( builder );\n\n\t}\n\n}\n\nexport default CameraNode;\n", "import AttributeNode from '../core/AttributeNode.js';\n\nclass UVNode extends AttributeNode {\n\n\tconstructor( index = 0 ) {\n\n\t\tsuper( null, 'vec2' );\n\n\t\tthis.isUVNode = true;\n\n\t\tthis.index = index;\n\n\t}\n\n\tgetAttributeName( /*builder*/ ) {\n\n\t\tconst index = this.index;\n\n\t\treturn 'uv' + ( index > 0 ? index + 1 : '' );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.index = this.index;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.index = data.index;\n\n\t}\n\n}\n\nexport default UVNode;\n", "import UniformNode from '../core/UniformNode.js';\nimport UVNode from './UVNode.js';\n\nclass TextureNode extends UniformNode {\n\n\tconstructor( value, uvNode = new UVNode(), levelNode = null ) {\n\n\t\tsuper( value, 'vec4' );\n\n\t\tthis.isTextureNode = true;\n\n\t\tthis.uvNode = uvNode;\n\t\tthis.levelNode = levelNode;\n\n\t}\n\n\tgetUniformHash( /*builder*/ ) {\n\n\t\treturn this.value.uuid;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'texture';\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst texture = this.value;\n\n\t\tif ( ! texture || texture.isTexture !== true ) {\n\n\t\t\tthrow new Error( 'TextureNode: Need a three.js texture.' );\n\n\t\t}\n\n\t\tconst textureProperty = super.generate( builder, 'texture' );\n\n\t\tif ( output === 'sampler' ) {\n\n\t\t\treturn textureProperty + '_sampler';\n\n\t\t} else if ( builder.isReference( output ) ) {\n\n\t\t\treturn textureProperty;\n\n\t\t} else {\n\n\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\tlet snippet = nodeData.snippet;\n\n\t\t\tif ( snippet === undefined ) {\n\n\t\t\t\tconst uvSnippet = this.uvNode.build( builder, 'vec2' );\n\t\t\t\tconst levelNode = this.levelNode;\n\n\t\t\t\tif ( levelNode !== null ) {\n\n\t\t\t\t\tconst levelSnippet = levelNode.build( builder, 'float' );\n\n\t\t\t\t\tsnippet = builder.getTextureLevel( textureProperty, uvSnippet, levelSnippet );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsnippet = builder.getTexture( textureProperty, uvSnippet );\n\n\t\t\t\t}\n\n\t\t\t\tnodeData.snippet = snippet;\n\n\t\t\t}\n\n\t\t\treturn builder.format( snippet, 'vec4', output );\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.value = this.value.toJSON( data.meta ).uuid;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.value = data.meta.textures[ data.value ];\n\n\t}\n\n}\n\nexport default TextureNode;\n", "import Node from '../core/Node.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass ReferenceNode extends Node {\n\n\tconstructor( property, uniformType, object = null ) {\n\n\t\tsuper();\n\n\t\tthis.property = property;\n\n\t\tthis.uniformType = uniformType;\n\n\t\tthis.object = object;\n\n\t\tthis.node = null;\n\n\t\tthis.updateType = NodeUpdateType.Object;\n\n\t\tthis.setNodeType( uniformType );\n\n\t}\n\n\tsetNodeType( uniformType ) {\n\n\t\tthis.node = new UniformNode( null, uniformType );\n\t\tthis.nodeType = uniformType;\n\n\t\tif ( uniformType === 'color' ) {\n\n\t\t\tthis.nodeType = 'vec3';\n\n\t\t} else if ( uniformType === 'texture' ) {\n\n\t\t\tthis.nodeType = 'vec4';\n\n\t\t}\n\n\t}\n\n\tgetNodeType() {\n\n\t\treturn this.uniformType;\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst object = this.object !== null ? this.object : frame.object;\n\t\tconst value = object[ this.property ];\n\n\t\tthis.node.value = value;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\treturn this.node.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n}\n\nexport default ReferenceNode;\n", "import ReferenceNode from './ReferenceNode.js';\n\nclass MaterialReferenceNode extends ReferenceNode {\n\n\tconstructor( property, inputType, material = null ) {\n\n\t\tsuper( property, inputType, material );\n\n\t\tthis.material = material;\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tthis.object = this.material !== null ? this.material : frame.material;\n\n\t\tsuper.update( frame );\n\n\t}\n\n}\n\nexport default MaterialReferenceNode;\n", "import Node from '../core/Node.js';\nimport { vector } from '../core/NodeBuilder.js';\n\nconst vectorComponents = 'xyzw';\n\nclass SplitNode extends Node {\n\n\tconstructor( node, components = 'x' ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.components = components;\n\n\t}\n\n\tgetVectorLength() {\n\n\t\tlet vectorLength = this.components.length;\n\n\t\tfor ( const c of this.components ) {\n\n\t\t\tvectorLength = Math.max( vector.indexOf( c ) + 1, vectorLength );\n\n\t\t}\n\n\t\treturn vectorLength;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn builder.getTypeFromLength( this.components.length );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst node = this.node;\n\t\tconst nodeTypeLength = builder.getTypeLength( node.getNodeType( builder ) );\n\n\t\tlet snippet = null;\n\n\t\tif ( nodeTypeLength > 1 ) {\n\n\t\t\tlet type = null;\n\n\t\t\tconst componentsLength = this.getVectorLength();\n\n\t\t\tif ( componentsLength >= nodeTypeLength ) {\n\n\t\t\t\t// needed expand the input node\n\n\t\t\t\ttype = builder.getTypeFromLength( this.getVectorLength() );\n\n\t\t\t}\n\n\t\t\tconst nodeSnippet = node.build( builder, type );\n\n\t\t\tif ( this.components.length === nodeTypeLength && this.components === vectorComponents.slice( 0, this.components.length ) ) {\n\n\t\t\t\t// unecessary swizzle\n\n\t\t\t\tsnippet = builder.format( nodeSnippet, type, output );\n\n\t\t\t} else {\n\n\t\t\t\tsnippet = builder.format( `${nodeSnippet}.${this.components}`, this.getNodeType( builder ), output );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// ignore .components if .node returns float/integer\n\n\t\t\tsnippet = node.build( builder, output );\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.components = this.components;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.components = data.components;\n\n\t}\n\n}\n\nexport default SplitNode;\n", "import Node from '../core/Node.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MaterialReferenceNode from './MaterialReferenceNode.js';\nimport TextureNode from './TextureNode.js';\nimport SplitNode from '../utils/SplitNode.js';\n\nclass MaterialNode extends Node {\n\n\tstatic ALPHA_TEST = 'alphaTest';\n\tstatic COLOR = 'color';\n\tstatic OPACITY = 'opacity';\n\tstatic ROUGHNESS = 'roughness';\n\tstatic METALNESS = 'metalness';\n\tstatic EMISSIVE = 'emissive';\n\tstatic ROTATION = 'rotation';\n\n\tconstructor( scope = MaterialNode.COLOR ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\t\tconst material = builder.context.material;\n\n\t\tif ( scope === MaterialNode.COLOR ) {\n\n\t\t\treturn material.map !== null ? 'vec4' : 'vec3';\n\n\t\t} else if ( scope === MaterialNode.OPACITY || scope === MaterialNode.ROTATION ) {\n\n\t\t\treturn 'float';\n\n\t\t} else if ( scope === MaterialNode.EMISSIVE ) {\n\n\t\t\treturn 'vec3';\n\n\t\t} else if ( scope === MaterialNode.ROUGHNESS || scope === MaterialNode.METALNESS ) {\n\n\t\t\treturn 'float';\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst material = builder.context.material;\n\t\tconst scope = this.scope;\n\n\t\tlet node = null;\n\n\t\tif ( scope === MaterialNode.ALPHA_TEST ) {\n\n\t\t\tnode = new MaterialReferenceNode( 'alphaTest', 'float' );\n\n\t\t} else if ( scope === MaterialNode.COLOR ) {\n\n\t\t\tconst colorNode = new MaterialReferenceNode( 'color', 'color' );\n\n\t\t\tif ( material.map?.isTexture === true ) {\n\n\t\t\t\t//new MaterialReferenceNode( 'map', 'texture' )\n\t\t\t\tconst map = new TextureNode( material.map );\n\n\t\t\t\tnode = new OperatorNode( '*', colorNode, map );\n\n\t\t\t} else {\n\n\t\t\t\tnode = colorNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.OPACITY ) {\n\n\t\t\tconst opacityNode = new MaterialReferenceNode( 'opacity', 'float' );\n\n\t\t\tif ( material.alphaMap?.isTexture === true ) {\n\n\t\t\t\tnode = new OperatorNode( '*', opacityNode, new MaterialReferenceNode( 'alphaMap', 'texture' ) );\n\n\t\t\t} else {\n\n\t\t\t\tnode = opacityNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.ROUGHNESS ) {\n\n\t\t\tconst roughnessNode = new MaterialReferenceNode( 'roughness', 'float' );\n\n\t\t\tif ( material.roughnessMap?.isTexture === true ) {\n\n\t\t\t\tnode = new OperatorNode( '*', roughnessNode, new SplitNode( new TextureNode( material.roughnessMap ), 'g' ) );\n\n\t\t\t} else {\n\n\t\t\t\tnode = roughnessNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.METALNESS ) {\n\n\t\t\tconst metalnessNode = new MaterialReferenceNode( 'metalness', 'float' );\n\n\t\t\tif ( material.metalnessMap?.isTexture === true ) {\n\n\t\t\t\tnode = new OperatorNode( '*', metalnessNode, new SplitNode( new TextureNode( material.metalnessMap ), 'b' ) );\n\n\t\t\t} else {\n\n\t\t\t\tnode = metalnessNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.EMISSIVE ) {\n\n\t\t\tconst emissiveNode = new MaterialReferenceNode( 'emissive', 'color' );\n\n\t\t\tif ( material.emissiveMap?.isTexture === true ) {\n\n\t\t\t\tnode = new OperatorNode( '*', emissiveNode, new TextureNode( material.emissiveMap ) );\n\n\t\t\t} else {\n\n\t\t\t\tnode = emissiveNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.ROTATION ) {\n\n\t\t\tnode = new MaterialReferenceNode( 'rotation', 'float' );\n\n\t\t} else {\n\n\t\t\tconst outputType = this.getNodeType( builder );\n\n\t\t\tnode = new MaterialReferenceNode( scope, outputType );\n\n\t\t}\n\n\t\treturn node.build( builder, output );\n\n\t}\n\n}\n\nexport default MaterialNode;\n", "import Object3DNode from './Object3DNode.js';\n\nclass ModelNode extends Object3DNode {\n\n\tconstructor( scope = ModelNode.VIEW_MATRIX ) {\n\n\t\tsuper( scope );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tthis.object3d = frame.object;\n\n\t\tsuper.update( frame );\n\n\t}\n\n}\n\nexport default ModelNode;\n", "import TempNode from '../core/Node.js';\n\nclass JoinNode extends TempNode {\n\n\tconstructor( nodes = [] ) {\n\n\t\tsuper();\n\n\t\tthis.nodes = nodes;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn builder.getTypeFromLength( this.nodes.reduce( ( count, cur ) => count + builder.getTypeLength( cur.getNodeType( builder ) ), 0 ) );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst nodes = this.nodes;\n\n\t\tconst snippetValues = [];\n\n\t\tfor ( const input of nodes ) {\n\n\t\t\tconst inputSnippet = input.build( builder );\n\n\t\t\tsnippetValues.push( inputSnippet );\n\n\t\t}\n\n\t\tconst snippet = `${ builder.getType( type ) }( ${ snippetValues.join( ', ' ) } )`;\n\n\t\treturn builder.format( snippet, type, output );\n\n\t}\n\n}\n\nexport default JoinNode;\n", "import TempNode from '../core/TempNode.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport OperatorNode from './OperatorNode.js';\n\nclass MathNode extends TempNode {\n\n\t// 1 input\n\n\tstatic RADIANS = 'radians';\n\tstatic DEGREES = 'degrees';\n\tstatic EXP = 'exp';\n\tstatic EXP2 = 'exp2';\n\tstatic LOG = 'log';\n\tstatic LOG2 = 'log2';\n\tstatic SQRT = 'sqrt';\n\tstatic INVERSE_SQRT = 'inversesqrt';\n\tstatic FLOOR = 'floor';\n\tstatic CEIL = 'ceil';\n\tstatic NORMALIZE = 'normalize';\n\tstatic FRACT = 'fract';\n\tstatic SIN = 'sin';\n\tstatic COS = 'cos';\n\tstatic TAN = 'tan';\n\tstatic ASIN = 'asin';\n\tstatic ACOS = 'acos';\n\tstatic ATAN = 'atan';\n\tstatic ABS = 'abs';\n\tstatic SIGN = 'sign';\n\tstatic LENGTH = 'length';\n\tstatic NEGATE = 'negate';\n\tstatic INVERT = 'invert';\n\tstatic DFDX = 'dFdx';\n\tstatic DFDY = 'dFdy';\n\tstatic SATURATE = 'saturate';\n\tstatic ROUND = 'round';\n\n\t// 2 inputs\n\n\tstatic ATAN2 = 'atan2';\n\tstatic MIN = 'min';\n\tstatic MAX = 'max';\n\tstatic MOD = 'mod';\n\tstatic STEP = 'step';\n\tstatic REFLECT = 'reflect';\n\tstatic DISTANCE = 'distance';\n\tstatic DOT = 'dot';\n\tstatic CROSS = 'cross';\n\tstatic POW = 'pow';\n\tstatic TRANSFORM_DIRECTION = 'transformDirection';\n\n\t// 3 inputs\n\n\tstatic MIX = 'mix';\n\tstatic CLAMP = 'clamp';\n\tstatic REFRACT = 'refract';\n\tstatic SMOOTHSTEP = 'smoothstep';\n\tstatic FACEFORWARD = 'faceforward';\n\n\tconstructor( method, aNode, bNode = null, cNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.method = method;\n\n\t\tthis.aNode = aNode;\n\t\tthis.bNode = bNode;\n\t\tthis.cNode = cNode;\n\n\t}\n\n\tgetInputType( builder ) {\n\n\t\tconst aType = this.aNode.getNodeType( builder );\n\t\tconst bType = this.bNode ? this.bNode.getNodeType( builder ) : null;\n\t\tconst cType = this.cNode ? this.cNode.getNodeType( builder ) : null;\n\n\t\tconst aLen = builder.isMatrix( aType ) ? 0 : builder.getTypeLength( aType );\n\t\tconst bLen = builder.isMatrix( bType ) ? 0 : builder.getTypeLength( bType );\n\t\tconst cLen = builder.isMatrix( cType ) ? 0 : builder.getTypeLength( cType );\n\n\t\tif ( aLen > bLen && aLen > cLen ) {\n\n\t\t\treturn aType;\n\n\t\t} else if ( bLen > cLen ) {\n\n\t\t\treturn bType;\n\n\t\t} else if ( cLen > aLen ) {\n\n\t\t\treturn cType;\n\n\t\t}\n\n\t\treturn aType;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst method = this.method;\n\n\t\tif ( method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT ) {\n\n\t\t\treturn 'float';\n\n\t\t} else if ( method === MathNode.CROSS ) {\n\n\t\t\treturn 'vec3';\n\n\t\t} else {\n\n\t\t\treturn this.getInputType( builder );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst method = this.method;\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst inputType = this.getInputType( builder );\n\n\t\tconst a = this.aNode;\n\t\tconst b = this.bNode;\n\t\tconst c = this.cNode;\n\n\t\tconst isWebGL = builder.renderer.isWebGLRenderer === true;\n\n\t\tif ( isWebGL && ( method === MathNode.DFDX || method === MathNode.DFDY ) && output === 'vec3' ) {\n\n\t\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\t\treturn new JoinNode( [\n\t\t\t\tnew MathNode( method, new SplitNode( a, 'x' ) ),\n\t\t\t\tnew MathNode( method, new SplitNode( a, 'y' ) ),\n\t\t\t\tnew MathNode( method, new SplitNode( a, 'z' ) )\n\t\t\t] ).build( builder );\n\n\t\t} else if ( method === MathNode.TRANSFORM_DIRECTION ) {\n\n\t\t\t// dir can be either a direction vector or a normal vector\n\t\t\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\t\t\tlet tA = a;\n\t\t\tlet tB = b;\n\n\t\t\tif ( builder.isMatrix( tA.getNodeType( builder ) ) ) {\n\n\t\t\t\ttB = new ExpressionNode( `${ builder.getType( 'vec4' ) }( ${ tB.build( builder, 'vec3' ) }, 0.0 )`, 'vec4' );\n\n\t\t\t} else {\n\n\t\t\t\ttA = new ExpressionNode( `${ builder.getType( 'vec4' ) }( ${ tA.build( builder, 'vec3' ) }, 0.0 )`, 'vec4' );\n\n\t\t\t}\n\n\t\t\tconst mulNode = new SplitNode( new OperatorNode( '*', tA, tB ), 'xyz' );\n\n\t\t\treturn new MathNode( MathNode.NORMALIZE, mulNode ).build( builder );\n\n\t\t} else if ( method === MathNode.SATURATE ) {\n\n\t\t\treturn builder.format( `clamp( ${ a.build( builder, inputType ) }, 0.0, 1.0 )`, type, output );\n\n\t\t} else if ( method === MathNode.NEGATE ) {\n\n\t\t\treturn builder.format( '( -' + a.build( builder, inputType ) + ' )', type, output );\n\n\t\t} else if ( method === MathNode.INVERT ) {\n\n\t\t\treturn builder.format( '( 1.0 - ' + a.build( builder, inputType ) + ' )', type, output );\n\n\t\t} else {\n\n\t\t\tconst params = [];\n\n\t\t\tif ( method === MathNode.CROSS ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, type ),\n\t\t\t\t\tb.build( builder, type )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.STEP ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, builder.getTypeLength( a.getNodeType( builder ) ) === 1 ? 'float' : inputType ),\n\t\t\t\t\tb.build( builder, inputType )\n\t\t\t\t);\n\n\t\t\t} else if ( ( isWebGL && ( method === MathNode.MIN || method === MathNode.MAX ) ) || method === MathNode.MOD ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, builder.getTypeLength( b.getNodeType( builder ) ) === 1 ? 'float' : inputType )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.REFRACT ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, inputType ),\n\t\t\t\t\tc.build( builder, 'float' )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.MIX ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, inputType ),\n\t\t\t\t\tc.build( builder, builder.getTypeLength( c.getNodeType( builder ) ) === 1 ? 'float' : inputType )\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tparams.push( a.build( builder, inputType ) );\n\n\t\t\t\tif ( c !== null ) {\n\n\t\t\t\t\tparams.push( b.build( builder, inputType ), c.build( builder, inputType ) );\n\n\t\t\t\t} else if ( b !== null ) {\n\n\t\t\t\t\tparams.push( b.build( builder, inputType ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn builder.format( `${ builder.getMethod( method ) }( ${params.join( ', ' )} )`, type, output );\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.method = this.method;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.method = data.method;\n\n\t}\n\n}\n\nexport default MathNode;\n", "import Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryingNode from '../core/VaryingNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport MathNode from '../math/MathNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\n\nclass PositionNode extends Node {\n\n\tstatic GEOMETRY = 'geometry';\n\tstatic LOCAL = 'local';\n\tstatic WORLD = 'world';\n\tstatic VIEW = 'view';\n\tstatic VIEW_DIRECTION = 'viewDirection';\n\n\tconstructor( scope = PositionNode.LOCAL ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `position-${this.scope}`;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tlet outputNode = null;\n\n\t\tif ( scope === PositionNode.GEOMETRY ) {\n\n\t\t\toutputNode = new AttributeNode( 'position', 'vec3' );\n\n\t\t} else if ( scope === PositionNode.LOCAL ) {\n\n\t\t\toutputNode = new VaryingNode( new PositionNode( PositionNode.GEOMETRY ) );\n\n\t\t} else if ( scope === PositionNode.WORLD ) {\n\n\t\t\tconst vertexPositionNode = new MathNode( MathNode.TRANSFORM_DIRECTION, new ModelNode( ModelNode.WORLD_MATRIX ), new PositionNode( PositionNode.LOCAL ) );\n\t\t\toutputNode = new VaryingNode( vertexPositionNode );\n\n\t\t} else if ( scope === PositionNode.VIEW ) {\n\n\t\t\tconst vertexPositionNode = new OperatorNode( '*', new ModelNode( ModelNode.VIEW_MATRIX ), new PositionNode( PositionNode.LOCAL ) );\n\t\t\toutputNode = new VaryingNode( vertexPositionNode );\n\n\t\t} else if ( scope === PositionNode.VIEW_DIRECTION ) {\n\n\t\t\tconst vertexPositionNode = new MathNode( MathNode.NEGATE, new PositionNode( PositionNode.VIEW ) );\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexPositionNode ) );\n\n\t\t}\n\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nexport default PositionNode;\n", "import Node from '../core/Node.js';\nimport CameraNode from '../accessors/CameraNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport PositionNode from '../accessors/PositionNode.js';\n\nclass ModelViewProjectionNode extends Node {\n\n\tconstructor( position = new PositionNode() ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.position = position;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst position = this.position;\n\n\t\tconst mvpMatrix = new OperatorNode( '*', new CameraNode( CameraNode.PROJECTION_MATRIX ), new ModelNode( ModelNode.VIEW_MATRIX ) );\n\t\tconst mvpNode = new OperatorNode( '*', mvpMatrix, position );\n\n\t\treturn mvpNode.build( builder );\n\n\t}\n\n}\n\nexport default ModelViewProjectionNode;\n", "import Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryingNode from '../core/VaryingNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport CameraNode from '../accessors/CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\n\nclass NormalNode extends Node {\n\n\tstatic GEOMETRY = 'geometry';\n\tstatic LOCAL = 'local';\n\tstatic WORLD = 'world';\n\tstatic VIEW = 'view';\n\n\tconstructor( scope = NormalNode.LOCAL ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `normal-${this.scope}`;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tlet outputNode = null;\n\n\t\tif ( scope === NormalNode.GEOMETRY ) {\n\n\t\t\toutputNode = new AttributeNode( 'normal', 'vec3' );\n\n\t\t} else if ( scope === NormalNode.LOCAL ) {\n\n\t\t\toutputNode = new VaryingNode( new NormalNode( NormalNode.GEOMETRY ) );\n\n\t\t} else if ( scope === NormalNode.VIEW ) {\n\n\t\t\tconst vertexNormalNode = new OperatorNode( '*', new ModelNode( ModelNode.NORMAL_MATRIX ), new NormalNode( NormalNode.LOCAL ) );\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexNormalNode ) );\n\n\t\t} else if ( scope === NormalNode.WORLD ) {\n\n\t\t\t// To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\n\t\t\tconst vertexNormalNode = new MathNode( MathNode.TRANSFORM_DIRECTION, new NormalNode( NormalNode.VIEW ), new CameraNode( CameraNode.VIEW_MATRIX ) );\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexNormalNode ) );\n\n\t\t}\n\n\t\treturn outputNode.build( builder );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nexport default NormalNode;\n", "import Node from '../core/Node.js';\n\nclass PointUVNode extends Node {\n\n\tconstructor() {\n\n\t\tsuper( 'vec2' );\n\n\t\tthis.isPointUVNode = true;\n\n\t}\n\n\tgenerate( /*builder*/ ) {\n\n\t\treturn 'vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )';\n\n\t}\n\n}\n\nexport default PointUVNode;\n", "import BufferNode from './BufferNode.js';\n\nclass StorageBufferNode extends BufferNode {\n\n\tconstructor( value, bufferType, bufferCount = 0 ) {\n\n\t\tsuper( value, bufferType, bufferCount );\n\n\t\tthis.isStorageBufferNode = true;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'storageBuffer';\n\n\t}\n\n}\n\nexport default StorageBufferNode;\n", "import ReferenceNode from './ReferenceNode.js';\n\nclass UserDataNode extends ReferenceNode {\n\n\tconstructor( property, inputType, userData = null ) {\n\n\t\tsuper( property, inputType, userData );\n\n\t\tthis.userData = userData;\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tthis.object = this.userData !== null ? this.userData : frame.object.userData;\n\n\t\tsuper.update( frame );\n\n\t}\n\n}\n\nexport default UserDataNode;\n", "import Node from '../core/Node.js';\n\nclass FrontFacingNode extends Node {\n\n\tconstructor() {\n\n\t\tsuper( 'bool' );\n\n\t\tthis.isFrontFacingNode = true;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\treturn builder.getFrontFacing();\n\n\t}\n\n}\n\nexport default FrontFacingNode;\n", "import Node from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass ComputeNode extends Node {\n\n\tconstructor( computeNode, count, workgroupSize = [ 64 ] ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.isComputeNode = true;\n\n\t\tthis.computeNode = computeNode;\n\n\t\tthis.count = count;\n\t\tthis.workgroupSize = workgroupSize;\n\t\tthis.dispatchCount = 0;\n\n\t\tthis.updateType = NodeUpdateType.Object;\n\n\t\tthis.updateDispatchCount();\n\n\t}\n\n\tupdateDispatchCount() {\n\n\t\tconst { count, workgroupSize } = this;\n\n\t\tlet size = workgroupSize[ 0 ];\n\n\t\tfor ( let i = 1; i < workgroupSize.length; i ++ )\n\t\t\tsize *= workgroupSize[ i ];\n\n\t\tthis.dispatchCount = Math.ceil( count / size );\n\n\t}\n\n\tonInit() { }\n\n\tupdate( { renderer } ) {\n\n\t\trenderer.compute( this );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { shaderStage } = builder;\n\n\t\tif ( shaderStage === 'compute' ) {\n\n\t\t\tconst snippet = this.computeNode.build( builder, 'void' );\n\n\t\t\tif ( snippet !== '' ) {\n\n\t\t\t\tbuilder.addFlowCode( snippet );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport default ComputeNode;\n", "import Node from '../core/Node.js';\nimport PropertyNode from '../core/PropertyNode.js';\nimport ContextNode from '../core/ContextNode.js';\n\nclass CondNode extends Node {\n\n\tconstructor( condNode, ifNode, elseNode ) {\n\n\t\tsuper();\n\n\t\tthis.condNode = condNode;\n\n\t\tthis.ifNode = ifNode;\n\t\tthis.elseNode = elseNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst ifType = this.ifNode.getNodeType( builder );\n\t\tconst elseType = this.elseNode.getNodeType( builder );\n\n\t\tif ( builder.getTypeLength( elseType ) > builder.getTypeLength( ifType ) ) {\n\n\t\t\treturn elseType;\n\n\t\t}\n\n\t\treturn ifType;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst context = { tempWrite: false };\n\t\tconst nodeProperty = new PropertyNode( null, type ).build( builder );\n\n\t\tconst nodeSnippet = new ContextNode( this.condNode/*, context*/ ).build( builder, 'bool' ),\n\t\t\tifSnippet = new ContextNode( this.ifNode, context ).build( builder, type ),\n\t\t\telseSnippet = new ContextNode( this.elseNode, context ).build( builder, type );\n\n\t\tbuilder.addFlowCode( `if ( ${nodeSnippet} ) {\n\n\\t\\t${nodeProperty} = ${ifSnippet};\n\n\\t} else {\n\n\\t\\t${nodeProperty} = ${elseSnippet};\n\n\\t}` );\n\n\t\treturn nodeProperty;\n\n\t}\n\n}\n\nexport default CondNode;\n", "import TempNode from '../core/Node.js';\n\nclass ArrayElementNode extends TempNode {\n\n\tconstructor( node, indexNode ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.indexNode = indexNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst nodeSnippet = this.node.build( builder );\n\t\tconst indexSnippet = this.indexNode.build( builder, 'uint' );\n\n\t\treturn `${nodeSnippet}[ ${indexSnippet} ]`;\n\n\t}\n\n}\n\nexport default ArrayElementNode;\n", "import Node from '../core/Node.js';\n\nclass ConvertNode extends Node {\n\n\tconstructor( node, convertTo ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.convertTo = convertTo;\n\n\t}\n\n\tgetNodeType( /*builder*/ ) {\n\n\t\treturn this.convertTo;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst convertTo = this.convertTo;\n\t\tconst node = this.node;\n\t\tconst type = this.getNodeType( builder );\n\n\t\tlet snippet = null;\n\n\t\tif ( builder.isReference( convertTo ) === false ) {\n\n\t\t\tconst nodeSnippet = node.build( builder, convertTo );\n\n\t\t\tsnippet = builder.format( nodeSnippet, type, convertTo );\n\n\t\t} else {\n\n\t\t\tsnippet = node.build( builder, convertTo );\n\n\t\t}\n\n\t\treturn builder.format( snippet, type, output );\n\n\t}\n\n}\n\nexport default ConvertNode;\n", "import ArrayElementNode from '../utils/ArrayElementNode.js';\nimport ConvertNode from '../utils/ConvertNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport ConstNode from '../core/ConstNode.js';\nimport { getValueFromType } from '../core/NodeUtils.js';\n\nconst shaderNodeHandler = {\n\n\tconstruct( NodeClosure, params ) {\n\n\t\tconst inputs = params.shift();\n\n\t\treturn NodeClosure( nodeObjects( inputs ), ...params );\n\n\t},\n\n\tget: function ( node, prop ) {\n\n\t\tif ( typeof prop === 'string' && node[ prop ] === undefined ) {\n\n\t\t\tif ( /^[xyzwrgbastpq]{1,4}$/.test( prop ) === true ) {\n\n\t\t\t\t// accessing properties ( swizzle )\n\n\t\t\t\tprop = prop\n\t\t\t\t\t.replace( /r|s/g, 'x' )\n\t\t\t\t\t.replace( /g|t/g, 'y' )\n\t\t\t\t\t.replace( /b|p/g, 'z' )\n\t\t\t\t\t.replace( /a|q/g, 'w' );\n\n\t\t\t\treturn nodeObject( new SplitNode( node, prop ) );\n\n\t\t\t} else if ( /^\\d+$/.test( prop ) === true ) {\n\n\t\t\t\t// accessing array\n\n\t\t\t\treturn nodeObject( new ArrayElementNode( node, new ConstNode( Number( prop ), 'uint' ) ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn node[ prop ];\n\n\t}\n\n};\n\nconst nodeObjectsCacheMap = new WeakMap();\n\nconst ShaderNodeObject = function ( obj ) {\n\n\tconst type = typeof obj;\n\n\tif ( ( type === 'number' ) || ( type === 'boolean' ) ) {\n\n\t\treturn nodeObject( getAutoTypedConstNode( obj ) );\n\n\t} else if ( type === 'object' ) {\n\n\t\tif ( obj?.isNode === true ) {\n\n\t\t\tlet nodeObject = nodeObjectsCacheMap.get( obj );\n\n\t\t\tif ( nodeObject === undefined ) {\n\n\t\t\t\tnodeObject = new Proxy( obj, shaderNodeHandler );\n\t\t\t\tnodeObjectsCacheMap.set( obj, nodeObject );\n\t\t\t\tnodeObjectsCacheMap.set( nodeObject, nodeObject );\n\n\t\t\t}\n\n\t\t\treturn nodeObject;\n\n\t\t}\n\n\t}\n\n\treturn obj;\n\n};\n\nconst ShaderNodeObjects = function ( objects ) {\n\n\tfor ( const name in objects ) {\n\n\t\tobjects[ name ] = nodeObject( objects[ name ] );\n\n\t}\n\n\treturn objects;\n\n};\n\nconst ShaderNodeArray = function ( array ) {\n\n\tconst len = array.length;\n\n\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\tarray[ i ] = nodeObject( array[ i ] );\n\n\t}\n\n\treturn array;\n\n};\n\nconst ShaderNodeProxy = function ( NodeClass, scope = null, factor = null ) {\n\n\tif ( scope === null ) {\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn nodeObject( new NodeClass( ...nodeArray( params ) ) );\n\n\t\t};\n\n\t} else if ( factor === null ) {\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn nodeObject( new NodeClass( scope, ...nodeArray( params ) ) );\n\n\t\t};\n\n\t} else {\n\n\t\tfactor = nodeObject( factor );\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn nodeObject( new NodeClass( scope, ...nodeArray( params ), factor ) );\n\n\t\t};\n\n\t}\n\n};\n\nconst ShaderNodeImmutable = function ( NodeClass, ...params ) {\n\n\treturn nodeObject( new NodeClass( ...nodeArray( params ) ) );\n\n};\n\nconst ShaderNodeScript = function ( jsFunc ) {\n\n\t// @TODO: Move this to Node extended class\n\n\tconst self = {\n\n\t\tbuild: ( builder ) => {\n\n\t\t\tself.call( {}, builder );\n\n\t\t\treturn '';\n\n\t\t},\n\n\t\tcall: ( inputs, builder ) => {\n\n\t\t\tinputs = nodeObjects( inputs );\n\n\t\t\treturn nodeObject( jsFunc( inputs, builder ) );\n\n\t\t}\n\n\t};\n\n\treturn self;\n\n};\n\nexport const ShaderNode = new Proxy( ShaderNodeScript, shaderNodeHandler );\n\nexport const nodeObject = ( val ) => /* new */ ShaderNodeObject( val );\nexport const nodeObjects = ( val ) => new ShaderNodeObjects( val );\nexport const nodeArray = ( val ) => new ShaderNodeArray( val );\nexport const nodeProxy = ( ...val ) => new ShaderNodeProxy( ...val );\nexport const nodeImmutable = ( ...val ) => new ShaderNodeImmutable( ...val );\n\nconst bools = [ false, true ];\nconst uints = [ 0, 1, 2, 3 ];\nconst ints = [ - 1, - 2 ];\nconst floats = [ 0.5, 1.5, 1 / 3, 1e-6, 1e6, Math.PI, Math.PI * 2, 1 / Math.PI, 2 / Math.PI, 1 / ( Math.PI * 2 ), Math.PI / 2 ];\n\nconst boolsCacheMap = new Map();\nfor ( const bool of bools ) boolsCacheMap.set( bool, new ConstNode( bool ) );\n\nconst uintsCacheMap = new Map();\nfor ( const uint of uints ) uintsCacheMap.set( uint, new ConstNode( uint, 'uint' ) );\n\nconst intsCacheMap = new Map( [ ...uintsCacheMap ].map( el => new ConstNode( el.value, 'int' ) ) );\nfor ( const int of ints ) intsCacheMap.set( int, new ConstNode( int, 'int' ) );\n\nconst floatsCacheMap = new Map( [ ...intsCacheMap ].map( el => new ConstNode( el.value ) ) );\nfor ( const float of floats ) floatsCacheMap.set( float, new ConstNode( float ) );\nfor ( const float of floats ) floatsCacheMap.set( - float, new ConstNode( - float ) );\n\nexport const cacheMaps = { bool: boolsCacheMap, uint: uintsCacheMap, ints: intsCacheMap, float: floatsCacheMap };\n\nconst constNodesCacheMap = new Map( [ ...boolsCacheMap, ...floatsCacheMap ] );\n\nconst getAutoTypedConstNode = ( value ) => {\n\n\tif ( constNodesCacheMap.has( value ) ) {\n\n\t\treturn constNodesCacheMap.get( value );\n\n\t} else if ( value.isNode === true ) {\n\n\t\treturn value;\n\n\t} else {\n\n\t\treturn new ConstNode( value );\n\n\t}\n\n};\n\nexport const ConvertType = function ( type, cacheMap = null ) {\n\n\treturn ( ...params ) => {\n\n\t\tif ( params.length === 0 ) {\n\n\t\t\treturn nodeObject( new ConstNode( getValueFromType( type ), type ) );\n\n\t\t} else {\n\n\t\t\tif ( type === 'color' && params[ 0 ].isNode !== true ) {\n\n\t\t\t\tparams = [ getValueFromType( type, ...params ) ];\n\n\t\t\t}\n\n\t\t\tif ( params.length === 1 && cacheMap !== null && cacheMap.has( params[ 0 ] ) ) {\n\n\t\t\t\treturn cacheMap.get( params[ 0 ] );\n\n\t\t\t}\n\n\t\t\tconst nodes = params.map( getAutoTypedConstNode );\n\n\t\t\tif ( nodes.length === 1 ) {\n\n\t\t\t\treturn nodeObject( nodes[ 0 ].nodeType === type ? nodes[ 0 ] : new ConvertNode( nodes[ 0 ], type ) );\n\n\t\t\t}\n\n\t\t\treturn nodeObject( new ConvertNode( new JoinNode( nodes ), type ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport const getConstNodeType = ( value ) => value.nodeType || value.convertTo || ( typeof value === 'string' ? value : null );\n", "// core\n//import ArrayUniformNode from '../core/ArrayUniformNode.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport BypassNode from '../core/BypassNode.js';\nimport CodeNode from '../core/CodeNode.js';\nimport ContextNode from '../core/ContextNode.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport FunctionCallNode from '../core/FunctionCallNode.js';\nimport FunctionNode from '../core/FunctionNode.js';\nimport InstanceIndexNode from '../core/InstanceIndexNode.js';\nimport PropertyNode from '../core/PropertyNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport VarNode from '../core/VarNode.js';\nimport VaryingNode from '../core/VaryingNode.js';\n\n// accessors\nimport BufferNode from '../accessors/BufferNode.js';\nimport CameraNode from '../accessors/CameraNode.js';\nimport MaterialNode from '../accessors/MaterialNode.js';\nimport MaterialReferenceNode from '../accessors/MaterialReferenceNode.js';\nimport ModelViewProjectionNode from '../accessors/ModelViewProjectionNode.js';\nimport NormalNode from '../accessors/NormalNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport PointUVNode from '../accessors/PointUVNode.js';\nimport PositionNode from '../accessors/PositionNode.js';\nimport ReferenceNode from '../accessors/ReferenceNode.js';\nimport StorageBufferNode from '../accessors/StorageBufferNode.js';\nimport TextureNode from '../accessors/TextureNode.js';\nimport UserDataNode from '../accessors/UserDataNode.js';\nimport UVNode from '../accessors/UVNode.js';\n\n// display\nimport FrontFacingNode from '../display/FrontFacingNode.js';\n\n// gpgpu\nimport ComputeNode from '../gpgpu/ComputeNode.js';\n\n// math\nimport MathNode from '../math/MathNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport CondNode from '../math/CondNode.js';\n\n// utils\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\nimport ConvertNode from '../utils/ConvertNode.js';\n\n// shader node utils\nimport { ShaderNode, nodeObject, nodeObjects, nodeArray, nodeProxy, nodeImmutable, ConvertType, getConstNodeType, cacheMaps } from './ShaderNode.js';\n\n// shader node base\n\nexport { ShaderNode, nodeObject, nodeObjects, nodeArray, nodeProxy, nodeImmutable };\n\nexport const color = new ConvertType( 'color' );\n\nexport const float = new ConvertType( 'float', cacheMaps.float );\nexport const int = new ConvertType( 'int', cacheMaps.int );\nexport const uint = new ConvertType( 'uint', cacheMaps.uint );\nexport const bool = new ConvertType( 'bool', cacheMaps.bool );\n\nexport const vec2 = new ConvertType( 'vec2' );\nexport const ivec2 = new ConvertType( 'ivec2' );\nexport const uvec2 = new ConvertType( 'uvec2' );\nexport const bvec2 = new ConvertType( 'bvec2' );\n\nexport const vec3 = new ConvertType( 'vec3' );\nexport const ivec3 = new ConvertType( 'ivec3' );\nexport const uvec3 = new ConvertType( 'uvec3' );\nexport const bvec3 = new ConvertType( 'bvec3' );\n\nexport const vec4 = new ConvertType( 'vec4' );\nexport const ivec4 = new ConvertType( 'ivec4' );\nexport const uvec4 = new ConvertType( 'uvec4' );\nexport const bvec4 = new ConvertType( 'bvec4' );\n\nexport const mat3 = new ConvertType( 'mat3' );\nexport const imat3 = new ConvertType( 'imat3' );\nexport const umat3 = new ConvertType( 'umat3' );\nexport const bmat3 = new ConvertType( 'bmat3' );\n\nexport const mat4 = new ConvertType( 'mat4' );\nexport const imat4 = new ConvertType( 'imat4' );\nexport const umat4 = new ConvertType( 'umat4' );\nexport const bmat4 = new ConvertType( 'bmat4' );\n\n// core\n\n// @TODO: ArrayUniformNode\n\nexport const func = ( code ) => {\n\n\tconst node = nodeObject( new FunctionNode( code ) );\n\n\tconst call = node.call.bind( node );\n\tnode.call = ( params ) => nodeObject( call( params ) );\n\n\treturn node;\n\n};\n\nexport const uniform = ( nodeOrType ) => {\n\n\tconst nodeType = getConstNodeType( nodeOrType );\n\n\t// @TODO: get ConstNode from .traverse() in the future\n\tconst value = nodeOrType.isNode === true ? nodeOrType.node?.value || nodeOrType.value : nodeOrType;\n\n\treturn nodeObject( new UniformNode( value, nodeType ) );\n\n};\n\nexport const attribute = ( name, nodeType ) => nodeObject( new AttributeNode( name, nodeType ) );\nexport const property = ( name, nodeOrType ) => nodeObject( new PropertyNode( name, getConstNodeType( nodeOrType ) ) );\n\nexport const bypass = nodeProxy( BypassNode );\nexport const code = nodeProxy( CodeNode );\nexport const context = nodeProxy( ContextNode );\nexport const expression = nodeProxy( ExpressionNode );\nexport const call = nodeProxy( FunctionCallNode );\nexport const instanceIndex = nodeImmutable( InstanceIndexNode );\nexport const label = nodeProxy( VarNode );\nexport const temp = label;\nexport const varying = nodeProxy( VaryingNode );\n\n// accesors\n\nexport const buffer = ( value, nodeOrType, count ) => nodeObject( new BufferNode( value, getConstNodeType( nodeOrType ), count ) );\nexport const storage = ( value, nodeOrType, count ) => nodeObject( new StorageBufferNode( value, getConstNodeType( nodeOrType ), count ) );\n\nexport const cameraProjectionMatrix = nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX );\nexport const cameraViewMatrix = nodeImmutable( CameraNode, CameraNode.VIEW_MATRIX );\nexport const cameraNormalMatrix = nodeImmutable( CameraNode, CameraNode.NORMAL_MATRIX );\nexport const cameraWorldMatrix = nodeImmutable( CameraNode, CameraNode.WORLD_MATRIX );\nexport const cameraPosition = nodeImmutable( CameraNode, CameraNode.POSITION );\n\nexport const materialAlphaTest = nodeImmutable( MaterialNode, MaterialNode.ALPHA_TEST );\nexport const materialColor = nodeImmutable( MaterialNode, MaterialNode.COLOR );\nexport const materialEmissive = nodeImmutable( MaterialNode, MaterialNode.EMISSIVE );\nexport const materialOpacity = nodeImmutable( MaterialNode, MaterialNode.OPACITY );\n//export const materialSpecular = nodeImmutable( MaterialNode, MaterialNode.SPECULAR );\nexport const materialRoughness = nodeImmutable( MaterialNode, MaterialNode.ROUGHNESS );\nexport const materialMetalness = nodeImmutable( MaterialNode, MaterialNode.METALNESS );\nexport const materialRotation = nodeImmutable( MaterialNode, MaterialNode.ROTATION );\n\nexport const diffuseColor = nodeImmutable( PropertyNode, 'DiffuseColor', 'vec4' );\nexport const roughness = nodeImmutable( PropertyNode, 'Roughness', 'float' );\nexport const metalness = nodeImmutable( PropertyNode, 'Metalness', 'float' );\nexport const alphaTest = nodeImmutable( PropertyNode, 'AlphaTest', 'float' );\nexport const specularColor = nodeImmutable( PropertyNode, 'SpecularColor', 'color' );\n\nexport const reference = ( name, nodeOrType, object ) => nodeObject( new ReferenceNode( name, getConstNodeType( nodeOrType ), object ) );\nexport const materialReference = ( name, nodeOrType, material ) => nodeObject( new MaterialReferenceNode( name, getConstNodeType( nodeOrType ), material ) );\nexport const userData = ( name, inputType, userData ) => nodeObject( new UserDataNode( name, inputType, userData ) );\n\nexport const modelViewProjection = nodeProxy( ModelViewProjectionNode );\n\nexport const normalGeometry = nodeImmutable( NormalNode, NormalNode.GEOMETRY );\nexport const normalLocal = nodeImmutable( NormalNode, NormalNode.LOCAL );\nexport const normalWorld = nodeImmutable( NormalNode, NormalNode.WORLD );\nexport const normalView = nodeImmutable( NormalNode, NormalNode.VIEW );\nexport const transformedNormalView = nodeImmutable( VarNode, normalView, 'TransformedNormalView' );\n\nexport const modelViewMatrix = nodeImmutable( ModelNode, ModelNode.VIEW_MATRIX );\nexport const modelNormalMatrix = nodeImmutable( ModelNode, ModelNode.NORMAL_MATRIX );\nexport const modelWorldMatrix = nodeImmutable( ModelNode, ModelNode.WORLD_MATRIX );\nexport const modelPosition = nodeImmutable( ModelNode, ModelNode.POSITION );\nexport const modelViewPosition = nodeImmutable( ModelNode, ModelNode.VIEW_POSITION );\n\nexport const positionGeometry = nodeImmutable( PositionNode, PositionNode.GEOMETRY );\nexport const positionLocal = nodeImmutable( PositionNode, PositionNode.LOCAL );\nexport const positionWorld = nodeImmutable( PositionNode, PositionNode.WORLD );\nexport const positionView = nodeImmutable( PositionNode, PositionNode.VIEW );\nexport const positionViewDirection = nodeImmutable( PositionNode, PositionNode.VIEW_DIRECTION );\n\nexport const texture = nodeProxy( TextureNode );\nexport const sampler = ( texture ) => nodeObject( new ConvertNode( texture.isNode === true ? texture : new TextureNode( texture ), 'sampler' ) );\nexport const uv = ( ...params ) => nodeObject( new UVNode( ...params ) );\nexport const pointUV = nodeImmutable( PointUVNode );\n\n// gpgpu\n\nexport const compute = ( node, count, workgroupSize ) => nodeObject( new ComputeNode( nodeObject( node ), count, workgroupSize ) );\n\n// math\n\nexport const EPSILON = float( 1e-6 );\nexport const INFINITY = float( 1e6 );\n\nexport const cond = nodeProxy( CondNode );\n\nexport const add = nodeProxy( OperatorNode, '+' );\nexport const sub = nodeProxy( OperatorNode, '-' );\nexport const mul = nodeProxy( OperatorNode, '*' );\nexport const div = nodeProxy( OperatorNode, '/' );\nexport const remainder = nodeProxy( OperatorNode, '%' );\nexport const equal = nodeProxy( OperatorNode, '==' );\nexport const assign = nodeProxy( OperatorNode, '=' );\nexport const lessThan = nodeProxy( OperatorNode, '<' );\nexport const greaterThan = nodeProxy( OperatorNode, '>' );\nexport const lessThanEqual = nodeProxy( OperatorNode, '<=' );\nexport const greaterThanEqual = nodeProxy( OperatorNode, '>=' );\nexport const and = nodeProxy( OperatorNode, '&&' );\nexport const or = nodeProxy( OperatorNode, '||' );\nexport const xor = nodeProxy( OperatorNode, '^^' );\nexport const bitAnd = nodeProxy( OperatorNode, '&' );\nexport const bitOr = nodeProxy( OperatorNode, '|' );\nexport const bitXor = nodeProxy( OperatorNode, '^' );\nexport const shiftLeft = nodeProxy( OperatorNode, '<<' );\nexport const shiftRight = nodeProxy( OperatorNode, '>>' );\n\nexport const radians = nodeProxy( MathNode, MathNode.RADIANS );\nexport const degrees = nodeProxy( MathNode, MathNode.DEGREES );\nexport const exp = nodeProxy( MathNode, MathNode.EXP );\nexport const exp2 = nodeProxy( MathNode, MathNode.EXP2 );\nexport const log = nodeProxy( MathNode, MathNode.LOG );\nexport const log2 = nodeProxy( MathNode, MathNode.LOG2 );\nexport const sqrt = nodeProxy( MathNode, MathNode.SQRT );\nexport const inversesqrt = nodeProxy( MathNode, MathNode.INVERSE_SQRT );\nexport const floor = nodeProxy( MathNode, MathNode.FLOOR );\nexport const ceil = nodeProxy( MathNode, MathNode.CEIL );\nexport const normalize = nodeProxy( MathNode, MathNode.NORMALIZE );\nexport const fract = nodeProxy( MathNode, MathNode.FRACT );\nexport const sin = nodeProxy( MathNode, MathNode.SIN );\nexport const cos = nodeProxy( MathNode, MathNode.COS );\nexport const tan = nodeProxy( MathNode, MathNode.TAN );\nexport const asin = nodeProxy( MathNode, MathNode.ASIN );\nexport const acos = nodeProxy( MathNode, MathNode.ACOS );\nexport const atan = nodeProxy( MathNode, MathNode.ATAN );\nexport const abs = nodeProxy( MathNode, MathNode.ABS );\nexport const sign = nodeProxy( MathNode, MathNode.SIGN );\nexport const length = nodeProxy( MathNode, MathNode.LENGTH );\nexport const negate = nodeProxy( MathNode, MathNode.NEGATE );\nexport const invert = nodeProxy( MathNode, MathNode.INVERT );\nexport const dFdx = nodeProxy( MathNode, MathNode.DFDX );\nexport const dFdy = nodeProxy( MathNode, MathNode.DFDY );\nexport const saturate = nodeProxy( MathNode, MathNode.SATURATE );\nexport const round = nodeProxy( MathNode, MathNode.ROUND );\n\nexport const atan2 = nodeProxy( MathNode, MathNode.ATAN2 );\nexport const min = nodeProxy( MathNode, MathNode.MIN );\nexport const max = nodeProxy( MathNode, MathNode.MAX );\nexport const mod = nodeProxy( MathNode, MathNode.MOD );\nexport const step = nodeProxy( MathNode, MathNode.STEP );\nexport const reflect = nodeProxy( MathNode, MathNode.REFLECT );\nexport const distance = nodeProxy( MathNode, MathNode.DISTANCE );\nexport const dot = nodeProxy( MathNode, MathNode.DOT );\nexport const cross = nodeProxy( MathNode, MathNode.CROSS );\nexport const pow = nodeProxy( MathNode, MathNode.POW );\nexport const pow2 = nodeProxy( MathNode, MathNode.POW, 2 );\nexport const pow3 = nodeProxy( MathNode, MathNode.POW, 3 );\nexport const pow4 = nodeProxy( MathNode, MathNode.POW, 4 );\nexport const transformDirection = nodeProxy( MathNode, MathNode.TRANSFORM_DIRECTION );\n\nexport const mix = nodeProxy( MathNode, MathNode.MIX );\nexport const clamp = nodeProxy( MathNode, MathNode.CLAMP );\nexport const refract = nodeProxy( MathNode, MathNode.REFRACT );\nexport const smoothstep = nodeProxy( MathNode, MathNode.SMOOTHSTEP );\nexport const faceforward = nodeProxy( MathNode, MathNode.FACEFORWARD );\n\n// display\n\nexport const frontFacing = nodeImmutable( FrontFacingNode );\nexport const faceDirection = sub( mul( float( frontFacing ), 2 ), 1 );\n\n// lighting\n\n\n// utils\n\nexport const element = nodeProxy( ArrayElementNode );\n\n// miscellaneous\n\nexport const dotNV = saturate( dot( transformedNormalView, positionViewDirection ) );\nexport const transformedNormalWorld = normalize( transformDirection( transformedNormalView, cameraViewMatrix ) );\n", "import Node from '../core/Node.js';\nimport {\n\ttransformedNormalView, positionViewDirection,\n\ttransformDirection, negate, reflect, cameraViewMatrix\n} from '../shadernode/ShaderNodeBaseElements.js';\n\nclass ReflectVectorNode extends Node {\n\n\tconstructor() {\n\n\t\tsuper( 'vec3' );\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `reflectVector`;\n\n\t}\n\n\tconstruct() {\n\n\t\tconst reflectView = reflect( negate( positionViewDirection ), transformedNormalView );\n\n\t\treturn transformDirection( reflectView, cameraViewMatrix );\n\n\t}\n\n}\n\nexport default ReflectVectorNode;\n", "import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectVectorNode from './ReflectVectorNode.js';\n\nimport { negate, vec3, nodeObject } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass CubeTextureNode extends TextureNode {\n\n\tconstructor( value, uvNode = null, levelNode = null ) {\n\n\t\tsuper( value, uvNode, levelNode );\n\n\t\tthis.isCubeTextureNode = true;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'cubeTexture';\n\n\t}\n\n\tgetConstructHash( builder ) {\n\n\t\treturn `${ this.uuid } / ${ builder.context.environmentContext?.uuid || '' }`;\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tconst uvNode = this.uvNode || builder.context.uvNode || new ReflectVectorNode();\n\t\tlet levelNode = this.levelNode || builder.context.levelNode;\n\n\t\tif ( levelNode?.isNode === true ) {\n\n\t\t\tconst texture = this.value;\n\n\t\t\tlevelNode = builder.context.levelShaderNode ? builder.context.levelShaderNode.call( { texture, levelNode }, builder ) : levelNode;\n\n\t\t}\n\n\t\tproperties.uvNode = uvNode;\n\t\tproperties.levelNode = levelNode;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst { uvNode, levelNode } = builder.getNodeProperties( this );\n\n\t\tconst texture = this.value;\n\n\t\tif ( ! texture || texture.isCubeTexture !== true ) {\n\n\t\t\tthrow new Error( 'CubeTextureNode: Need a three.js cube texture.' );\n\n\t\t}\n\n\t\tconst textureProperty = UniformNode.prototype.generate.call( this, builder, 'cubeTexture' );\n\n\t\tif ( output === 'sampler' ) {\n\n\t\t\treturn textureProperty + '_sampler';\n\n\t\t} else if ( builder.isReference( output ) ) {\n\n\t\t\treturn textureProperty;\n\n\t\t} else {\n\n\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\tlet snippet = nodeData.snippet;\n\n\t\t\tif ( snippet === undefined || builder.context.tempRead === false ) {\n\n\t\t\t\tconst uvNodeObject = nodeObject( uvNode );\n\t\t\t\tconst cubeUV = vec3( negate( uvNodeObject.x ), uvNodeObject.yz );\n\t\t\t\tconst uvSnippet = cubeUV.build( builder, 'vec3' );\n\n\t\t\t\tif ( levelNode ) {\n\n\t\t\t\t\tconst levelSnippet = levelNode.build( builder, 'float' );\n\n\t\t\t\t\tsnippet = builder.getCubeTextureLevel( textureProperty, uvSnippet, levelSnippet );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsnippet = builder.getCubeTexture( textureProperty, uvSnippet );\n\n\t\t\t\t}\n\n\t\t\t\tnodeData.snippet = snippet;\n\n\t\t\t}\n\n\t\t\treturn builder.format( snippet, 'vec4', output );\n\n\t\t}\n\n\t}\n\n}\n\nexport default CubeTextureNode;\n", "import Node from '../core/Node.js';\nimport {\n\tvec3,\n\tmat3,\n\tmul,\n\tassign,\n\tbuffer,\n\telement,\n\tdot,\n\tdiv,\n\ttemp,\n\tinstanceIndex,\n\tpositionLocal,\n\tnormalLocal\n} from '../shadernode/ShaderNodeBaseElements.js';\n\nclass InstanceNode extends Node {\n\n\tconstructor( instanceMesh ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.instanceMesh = instanceMesh;\n\n\t\t//\n\n\t\tconst instanceBufferNode = buffer( instanceMesh.instanceMatrix.array, 'mat4', instanceMesh.count );\n\n\t\tthis.instanceMatrixNode = temp( element( instanceBufferNode, instanceIndex ) ); // @TODO: a possible caching issue here?\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { instanceMatrixNode } = this;\n\n\t\t// POSITION\n\n\t\tconst instancePosition = mul( instanceMatrixNode, positionLocal ).xyz;\n\n\t\t// NORMAL\n\n\t\tconst m = mat3( instanceMatrixNode[ 0 ].xyz, instanceMatrixNode[ 1 ].xyz, instanceMatrixNode[ 2 ].xyz );\n\n\t\tconst transformedNormal = div( normalLocal, vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) ) );\n\n\t\tconst instanceNormal = mul( m, transformedNormal ).xyz;\n\n\t\t// ASSIGNS\n\n\t\tassign( positionLocal, instancePosition ).build( builder );\n\t\tassign( normalLocal, instanceNormal ).build( builder );\n\n\t}\n\n}\n\nexport default InstanceNode;\n", "import Node from '../core/Node.js';\nimport {\n\tShaderNode,\n\tattribute,\n\tbuffer,\n\tmat4,\n\tuniform,\n\tpositionLocal,\n\tnormalLocal,\n\tassign,\n\telement,\n\tadd,\n\tmul,\n\ttransformDirection\n} from '../shadernode/ShaderNodeBaseElements.js';\n\nimport { NodeUpdateType } from '../core/constants.js';\n\nconst Skinning = new ShaderNode( ( inputs, builder ) => {\n\n\tconst { index, weight, bindMatrix, bindMatrixInverse, boneMatrices } = inputs;\n\n\tconst boneMatX = element( boneMatrices, index.x );\n\tconst boneMatY = element( boneMatrices, index.y );\n\tconst boneMatZ = element( boneMatrices, index.z );\n\tconst boneMatW = element( boneMatrices, index.w );\n\n\t// POSITION\n\n\tconst skinVertex = mul( bindMatrix, positionLocal );\n\n\tconst skinned = add(\n\t\tmul( mul( boneMatX, skinVertex ), weight.x ),\n\t\tmul( mul( boneMatY, skinVertex ), weight.y ),\n\t\tmul( mul( boneMatZ, skinVertex ), weight.z ),\n\t\tmul( mul( boneMatW, skinVertex ), weight.w )\n\t);\n\n\tconst skinPosition = mul( bindMatrixInverse, skinned ).xyz;\n\n\t// NORMAL\n\n\tlet skinMatrix = add(\n\t\tmul( weight.x, boneMatX ),\n\t\tmul( weight.y, boneMatY ),\n\t\tmul( weight.z, boneMatZ ),\n\t\tmul( weight.w, boneMatW )\n\t);\n\n\tskinMatrix = mul( mul( bindMatrixInverse, skinMatrix ), bindMatrix );\n\n\tconst skinNormal = transformDirection( skinMatrix, normalLocal ).xyz;\n\n\t// ASSIGNS\n\n\tassign( positionLocal, skinPosition ).build( builder );\n\tassign( normalLocal, skinNormal ).build( builder );\n\n} );\n\nclass SkinningNode extends Node {\n\n\tconstructor( skinnedMesh ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.skinnedMesh = skinnedMesh;\n\n\t\tthis.updateType = NodeUpdateType.Object;\n\n\t\t//\n\n\t\tthis.skinIndexNode = attribute( 'skinIndex', 'uvec4' );\n\t\tthis.skinWeightNode = attribute( 'skinWeight', 'vec4' );\n\n\t\tthis.bindMatrixNode = uniform( mat4( skinnedMesh.bindMatrix ) );\n\t\tthis.bindMatrixInverseNode = uniform( mat4( skinnedMesh.bindMatrixInverse ) );\n\t\tthis.boneMatricesNode = buffer( skinnedMesh.skeleton.boneMatrices, 'mat4', skinnedMesh.skeleton.bones.length );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tSkinning.call( {\n\t\t\tindex: this.skinIndexNode,\n\t\t\tweight: this.skinWeightNode,\n\t\t\tbindMatrix: this.bindMatrixNode,\n\t\t\tbindMatrixInverse: this.bindMatrixInverseNode,\n\t\t\tboneMatrices: this.boneMatricesNode\n\t\t}, builder );\n\n\t}\n\n\tupdate() {\n\n\t\tthis.skinnedMesh.skeleton.update();\n\n\t}\n\n}\n\nexport default SkinningNode;\n", "import Node from '../core/Node.js';\nimport { attribute, float } from '../shadernode/ShaderNodeBaseElements.js';\nimport { MathUtils, InstancedBufferAttribute } from 'three';\n\nclass RangeNode extends Node {\n\n\tconstructor( min, max ) {\n\n\t\tsuper();\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tgetVectorLength() {\n\n\t\tconst min = this.min;\n\n\t\tlet length = 1;\n\n\t\tif ( min.isVector2 ) length = 2;\n\t\telse if ( min.isVector3 ) length = 3;\n\t\telse if ( min.isVector4 ) length = 4;\n\t\telse if ( min.isColor ) length = 3;\n\n\t\treturn length;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn ( builder.object.isInstancedMesh === true ) ? builder.getTypeFromLength( this.getVectorLength() ) : 'float';\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst { min, max } = this;\n\t\tconst { object, geometry } = builder;\n\n\t\tlet output = null;\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tconst vectorLength = this.getVectorLength();\n\t\t\tconst attributeName = 'node' + this.id;\n\n\t\t\tconst length = vectorLength * object.count;\n\t\t\tconst array = new Float32Array( length );\n\n\t\t\tconst attributeGeometry = geometry.getAttribute( attributeName );\n\n\t\t\tif ( attributeGeometry === undefined || attributeGeometry.array.length < length ) {\n\n\t\t\t\tif ( vectorLength === 1 ) {\n\n\t\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = MathUtils.lerp( min, max, Math.random() );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( min.isColor ) {\n\n\t\t\t\t\tfor ( let i = 0; i < length; i += 3 ) {\n\n\t\t\t\t\t\tarray[ i ] = MathUtils.lerp( min.r, max.r, Math.random() );\n\t\t\t\t\t\tarray[ i + 1 ] = MathUtils.lerp( min.g, max.g, Math.random() );\n\t\t\t\t\t\tarray[ i + 2 ] = MathUtils.lerp( min.b, max.b, Math.random() );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\t\tconst index = i % vectorLength;\n\n\t\t\t\t\t\tconst minValue = min.getComponent( index );\n\t\t\t\t\t\tconst maxValue = max.getComponent( index );\n\n\t\t\t\t\t\tarray[ i ] = MathUtils.lerp( minValue, maxValue, Math.random() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( attributeName, new InstancedBufferAttribute( array, vectorLength ) );\n\n\t\t\t\tgeometry.dispose();\n\n\t\t\t}\n\n\t\t\toutput = attribute( attributeName, builder.getTypeFromLength( vectorLength ) );\n\n\t\t} else {\n\n\t\t\toutput = float( 0 );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nexport default RangeNode;\n", "import TempNode from '../core/TempNode.js';\nimport { ShaderNode, vec3, mat3, add, sub, mul, max, div, dot, float, mix, cos, sin, atan2, sqrt } from '../shadernode/ShaderNodeBaseElements.js';\n\nconst luminanceNode = new ShaderNode( ( { color } ) => {\n\n\tconst LUMA = vec3( 0.2125, 0.7154, 0.0721 );\n\n\treturn dot( color, LUMA );\n\n} );\n\nconst saturationNode = new ShaderNode( ( { color, adjustment } ) => {\n\n\tconst intensityNode = luminanceNode.call( { color } );\n\n\treturn mix( intensityNode, color, adjustment );\n\n} );\n\nconst vibranceNode = new ShaderNode( ( { color, adjustment } ) => {\n\n\tconst average = div( add( color.r, color.g, color.b ), 3.0 );\n\n\tconst mx = max( color.r, max( color.g, color.b ) );\n\tconst amt = mul( sub( mx, average ), mul( -3.0, adjustment ) );\n\n\treturn mix( color.rgb, vec3( mx ), amt );\n\n} );\n\nconst hueNode = new ShaderNode( ( { color, adjustment } ) => {\n\n\tconst RGBtoYIQ = mat3( 0.299, 0.587, 0.114, 0.595716, -0.274453, -0.321263, 0.211456, -0.522591, 0.311135 );\n\tconst YIQtoRGB = mat3( 1.0, 0.9563, 0.6210, 1.0, -0.2721, -0.6474, 1.0, -1.107, 1.7046 );\n\n\tconst yiq = mul( RGBtoYIQ, color );\n\n\tconst hue = add( atan2( yiq.z, yiq.y ), adjustment );\n\tconst chroma = sqrt( add( mul( yiq.z, yiq.z ), mul( yiq.y, yiq.y ) ) );\n\n\treturn mul( YIQtoRGB, vec3( yiq.x, mul( chroma, cos( hue ) ), mul( chroma, sin( hue ) ) ) );\n\n} );\n\nclass ColorAdjustmentNode extends TempNode {\n\n\tstatic SATURATION = 'saturation';\n\tstatic VIBRANCE = 'vibrance';\n\tstatic HUE = 'hue';\n\n\tconstructor( method, colorNode, adjustmentNode = float( 1 ) ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.method = method;\n\n\t\tthis.colorNode = colorNode;\n\t\tthis.adjustmentNode = adjustmentNode;\n\n\t}\n\n\tconstruct() {\n\n\t\tconst { method, colorNode, adjustmentNode } = this;\n\n\t\tconst callParams = { color: colorNode, adjustment: adjustmentNode };\n\n\t\tlet outputNode = null;\n\n\t\tif ( method === ColorAdjustmentNode.SATURATION ) {\n\n\t\t\toutputNode = saturationNode.call( callParams );\n\n\t\t} else if ( method === ColorAdjustmentNode.VIBRANCE ) {\n\n\t\t\toutputNode = vibranceNode.call( callParams );\n\n\t\t} else if ( method === ColorAdjustmentNode.HUE ) {\n\n\t\t\toutputNode = hueNode.call( callParams );\n\n\t\t} else {\n\n\t\t\tconsole.error( `${ this.type }: Method \"${ this.method }\" not supported!` );\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default ColorAdjustmentNode;\n", "import TempNode from '../core/Node.js';\nimport { ShaderNode, vec3, pow, mul, sub, mix, vec4, lessThanEqual } from '../shadernode/ShaderNodeBaseElements.js';\n\nimport { LinearEncoding, sRGBEncoding } from 'three';\n\nexport const LinearToLinear = new ShaderNode( ( inputs ) => {\n\n\treturn inputs.value;\n\n} );\n\nexport const LinearTosRGB = new ShaderNode( ( inputs ) => {\n\n\tconst { value } = inputs;\n\n\tconst rgb = value.rgb;\n\n\tconst a = sub( mul( pow( value.rgb, vec3( 0.41666 ) ), 1.055 ), vec3( 0.055 ) );\n\tconst b = mul( rgb, 12.92 );\n\tconst factor = vec3( lessThanEqual( rgb, vec3( 0.0031308 ) ) );\n\n\tconst rgbResult = mix( a, b, factor );\n\n\treturn vec4( rgbResult, value.a );\n\n} );\n\nconst EncodingLib = {\n\tLinearToLinear,\n\tLinearTosRGB\n};\n\nclass ColorSpaceNode extends TempNode {\n\n\tstatic LINEAR_TO_LINEAR = 'LinearToLinear';\n\tstatic LINEAR_TO_SRGB = 'LinearTosRGB';\n\n\tconstructor( method, node ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.method = method;\n\n\t\tthis.node = node;\n\n\t}\n\n\tfromEncoding( encoding ) {\n\n\t\tlet method = null;\n\n\t\tif ( encoding === LinearEncoding ) {\n\n\t\t\tmethod = 'Linear';\n\n\t\t} else if ( encoding === sRGBEncoding ) {\n\n\t\t\tmethod = 'sRGB';\n\n\t\t}\n\n\t\tthis.method = 'LinearTo' + method;\n\n\t\treturn this;\n\n\t}\n\n\tconstruct() {\n\n\t\tconst method = this.method;\n\t\tconst node = this.node;\n\n\t\tlet outputNode = null;\n\n\t\tif ( method !== ColorSpaceNode.LINEAR_TO_LINEAR ) {\n\n\t\t\tconst encodingFunctionNode = EncodingLib[ method ];\n\n\t\t\toutputNode = encodingFunctionNode.call( {\n\t\t\t\tvalue: node\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\toutputNode = node;\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default ColorSpaceNode;\n", "import TempNode from '../core/TempNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport { ShaderNode, positionView, normalView, uv, vec3, add, sub, mul, dFdx, dFdy, cross, max, dot, normalize, inversesqrt, faceDirection } from '../shadernode/ShaderNodeBaseElements.js';\n\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\n\n// Normal Mapping Without Precomputed Tangents\n// http://www.thetenthplanet.de/archives/1180\n\nconst perturbNormal2ArbNode = new ShaderNode( ( inputs ) => {\n\n\tconst { eye_pos, surf_norm, mapN, uv } = inputs;\n\n\tconst q0 = dFdx( eye_pos.xyz );\n\tconst q1 = dFdy( eye_pos.xyz );\n\tconst st0 = dFdx( uv.st );\n\tconst st1 = dFdy( uv.st );\n\n\tconst N = surf_norm; // normalized\n\n\tconst q1perp = cross( q1, N );\n\tconst q0perp = cross( N, q0 );\n\n\tconst T = add( mul( q1perp, st0.x ), mul( q0perp, st1.x ) );\n\tconst B = add( mul( q1perp, st0.y ), mul( q0perp, st1.y ) );\n\n\tconst det = max( dot( T, T ), dot( B, B ) );\n\tconst scale = mul( faceDirection, inversesqrt( det ) );\n\n\treturn normalize( add( mul( T, mul( mapN.x, scale ) ), mul( B, mul( mapN.y, scale ) ), mul( N, mapN.z ) ) );\n\n} );\n\nclass NormalMapNode extends TempNode {\n\n\tconstructor( node, scaleNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.node = node;\n\t\tthis.scaleNode = scaleNode;\n\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\n\t}\n\n\tconstruct() {\n\n\t\tconst { normalMapType, scaleNode } = this;\n\n\t\tconst normalOP = mul( this.node, 2.0 );\n\t\tlet normalMap = sub( normalOP, 1.0 );\n\n\t\tif ( scaleNode !== null ) {\n\n\t\t\tconst normalMapScale = mul( normalMap.xy, scaleNode );\n\t\t\tnormalMap = vec3( normalMapScale, normalMap.z );\n\n\t\t}\n\n\t\tlet outputNode = null;\n\n\t\tif ( normalMapType === ObjectSpaceNormalMap ) {\n\n\t\t\tconst vertexNormalNode = mul( new ModelNode( ModelNode.NORMAL_MATRIX ), normalMap );\n\n\t\t\toutputNode = normalize( vertexNormalNode );\n\n\t\t} else if ( normalMapType === TangentSpaceNormalMap ) {\n\n\t\t\toutputNode = perturbNormal2ArbNode.call( {\n\t\t\t\teye_pos: positionView,\n\t\t\t\tsurf_norm: normalView,\n\t\t\t\tmapN: normalMap,\n\t\t\t\tuv: uv()\n\t\t\t} );\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default NormalMapNode;\n", "import TempNode from '../core/Node.js';\nimport { ShaderNode, mul, float } from '../shadernode/ShaderNodeBaseElements.js';\n\nimport { LinearToneMapping } from 'three';\n\n// exposure only\nexport const LinearToneMappingNode = new ShaderNode( ( { color, exposure } ) => {\n\n\treturn mul( color, exposure );\n\n} );\n\nclass ToneMappingNode extends TempNode {\n\n\tconstructor( toneMapping, exposureNode = float( 1 ), colorNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.toneMapping = toneMapping;\n\n\t\tthis.exposureNode = exposureNode;\n\t\tthis.colorNode = colorNode;\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst colorNode = this.color || builder.context.color;\n\n\t\tconst toneMapping = this.toneMapping;\n\t\tconst toneMappingParams = { exposure: this.exposureNode, color: colorNode };\n\n\t\tlet outputNode = null;\n\n\t\tif ( toneMapping === LinearToneMapping ) {\n\n\t\t\toutputNode = LinearToneMappingNode.call( toneMappingParams );\n\n\t\t} else {\n\n\t\t\toutputNode = this.colorNode;\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default ToneMappingNode;\n", "import Node from '../core/Node.js';\n\nclass LightingNode extends Node {\n\n\tconstructor() {\n\n\t\tsuper( 'vec3' );\n\n\t}\n\n\tgenerate( /*builder*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n}\n\nexport default LightingNode;\n", "import Node from '../core/Node.js';\nimport LightingNode from './LightingNode.js';\n\nconst references = new WeakMap();\n\nconst sortLights = ( lights ) => {\n\n\treturn lights.sort( ( a, b ) => a.id - b.id );\n\n};\n\nclass LightsNode extends Node {\n\n\tconstructor( lightNodes = [] ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.lightNodes = lightNodes;\n\n\t\tthis._hash = null;\n\n\t}\n\n\tget hasLight() {\n\n\t\treturn this.lightNodes.length > 0;\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst lightNodes = this.lightNodes;\n\n\t\tfor ( const lightNode of lightNodes ) {\n\n\t\t\tlightNode.build( builder );\n\n\t\t}\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\tif ( this._hash === null ) {\n\n\t\t\tlet hash = '';\n\n\t\t\tconst lightNodes = this.lightNodes;\n\n\t\t\tfor ( const lightNode of lightNodes ) {\n\n\t\t\t\thash += lightNode.getHash( builder ) + ' ';\n\n\t\t\t}\n\n\t\t\tthis._hash = hash;\n\n\t\t}\n\n\t\treturn this._hash;\n\n\t}\n\n\tgetLightNodeByHash( hash ) {\n\n\t\tconst lightNodes = this.lightNodes;\n\n\t\tfor ( const lightNode of lightNodes ) {\n\n\t\t\tif ( lightNode.light.uuid === hash ) {\n\n\t\t\t\treturn lightNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfromLights( lights ) {\n\n\t\tconst lightNodes = [];\n\n\t\tlights = sortLights( lights );\n\n\t\tfor ( const light of lights ) {\n\n\t\t\tlet lightNode = this.getLightNodeByHash( light.uuid );\n\n\t\t\tif ( lightNode === null ) {\n\n\t\t\t\tconst lightClass = light.constructor;\n\t\t\t\tconst lightNodeClass = references.has( lightClass ) ? references.get( lightClass ) : LightingNode;\n\n\t\t\t\tlightNode = new lightNodeClass( light );\n\n\t\t\t}\n\n\t\t\tlightNodes.push( lightNode );\n\n\t\t}\n\n\t\tthis.lightNodes = lightNodes;\n\t\tthis._hash = null;\n\n\t\treturn this;\n\n\t}\n\n\tstatic setReference( lightClass, lightNodeClass ) {\n\n\t\treferences.set( lightClass, lightNodeClass );\n\n\t}\n\n}\n\nexport default LightsNode;\n", "import ContextNode from '../core/ContextNode.js';\nimport { float, vec3, add, temp } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass LightingContextNode extends ContextNode {\n\n\tconstructor( node, lightingModelNode = null ) {\n\n\t\tsuper( node );\n\n\t\tthis.lightingModelNode = lightingModelNode;\n\n\t}\n\n\tgetNodeType( /*builder*/ ) {\n\n\t\treturn 'vec3';\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst { lightingModelNode } = this;\n\n\t\tconst context = this.context = {}; // reset context\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tconst directDiffuse = temp( vec3() ),\n\t\t\tdirectSpecular = temp( vec3() ),\n\t\t\tindirectDiffuse = temp( vec3() ),\n\t\t\tindirectSpecular = temp( vec3() ),\n\t\t\ttotal = add( directDiffuse, directSpecular, indirectDiffuse, indirectSpecular );\n\n\t\tconst reflectedLight = {\n\t\t\tdirectDiffuse,\n\t\t\tdirectSpecular,\n\t\t\tindirectDiffuse,\n\t\t\tindirectSpecular,\n\t\t\ttotal\n\t\t};\n\n\t\tconst lighting = {\n\t\t\tradiance: temp( vec3() ),\n\t\t\tirradiance: temp( vec3() ),\n\t\t\tiblIrradiance: temp( vec3() ),\n\t\t\tambientOcclusion: temp( float( 1 ) )\n\t\t};\n\n\t\tObject.assign( properties, reflectedLight, lighting );\n\t\tObject.assign( context, lighting );\n\n\t\tcontext.reflectedLight = reflectedLight;\n\t\tcontext.lightingModelNode = lightingModelNode || context.lightingModelNode;\n\n\t\tif ( lightingModelNode?.indirectDiffuse ) lightingModelNode.indirectDiffuse.call( context );\n\t\tif ( lightingModelNode?.indirectSpecular ) lightingModelNode.indirectSpecular.call( context );\n\t\tif ( lightingModelNode?.ambientOcclusion ) lightingModelNode.ambientOcclusion.call( context );\n\n\t\treturn super.construct( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { context } = this;\n\t\tconst type = this.getNodeType( builder );\n\n\t\tsuper.generate( builder, type );\n\n\t\treturn context.reflectedLight.total.build( builder, type );\n\n\t}\n\n}\n\nexport default LightingContextNode;\n", "import TempNode from '../core/TempNode.js';\nimport { vec2, vec3, negate, normalize, cross, dot, mul, add, transformedNormalView, positionViewDirection } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass MatcapUVNode extends TempNode {\n\n\tconstructor() {\n\n\t\tsuper( 'vec2' );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst x = normalize( vec3( positionViewDirection.z, 0, negate( positionViewDirection.x ) ) );\n\t\tconst y = cross( positionViewDirection, x );\n\n\t\tconst uv = add( mul( vec2( dot( x, transformedNormalView ), dot( y, transformedNormalView ) ), 0.495 ), 0.5 );\n\n\t\treturn uv.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n}\n\nexport default MatcapUVNode;\n", "import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass MaxMipLevelNode extends UniformNode {\n\n\tconstructor( texture ) {\n\n\t\tsuper( 0 );\n\n\t\tthis.texture = texture;\n\n\t\tthis.updateType = NodeUpdateType.Frame;\n\n\t}\n\n\tupdate() {\n\n\t\tconst images = this.texture.images;\n\t\tconst image = ( images && images.length > 0 ) ? ( images[ 0 ]?.image || images[ 0 ] ) : this.texture.image;\n\n\t\tif ( image?.width !== undefined ) {\n\n\t\t\tconst { width, height } = image;\n\n\t\t\tthis.value = Math.log2( Math.max( width, height ) );\n\n\t\t}\n\n\t}\n\n}\n\nexport default MaxMipLevelNode;\n", "import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass TimerNode extends UniformNode {\n\n\tstatic LOCAL = 'local';\n\tstatic GLOBAL = 'global';\n\tstatic DELTA = 'delta';\n\n\tconstructor( scope = TimerNode.LOCAL, scale = 1, value = 0 ) {\n\n\t\tsuper( value );\n\n\t\tthis.scope = scope;\n\t\tthis.scale = scale;\n\n\t\tthis.updateType = NodeUpdateType.Frame;\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst scope = this.scope;\n\t\tconst scale = this.scale;\n\n\t\tif ( scope === TimerNode.LOCAL ) {\n\n\t\t\tthis.value += frame.deltaTime * scale;\n\n\t\t} else if ( scope === TimerNode.DELTA ) {\n\n\t\t\tthis.value = frame.deltaTime * scale;\n\n\t\t} else {\n\n\t\t\t// global\n\n\t\t\tthis.value = frame.time * scale;\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\t\tdata.scale = this.scale;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\t\tthis.scale = data.scale;\n\n\t}\n\n}\n\nexport default TimerNode;\n", "import Node from '../core/Node.js';\nimport TimerNode from './TimerNode.js';\nimport { abs, fract, round, sin, add, sub, mul } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass OscNode extends Node {\n\n\tstatic SINE = 'sine';\n\tstatic SQUARE = 'square';\n\tstatic TRIANGLE = 'triangle';\n\tstatic SAWTOOTH = 'sawtooth';\n\n\tconstructor( method = OscNode.SINE, timeNode = new TimerNode() ) {\n\n\t\tsuper();\n\n\t\tthis.method = method;\n\t\tthis.timeNode = timeNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.timeNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst method = this.method;\n\t\tconst timeNode = this.timeNode;\n\n\t\tlet outputNode = null;\n\n\t\tif ( method === OscNode.SINE ) {\n\n\t\t\toutputNode = add( mul( sin( mul( add( timeNode, .75 ), Math.PI * 2 ) ), .5 ), .5 );\n\n\t\t} else if ( method === OscNode.SQUARE ) {\n\n\t\t\toutputNode = round( fract( timeNode ) );\n\n\t\t} else if ( method === OscNode.TRIANGLE ) {\n\n\t\t\toutputNode = abs( sub( 1, mul( fract( add( timeNode, .5 ) ), 2 ) ) );\n\n\t\t} else if ( method === OscNode.SAWTOOTH ) {\n\n\t\t\toutputNode = fract( timeNode );\n\n\t\t}\n\n\t\treturn outputNode.build( builder );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.method = this.method;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.method = data.method;\n\n\t}\n\n}\n\nexport default OscNode;\n", "import TempNode from '../core/TempNode.js';\nimport { vec2, add, sub, mul, cos, sin } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass RotateUVNode extends TempNode {\n\n\tconstructor( uvNode, rotationNode, centerNode = vec2( .5 ) ) {\n\n\t\tsuper( 'vec2' );\n\n\t\tthis.uvNode = uvNode;\n\t\tthis.rotationNode = rotationNode;\n\t\tthis.centerNode = centerNode;\n\n\t}\n\n\tconstruct() {\n\n\t\tconst { uvNode, rotationNode, centerNode } = this;\n\n\t\tconst cosAngle = cos( rotationNode );\n\t\tconst sinAngle = sin( rotationNode );\n\n\t\treturn vec2(\n\t\t\tadd( add( mul( cosAngle, sub( uvNode.x, centerNode.x ) ), mul( sinAngle, sub( uvNode.y, centerNode.y ) ) ), centerNode.x ),\n\t\t\tadd( sub( mul( cosAngle, sub( uvNode.y, centerNode.y ) ), mul( sinAngle, sub( uvNode.x, centerNode.x ) ) ), centerNode.y )\n\t\t);\n\n\t}\n\n}\n\nexport default RotateUVNode;\n", "import Node from '../core/Node.js';\nimport ConstNode from '../core/ConstNode.js';\nimport UVNode from '../accessors/UVNode.js';\nimport MathNode from '../math/MathNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport JoinNode from '../utils/JoinNode.js';\n\nclass SpriteSheetUVNode extends Node {\n\n\tconstructor( countNode, uvNode = new UVNode(), frameNode = new ConstNode( 0 ) ) {\n\n\t\tsuper( 'vec2' );\n\n\t\tthis.countNode = countNode;\n\t\tthis.uvNode = uvNode;\n\t\tthis.frameNode = frameNode;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst count = this.countNode;\n\t\tconst uv = this.uvNode;\n\t\tconst frame = this.frameNode;\n\n\t\tconst one = new ConstNode( 1 );\n\n\t\tconst width = new SplitNode( count, 'x' );\n\t\tconst height = new SplitNode( count, 'y' );\n\n\t\tconst total = new OperatorNode( '*', width, height );\n\n\t\tconst roundFrame = new MathNode( MathNode.FLOOR, new MathNode( MathNode.MOD, frame, total ) );\n\n\t\tconst frameNum = new OperatorNode( '+', roundFrame, one );\n\n\t\tconst cell = new MathNode( MathNode.MOD, roundFrame, width );\n\t\tconst row = new MathNode( MathNode.CEIL, new OperatorNode( '/', frameNum, width ) );\n\t\tconst rowInv = new OperatorNode( '-', height, row );\n\n\t\tconst scale = new OperatorNode( '/', one, count );\n\n\t\tconst uvFrameOffset = new JoinNode( [\n\t\t\tnew OperatorNode( '*', cell, new SplitNode( scale, 'x' ) ),\n\t\t\tnew OperatorNode( '*', rowInv, new SplitNode( scale, 'y' ) )\n\t\t] );\n\n\t\tconst uvScale = new OperatorNode( '*', uv, scale );\n\t\tconst uvFrame = new OperatorNode( '+', uvScale, uvFrameOffset );\n\n\t\treturn uvFrame.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n}\n\nexport default SpriteSheetUVNode;\n", "import Node from '../core/Node.js';\nimport { ShaderNode, uv, add, mul, floor, mod, sign } from '../shadernode/ShaderNodeBaseElements.js';\n\nconst checkerShaderNode = new ShaderNode( ( inputs ) => {\n\n\tconst uv = mul( inputs.uv, 2.0 );\n\n\tconst cx = floor( uv.x );\n\tconst cy = floor( uv.y );\n\tconst result = mod( add( cx, cy ), 2.0 );\n\n\treturn sign( result );\n\n} );\n\nclass CheckerNode extends Node {\n\n\tconstructor( uvNode = uv() ) {\n\n\t\tsuper( 'float' );\n\n\t\tthis.uvNode = uvNode;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\treturn checkerShaderNode.call( { uv: this.uvNode } ).build( builder );\n\n\t}\n\n}\n\nexport default CheckerNode;\n", "import Node from '../core/Node.js';\nimport MathNode from '../math/MathNode.js';\n\nclass FogNode extends Node {\n\n\tconstructor( colorNode, factorNode ) {\n\n\t\tsuper( 'float' );\n\n\t\tthis.isFogNode = true;\n\n\t\tthis.colorNode = colorNode;\n\t\tthis.factorNode = factorNode;\n\n\t}\n\n\tmix( outputNode ) {\n\n\t\treturn new MathNode( MathNode.MIX, outputNode, this.colorNode, this );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\treturn this.factorNode.build( builder, 'float' );\n\n\t}\n\n}\n\nexport default FogNode;\n", "import FogNode from './FogNode.js';\nimport { smoothstep, negate, positionView } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass FogRangeNode extends FogNode {\n\n\tconstructor( colorNode, nearNode, farNode ) {\n\n\t\tsuper( colorNode );\n\n\t\tthis.isFogRangeNode = true;\n\n\t\tthis.nearNode = nearNode;\n\t\tthis.farNode = farNode;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tthis.factorNode = smoothstep( this.nearNode, this.farNode, negate( positionView.z ) );\n\n\t\treturn super.generate( builder );\n\n\t}\n\n}\n\nexport default FogRangeNode;\n", "import { ShaderNode, add, sub, mul, exp2 } from '../../shadernode/ShaderNodeBaseElements.js';\n\nconst F_Schlick = new ShaderNode( ( inputs ) => {\n\n\tconst { f0, f90, dotVH } = inputs;\n\n\t// Original approximation by Christophe Schlick '94\n\t// float fresnel = pow( 1.0 - dotVH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tconst fresnel = exp2( mul( sub( mul( - 5.55473, dotVH ), 6.98316 ), dotVH ) );\n\n\treturn add( mul( f0, sub( 1.0, fresnel ) ), mul( f90, fresnel ) );\n\n} ); // validated\n\nexport default F_Schlick;\n", "import { ShaderNode, add, sub, mul, div, pow2, max, sqrt, EPSILON } from '../../shadernode/ShaderNodeBaseElements.js';\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nconst V_GGX_SmithCorrelated = new ShaderNode( ( inputs ) => {\n\n\tconst { alpha, dotNL, dotNV } = inputs;\n\n\tconst a2 = pow2( alpha );\n\n\tconst gv = mul( dotNL, sqrt( add( a2, mul( sub( 1.0, a2 ), pow2( dotNV ) ) ) ) );\n\tconst gl = mul( dotNV, sqrt( add( a2, mul( sub( 1.0, a2 ), pow2( dotNL ) ) ) ) );\n\n\treturn div( 0.5, max( add( gv, gl ), EPSILON ) );\n\n} ); // validated\n\nexport default V_GGX_SmithCorrelated;\n", "import { ShaderNode, add, sub, mul, div, pow2 } from '../../shadernode/ShaderNodeBaseElements.js';\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nconst D_GGX = new ShaderNode( ( inputs ) => {\n\n\tconst { alpha, dotNH } = inputs;\n\n\tconst a2 = pow2( alpha );\n\n\tconst denom = add( mul( pow2( dotNH ), sub( a2, 1.0 ) ), 1.0 ); // avoid alpha = 0 with dotNH = 1\n\n\treturn mul( 1 / Math.PI, div( a2, pow2( denom ) ) );\n\n} ); // validated\n\nexport default D_GGX;\n", "import F_Schlick from './F_Schlick.js';\nimport V_GGX_SmithCorrelated from './V_GGX_SmithCorrelated.js';\nimport D_GGX from './D_GGX.js';\nimport {\n\tShaderNode, dotNV, add, mul, saturate, dot, pow2, normalize,\n\ttransformedNormalView, positionViewDirection\n} from '../../shadernode/ShaderNodeBaseElements.js';\n\n// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\nconst BRDF_GGX = new ShaderNode( ( inputs ) => {\n\n\tconst { lightDirection, f0, f90, roughness } = inputs;\n\n\tconst alpha = pow2( roughness ); // UE4's roughness\n\n\tconst halfDir = normalize( add( lightDirection, positionViewDirection ) );\n\n\tconst dotNL = saturate( dot( transformedNormalView, lightDirection ) );\n\t//const dotNV = saturate( dot( transformedNormalView, positionViewDirection ) );\n\tconst dotNH = saturate( dot( transformedNormalView, halfDir ) );\n\tconst dotVH = saturate( dot( positionViewDirection, halfDir ) );\n\n\tconst F = F_Schlick.call( { f0, f90, dotVH } );\n\n\tconst V = V_GGX_SmithCorrelated.call( { alpha, dotNL, dotNV } );\n\n\tconst D = D_GGX.call( { alpha, dotNH } );\n\n\treturn mul( F, mul( V, D ) );\n\n} ); // validated\n\nexport default BRDF_GGX;\n", "import { ShaderNode, mul } from '../../shadernode/ShaderNodeBaseElements.js';\n\nconst BRDF_Lambert = new ShaderNode( ( inputs ) => {\n\n\treturn mul( 1 / Math.PI, inputs.diffuseColor ); // punctual light\n\n} ); // validated\n\nexport default BRDF_Lambert;\n", "import {\n\tShaderNode, dotNV, vec2, vec4, add, mul, min, exp2\n} from '../../shadernode/ShaderNodeElements.js';\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\nconst DFGApprox = new ShaderNode( ( inputs ) => {\n\n\tconst { roughness } = inputs;\n\n\tconst c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tconst r = add( mul( roughness, c0 ), c1 );\n\n\tconst a004 = add( mul( min( mul( r.x, r.x ), exp2( mul( - 9.28, dotNV ) ) ), r.x ), r.y );\n\n\tconst fab = add( mul( vec2( - 1.04, 1.04 ), a004 ), r.zw );\n\n\treturn fab;\n\n} );\n\nexport default DFGApprox;\n", "import {\n\tShaderNode, div, max, sub, mul, saturate, pow, pow2, pow4, cond, greaterThan\n} from '../../shadernode/ShaderNodeBaseElements.js';\n\nconst getDistanceAttenuation = new ShaderNode( ( inputs ) => {\n\n\tconst { lightDistance, cutoffDistance, decayExponent } = inputs;\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\tconst distanceFalloff = div( 1.0, max( pow( lightDistance, decayExponent ), 0.01 ) );\n\n\treturn cond(\n\t\tgreaterThan( cutoffDistance, 0 ),\n\t\tmul( distanceFalloff, pow2( saturate( sub( 1.0, pow4( div( lightDistance, cutoffDistance ) ) ) ) ) ),\n\t\tdistanceFalloff\n\t);\n\n} ); // validated\n\nexport default getDistanceAttenuation;\n", "import { ShaderNode, max, abs, dFdx, dFdy, normalGeometry } from '../../shadernode/ShaderNodeBaseElements.js';\n\nconst getGeometryRoughness = new ShaderNode( () => {\n\n\tconst dxy = max( abs( dFdx( normalGeometry ) ), abs( dFdy( normalGeometry ) ) );\n\tconst geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\n\treturn geometryRoughness;\n\n} );\n\nexport default getGeometryRoughness;\n", "import getGeometryRoughness from './getGeometryRoughness.js';\nimport { ShaderNode, add, max, min } from '../../shadernode/ShaderNodeBaseElements.js';\n\nconst getRoughness = new ShaderNode( ( inputs ) => {\n\n\tconst { roughness } = inputs;\n\n\tconst geometryRoughness = getGeometryRoughness.call();\n\n\tlet roughnessFactor = max( roughness, 0.0525 ); // 0.0525 corresponds to the base mip of a 256 cubemap.\n\troughnessFactor = add( roughnessFactor, geometryRoughness );\n\troughnessFactor = min( roughnessFactor, 1.0 );\n\n\treturn roughnessFactor;\n\n} );\n\nexport default getRoughness;\n", "import BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\nimport DFGApprox from './BSDF/DFGApprox.js';\nimport {\n\tShaderNode,\n\tvec3, mul, saturate, add, sub, dot, div, transformedNormalView,\n\tpow, exp2, dotNV,\n\tdiffuseColor, specularColor, roughness, temp\n} from '../shadernode/ShaderNodeElements.js';\n\n// Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nconst computeMultiscattering = ( singleScatter, multiScatter, specularF90 = 1 ) => {\n\n\tconst fab = DFGApprox.call( { roughness } );\n\n\tconst FssEss = add( mul( specularColor, fab.x ), mul( specularF90, fab.y ) );\n\n\tconst Ess = add( fab.x, fab.y );\n\tconst Ems = sub( 1.0, Ess );\n\n\tconst Favg = add( specularColor, mul( sub( 1.0, specularColor ), 0.047619 ) ); // 1/21\n\tconst Fms = div( mul( FssEss, Favg ), sub( 1.0, mul( Ems, Favg ) ) );\n\n\tsingleScatter.add( FssEss );\n\tmultiScatter.add( mul( Fms, Ems ) );\n\n};\n\nconst RE_IndirectSpecular_Physical = new ShaderNode( ( inputs ) => {\n\n\tconst { radiance, iblIrradiance, reflectedLight } = inputs;\n\n\t// Both indirect specular and indirect diffuse light accumulate here\n\n\tconst singleScattering = temp( vec3() );\n\tconst multiScattering = temp( vec3() );\n\tconst cosineWeightedIrradiance = mul( iblIrradiance, 1 / Math.PI );\n\n\tcomputeMultiscattering( singleScattering, multiScattering );\n\n\tconst diffuse = mul( diffuseColor, sub( 1.0, add( singleScattering, multiScattering ) ) );\n\n\treflectedLight.indirectSpecular.add( mul( radiance, singleScattering ) );\n\treflectedLight.indirectSpecular.add( mul( multiScattering, cosineWeightedIrradiance ) );\n\n\treflectedLight.indirectDiffuse.add( mul( diffuse, cosineWeightedIrradiance ) );\n\n} );\n\nconst RE_IndirectDiffuse_Physical = new ShaderNode( ( inputs ) => {\n\n\tconst { irradiance, reflectedLight } = inputs;\n\n\treflectedLight.indirectDiffuse.add( mul( irradiance, BRDF_Lambert.call( { diffuseColor } ) ) );\n\n} );\n\nconst RE_Direct_Physical = new ShaderNode( ( inputs ) => {\n\n\tconst { lightDirection, lightColor, reflectedLight } = inputs;\n\n\tconst dotNL = saturate( dot( transformedNormalView, lightDirection ) );\n\tconst irradiance = mul( dotNL, lightColor );\n\n\treflectedLight.directDiffuse.add( mul( irradiance, BRDF_Lambert.call( { diffuseColor: diffuseColor.rgb } ) ) );\n\n\treflectedLight.directSpecular.add( mul( irradiance, BRDF_GGX.call( { lightDirection, f0: specularColor, f90: 1, roughness } ) ) );\n\n} );\n\nconst RE_AmbientOcclusion_Physical = new ShaderNode( ( { ambientOcclusion, reflectedLight } ) => {\n\n\tconst aoNV = add( dotNV, ambientOcclusion );\n\tconst aoExp = exp2( sub( mul( - 16.0, roughness ), 1.0 ) );\n\n\tconst aoNode = saturate( add( sub( pow( aoNV, aoExp ), 1.0 ), ambientOcclusion ) );\n\n\treflectedLight.indirectDiffuse.mul( ambientOcclusion );\n\n\treflectedLight.indirectSpecular.mul( aoNode );\n\n\n} );\n\nconst PhysicalLightingModel = {\n\tdirect: RE_Direct_Physical,\n\tindirectDiffuse: RE_IndirectDiffuse_Physical,\n\tindirectSpecular: RE_IndirectSpecular_Physical,\n\tambientOcclusion: RE_AmbientOcclusion_Physical\n};\n\nexport default PhysicalLightingModel;\n", "// accessors\nimport CubeTextureNode from '../accessors/CubeTextureNode.js';\nimport InstanceNode from '../accessors/InstanceNode.js';\nimport ReflectVectorNode from '../accessors/ReflectVectorNode.js';\nimport SkinningNode from '../accessors/SkinningNode.js';\n\n// display\nimport ColorAdjustmentNode from '../display/ColorAdjustmentNode.js';\nimport ColorSpaceNode from '../display/ColorSpaceNode.js';\nimport NormalMapNode from '../display/NormalMapNode.js';\nimport ToneMappingNode from '../display/ToneMappingNode.js';\n\n// lighting\nimport LightsNode from '../lighting/LightsNode.js';\n//import LightingNode from '../lighting/LightingNode.js';\nimport LightingContextNode from '../lighting/LightingContextNode.js';\n\n// utils\nimport MatcapUVNode from '../utils/MatcapUVNode.js';\nimport MaxMipLevelNode from '../utils/MaxMipLevelNode.js';\nimport OscNode from '../utils/OscNode.js';\nimport RotateUVNode from '../utils/RotateUVNode.js';\nimport SpriteSheetUVNode from '../utils/SpriteSheetUVNode.js';\nimport TimerNode from '../utils/TimerNode.js';\n\n// geometry\nimport RangeNode from '../geometry/RangeNode.js';\n\n// procedural\nimport CheckerNode from '../procedural/CheckerNode.js';\n\n// fog\nimport FogNode from '../fog/FogNode.js';\nimport FogRangeNode from '../fog/FogRangeNode.js';\n\n// shader node utils\nimport { nodeObject, nodeProxy, nodeImmutable } from './ShaderNode.js';\n\n//\n// Node Material Shader Syntax\n//\n\n// shader node base\n\nexport * from './ShaderNodeBaseElements.js';\n\n// functions\n\nexport { default as BRDF_GGX } from '../functions/BSDF/BRDF_GGX.js'; // see https://github.com/tc39/proposal-export-default-from\nexport { default as BRDF_Lambert } from '../functions/BSDF/BRDF_Lambert.js';\nexport { default as D_GGX } from '../functions/BSDF/D_GGX.js';\nexport { default as DFGApprox } from '../functions/BSDF/DFGApprox.js';\nexport { default as F_Schlick } from '../functions/BSDF/F_Schlick.js';\nexport { default as V_GGX_SmithCorrelated } from '../functions/BSDF/V_GGX_SmithCorrelated.js';\n\nexport { default as getDistanceAttenuation } from '../functions/light/getDistanceAttenuation.js';\n\nexport { default as getGeometryRoughness } from '../functions/material/getGeometryRoughness.js';\nexport { default as getRoughness } from '../functions/material/getRoughness.js';\n\nexport { default as PhysicalLightingModel } from '../functions/PhysicalLightingModel.js';\n\n// accessors\n\nexport const cubeTexture = nodeProxy( CubeTextureNode );\n\nexport const instance = nodeProxy( InstanceNode );\n\nexport const reflectVector = nodeImmutable( ReflectVectorNode );\n\nexport const skinning = nodeProxy( SkinningNode );\n\n// display\n\nexport const saturation = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.SATURATION );\nexport const vibrance = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.VIBRANCE );\nexport const hue = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.HUE );\n\nexport const colorSpace = ( node, encoding ) => nodeObject( new ColorSpaceNode( null, nodeObject( node ) ).fromEncoding( encoding ) );\nexport const normalMap = nodeProxy( NormalMapNode );\nexport const toneMapping = ( mapping, exposure, color ) => nodeObject( new ToneMappingNode( mapping, nodeObject( exposure ), nodeObject( color ) ) );\n\n// lighting\n\n//export const lighting = nodeProxy( LightingNode ); // abstract\n//export const light; // still needs to be added\nexport const lights = ( lights ) => nodeObject( new LightsNode().fromLights( lights ) );\nexport const lightingContext = nodeProxy( LightingContextNode );\n\n// utils\n\nexport const matcapUV = nodeImmutable( MatcapUVNode );\nexport const maxMipLevel = nodeProxy( MaxMipLevelNode );\n\nexport const oscSine = nodeProxy( OscNode, OscNode.SINE );\nexport const oscSquare = nodeProxy( OscNode, OscNode.SQUARE );\nexport const oscTriangle = nodeProxy( OscNode, OscNode.TRIANGLE );\nexport const oscSawtooth = nodeProxy( OscNode, OscNode.SAWTOOTH );\n\nexport const rotateUV = nodeProxy( RotateUVNode );\n\nexport const spritesheetUV = nodeProxy( SpriteSheetUVNode );\n\n// @TODO: add supports to use node in timeScale\nexport const timerLocal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.LOCAL, timeScale, value ) );\nexport const timerGlobal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.GLOBAL, timeScale, value ) );\nexport const timerDelta = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.DELTA, timeScale, value ) );\n\n// geometry\n\nexport const range = ( min, max ) => nodeObject( new RangeNode( min, max ) );\n\n// procedural\n\nexport const checker = nodeProxy( CheckerNode );\n\n// fog\n\nexport const fog = nodeProxy( FogNode );\nexport const rangeFog = nodeProxy( FogRangeNode );\n", "import LightingNode from './LightingNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { uniform } from '../shadernode/ShaderNodeElements.js';\n\nimport { Color } from 'three';\n\nclass AnalyticLightNode extends LightingNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper();\n\n\t\tthis.updateType = NodeUpdateType.Object;\n\n\t\tthis.light = light;\n\n\t\tthis.colorNode = uniform( new Color() );\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn this.light.uuid;\n\n\t}\n\n\tupdate( /*frame*/ ) {\n\n\t\tconst { light } = this;\n\n\t\tthis.colorNode.value.copy( light.color ).multiplyScalar( light.intensity );\n\n\t}\n\n}\n\nexport default AnalyticLightNode;\n", "import AnalyticLightNode from './AnalyticLightNode.js';\nimport LightsNode from './LightsNode.js';\nimport Object3DNode from '../accessors/Object3DNode.js';\nimport getDistanceAttenuation from '../functions/light/getDistanceAttenuation.js';\nimport { uniform, mul, normalize, length, sub, positionView } from '../shadernode/ShaderNodeElements.js';\n\nimport { PointLight } from 'three';\n\nclass PunctualLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t\tthis.cutoffDistanceNode = uniform( 0 );\n\t\tthis.decayExponentNode = uniform( 0 );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst { light } = this;\n\n\t\tsuper.update( frame );\n\n\t\tthis.cutoffDistanceNode.value = light.distance;\n\t\tthis.decayExponentNode.value = light.decay;\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst { colorNode, cutoffDistanceNode, decayExponentNode } = this;\n\n\t\tconst lightPositionViewNode = new Object3DNode( Object3DNode.VIEW_POSITION, this.light );\n\t\tconst lVector = sub( lightPositionViewNode, positionView );\n\n\t\tconst lightDirection = normalize( lVector );\n\t\tconst lightDistance = length( lVector );\n\n\t\tconst lightAttenuation = getDistanceAttenuation.call( {\n\t\t\tlightDistance,\n\t\t\tcutoffDistance: cutoffDistanceNode,\n\t\t\tdecayExponent: decayExponentNode\n\t\t} );\n\n\t\tconst lightColor = mul( colorNode, lightAttenuation );\n\n\t\tconst lightingModelFunctionNode = builder.context.lightingModelNode;\n\t\tconst reflectedLight = builder.context.reflectedLight;\n\n\t\tif ( lightingModelFunctionNode?.direct ) {\n\n\t\t\tlightingModelFunctionNode.direct.call( {\n\t\t\t\tlightDirection,\n\t\t\t\tlightColor,\n\t\t\t\treflectedLight\n\t\t\t}, builder );\n\n\t\t}\n\n\t}\n\n}\n\nLightsNode.setReference( PointLight, PunctualLightNode );\n\nexport default PunctualLightNode;\n", "import AnalyticLightNode from './AnalyticLightNode.js';\nimport LightsNode from './LightsNode.js';\nimport Object3DNode from '../accessors/Object3DNode.js';\nimport { uniform, add, mul, dot, mix, normalize, normalView } from '../shadernode/ShaderNodeElements.js';\n\nimport { Color, HemisphereLight } from 'three';\n\nclass HemisphereLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t\tthis.lightPositionNode = new Object3DNode( Object3DNode.POSITION );\n\t\tthis.lightDirectionNode = normalize( this.lightPositionNode );\n\n\t\tthis.groundColorNode = uniform( new Color() );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst { light } = this;\n\n\t\tsuper.update( frame );\n\n\t\tthis.lightPositionNode.object3d = light;\n\n\t\tthis.groundColorNode.value.copy( light.groundColor ).multiplyScalar( light.intensity );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { colorNode, groundColorNode, lightDirectionNode } = this;\n\n\t\tconst dotNL = dot( normalView, lightDirectionNode );\n\t\tconst hemiDiffuseWeight = add( mul( 0.5, dotNL ), 0.5 );\n\n\t\tconst irradiance = mix( groundColorNode, colorNode, hemiDiffuseWeight );\n\n\t\tbuilder.context.irradiance.add( irradiance );\n\n\t}\n\n}\n\nLightsNode.setReference( HemisphereLight, HemisphereLightNode );\n\nexport default HemisphereLightNode;\n", "import LightingNode from './LightingNode.js';\nimport ContextNode from '../core/ContextNode.js';\nimport MaxMipLevelNode from '../utils/MaxMipLevelNode.js';\nimport { ShaderNode, float, add, mul, div, log2, clamp, roughness, reflect, mix, positionViewDirection, negate, normalize, transformedNormalView, transformedNormalWorld, transformDirection, cameraViewMatrix } from '../shadernode/ShaderNodeElements.js';\n\n// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\nconst getSpecularMIPLevel = new ShaderNode( ( { texture, levelNode } ) => {\n\n\tconst maxMIPLevelScalar = new MaxMipLevelNode( texture );\n\n\tconst sigma = div( mul( Math.PI, mul( levelNode, levelNode ) ), add( 1.0, levelNode ) );\n\tconst desiredMIPLevel = add( maxMIPLevelScalar, log2( sigma ) );\n\n\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n} );\n\nclass EnvironmentNode extends LightingNode {\n\n\tconstructor( envNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.envNode = envNode;\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst envNode = this.envNode;\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tlet reflectVec = reflect( negate( positionViewDirection ), transformedNormalView );\n\t\treflectVec = normalize( mix( reflectVec, transformedNormalView, mul( roughness, roughness ) ) );\n\t\treflectVec = transformDirection( reflectVec, cameraViewMatrix );\n\n\t\tconst radianceContext = new ContextNode( envNode, {\n\t\t\ttempRead: false,\n\t\t\tuvNode: reflectVec,\n\t\t\tlevelNode: roughness,\n\t\t\tlevelShaderNode: getSpecularMIPLevel\n\t\t} );\n\n\t\tconst irradianceContext = new ContextNode( envNode, {\n\t\t\ttempRead: false,\n\t\t\tuvNode: transformedNormalWorld,\n\t\t\tlevelNode: float( 1 ),\n\t\t\tlevelShaderNode: getSpecularMIPLevel\n\t\t} );\n\n\t\t// it's used to cache the construct only if necessary: See `CubeTextureNode.getConstructReference()`\n\t\tradianceContext.context.environmentContext = radianceContext;\n\t\tirradianceContext.context.environmentContext = irradianceContext;\n\n\t\tbuilder.context.radiance.add( radianceContext );\n\n\t\tbuilder.context.iblIrradiance.add( mul( Math.PI, irradianceContext ) );\n\n\t\tproperties.radianceContext = radianceContext;\n\t\tproperties.irradianceContext = irradianceContext;\n\n\t}\n\n}\n\nexport default EnvironmentNode;\n", "import LightingNode from './LightingNode.js';\nimport { float, add, mul, sub } from '../shadernode/ShaderNodeElements.js';\n\nclass AONode extends LightingNode {\n\n\tconstructor( aoNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.aoNode = aoNode;\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst aoIntensity = 1;\n\t\tconst aoNode = add( mul( sub( float( this.aoNode ), 1.0 ), aoIntensity ), 1.0 );\n\n\t\tbuilder.context.ambientOcclusion.mul( aoNode );\n\n\t}\n\n}\n\nexport default AONode;\n", "import * as Nodes from '../Nodes.js';\nimport { FileLoader, Loader } from 'three';\n\nclass NodeLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, ( text ) => {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( this.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparseNodes( json ) {\n\n\t\tconst nodes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( const nodeJSON of json ) {\n\n\t\t\t\tconst { uuid, type } = nodeJSON;\n\n\t\t\t\tnodes[ uuid ] = Nodes.fromType( type );\n\t\t\t\tnodes[ uuid ].uuid = uuid;\n\n\t\t\t}\n\n\t\t\tconst meta = { nodes, textures: this.textures };\n\n\t\t\tfor ( const nodeJSON of json ) {\n\n\t\t\t\tnodeJSON.meta = meta;\n\n\t\t\t\tconst node = nodes[ nodeJSON.uuid ];\n\t\t\t\tnode.deserialize( nodeJSON );\n\n\t\t\t\tdelete nodeJSON.meta;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn nodes;\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst node = Nodes.fromType( json.type );\n\t\tnode.uuid = json.uuid;\n\n\t\tconst nodes = this.parseNodes( json.inputNodes );\n\t\tconst meta = { nodes, textures: this.textures };\n\n\t\tjson.meta = meta;\n\n\t\tnode.deserialize( json );\n\n\t\tdelete json.meta;\n\n\t\treturn node;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nexport default NodeLoader;\n", "import { Material, ShaderMaterial } from 'three';\nimport { getNodesKeys } from '../core/NodeUtils.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport {\n\tfloat, vec3, vec4,\n\tassign, label, mul, bypass,\n\tpositionLocal, skinning, instance, modelViewProjection, lightingContext, colorSpace,\n\tmaterialAlphaTest, materialColor, materialOpacity\n} from '../shadernode/ShaderNodeElements.js';\n\nclass NodeMaterial extends ShaderMaterial {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isNodeMaterial = true;\n\n\t\tthis.type = this.constructor.name;\n\n\t\tthis.lights = true;\n\n\t}\n\n\tbuild( builder ) {\n\n\t\tthis.generatePosition( builder );\n\n\t\tconst { lightsNode } = this;\n\t\tconst { diffuseColorNode } = this.generateDiffuseColor( builder );\n\n\t\tconst outgoingLightNode = this.generateLight( builder, { diffuseColorNode, lightsNode } );\n\n\t\tthis.generateOutput( builder, { diffuseColorNode, outgoingLightNode } );\n\n\t}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.uuid + '-' + this.version;\n\n\t}\n\n\tgeneratePosition( builder ) {\n\n\t\tconst object = builder.object;\n\n\t\t// < VERTEX STAGE >\n\n\t\tlet vertex = positionLocal;\n\n\t\tif ( this.positionNode !== null ) {\n\n\t\t\tvertex = bypass( vertex, assign( positionLocal, this.positionNode ) );\n\n\t\t}\n\n\t\tif ( object.instanceMatrix?.isInstancedBufferAttribute === true && builder.isAvailable( 'instance' ) === true ) {\n\n\t\t\tvertex = bypass( vertex, instance( object ) );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\tvertex = bypass( vertex, skinning( object ) );\n\n\t\t}\n\n\t\tbuilder.context.vertex = vertex;\n\n\t\tbuilder.addFlow( 'vertex', modelViewProjection() );\n\n\t}\n\n\tgenerateDiffuseColor( builder ) {\n\n\t\t// < FRAGMENT STAGE >\n\n\t\tlet colorNode = vec4( this.colorNode || materialColor );\n\t\tlet opacityNode = this.opacityNode ? float( this.opacityNode ) : materialOpacity;\n\n\t\t// COLOR\n\n\t\tcolorNode = builder.addFlow( 'fragment', label( colorNode, 'Color' ) );\n\t\tconst diffuseColorNode = builder.addFlow( 'fragment', label( colorNode, 'DiffuseColor' ) );\n\n\t\t// OPACITY\n\n\t\topacityNode = builder.addFlow( 'fragment', label( opacityNode, 'OPACITY' ) );\n\t\tbuilder.addFlow( 'fragment', assign( diffuseColorNode.a, mul( diffuseColorNode.a, opacityNode ) ) );\n\n\t\t// ALPHA TEST\n\n\t\tif ( this.alphaTestNode || this.alphaTest > 0 ) {\n\n\t\t\tconst alphaTestNode = this.alphaTestNode ? float( this.alphaTestNode ) : materialAlphaTest;\n\n\t\t\tbuilder.addFlow( 'fragment', label( alphaTestNode, 'AlphaTest' ) );\n\n\t\t\t// @TODO: remove ExpressionNode here and then possibly remove it completely\n\t\t\tbuilder.addFlow( 'fragment', new ExpressionNode( 'if ( DiffuseColor.a <= AlphaTest ) { discard; }' ) );\n\n\t\t}\n\n\t\treturn { colorNode, diffuseColorNode };\n\n\t}\n\n\tgenerateLight( builder, { diffuseColorNode, lightingModelNode, lightsNode = builder.lightsNode } ) {\n\n\t\t// < ANALYTIC LIGHTS >\n\n\t\t// OUTGOING LIGHT\n\n\t\tlet outgoingLightNode = diffuseColorNode.xyz;\n\t\tif ( lightsNode && lightsNode.hasLight !== false ) outgoingLightNode = builder.addFlow( 'fragment', label( lightingContext( lightsNode, lightingModelNode ), 'Light' ) );\n\n\t\treturn outgoingLightNode;\n\n\t}\n\n\tgenerateOutput( builder, { diffuseColorNode, outgoingLightNode } ) {\n\n\t\t// OUTPUT\n\n\t\tlet outputNode = vec4( outgoingLightNode, diffuseColorNode.a );\n\n\t\t// ENCODING\n\n\t\toutputNode = colorSpace( outputNode, builder.renderer.outputEncoding );\n\n\t\t// FOG\n\n\t\tif ( builder.fogNode ) outputNode = vec4( vec3( builder.fogNode.mix( outputNode ) ), outputNode.w );\n\n\t\t// RESULT\n\n\t\tbuilder.addFlow( 'fragment', label( outputNode, 'Output' ) );\n\n\t\treturn outputNode;\n\n\t}\n\n\tsetDefaultValues( values ) {\n\n\t\t// This approach is to reuse the native refreshUniforms*\n\t\t// and turn available the use of features like transmission and environment in core\n\n\t\tfor ( const property in values ) {\n\n\t\t\tconst value = values[ property ];\n\n\t\t\tif ( this[ property ] === undefined ) {\n\n\t\t\t\tthis[ property ] = value?.clone?.() || value;\n\n\t\t\t}\n\n\t\t}\n\n\t\tObject.assign( this.defines, values.defines );\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = Material.prototype.toJSON.call( this, meta );\n\t\tconst nodeKeys = getNodesKeys( this );\n\n\t\tdata.inputNodes = {};\n\n\t\tfor ( const name of nodeKeys ) {\n\n\t\t\tdata.inputNodes[ name ] = this[ name ].toJSON( meta ).uuid;\n\n\t\t}\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromMaterial( /*material*/ ) { }\n\n}\n\nexport default NodeMaterial;\n", "import NodeMaterial from './NodeMaterial.js';\nimport { LineBasicMaterial } from 'three';\n\nconst defaultValues = new LineBasicMaterial();\n\nclass LineBasicNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicNodeMaterial = true;\n\n\t\tthis.colorNode = null;\n\t\tthis.opacityNode = null;\n\n\t\tthis.alphaTestNode = null;\n\n\t\tthis.lightNode = null;\n\n\t\tthis.positionNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.colorNode = source.colorNode;\n\t\tthis.opacityNode = source.opacityNode;\n\n\t\tthis.alphaTestNode = source.alphaTestNode;\n\n\t\tthis.lightNode = source.lightNode;\n\n\t\tthis.positionNode = source.positionNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default LineBasicNodeMaterial;\n", "import NodeMaterial from './NodeMaterial.js';\nimport { MeshBasicMaterial } from 'three';\n\nconst defaultValues = new MeshBasicMaterial();\n\nclass MeshBasicNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicNodeMaterial = true;\n\n\t\tthis.lights = true;\n\n\t\tthis.colorNode = null;\n\t\tthis.opacityNode = null;\n\n\t\tthis.alphaTestNode = null;\n\n\t\tthis.lightNode = null;\n\n\t\tthis.positionNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.colorNode = source.colorNode;\n\t\tthis.opacityNode = source.opacityNode;\n\n\t\tthis.alphaTestNode = source.alphaTestNode;\n\n\t\tthis.lightNode = source.lightNode;\n\n\t\tthis.positionNode = source.positionNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default MeshBasicNodeMaterial;\n", "import NodeMaterial from './NodeMaterial.js';\nimport {\n\tfloat, vec3, vec4, normalView, add, context,\n\tassign, label, mul, invert, mix, texture, uniform,\n\tmaterialRoughness, materialMetalness, materialEmissive\n} from '../shadernode/ShaderNodeElements.js';\nimport LightsNode from '../lighting/LightsNode.js';\nimport EnvironmentNode from '../lighting/EnvironmentNode.js';\nimport AONode from '../lighting/AONode.js';\nimport getRoughness from '../functions/material/getRoughness.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport NormalMapNode from '../display/NormalMapNode.js';\n\nimport { MeshStandardMaterial } from 'three';\n\nconst defaultValues = new MeshStandardMaterial();\n\nexport default class MeshStandardNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardNodeMaterial = true;\n\n\t\tthis.colorNode = null;\n\t\tthis.opacityNode = null;\n\n\t\tthis.alphaTestNode = null;\n\n\t\tthis.normalNode = null;\n\n\t\tthis.emissiveNode = null;\n\n\t\tthis.metalnessNode = null;\n\t\tthis.roughnessNode = null;\n\n\t\tthis.envNode = null;\n\n\t\tthis.lightsNode = null;\n\n\t\tthis.positionNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tbuild( builder ) {\n\n\t\tthis.generatePosition( builder );\n\n\t\tconst colorNodes = this.generateDiffuseColor( builder );\n\t\tconst { colorNode } = colorNodes;\n\t\tlet { diffuseColorNode } = colorNodes;\n\n\t\tconst envNode = this.envNode || builder.scene.environmentNode;\n\n\t\tdiffuseColorNode = this.generateStandardMaterial( builder, { colorNode, diffuseColorNode } );\n\n\t\tif ( this.lightsNode ) builder.lightsNode = this.lightsNode;\n\n\t\tconst materialLightsNode = [];\n\n\t\tif ( envNode ) {\n\n\t\t\tmaterialLightsNode.push( new EnvironmentNode( envNode ) );\n\n\t\t}\n\n\t\tif ( builder.material.aoMap ) {\n\n\t\t\tmaterialLightsNode.push( new AONode( texture( builder.material.aoMap ) ) );\n\n\t\t}\n\n\t\tif ( materialLightsNode.length > 0 ) {\n\n\t\t\tbuilder.lightsNode = new LightsNode( [ ...builder.lightsNode.lightNodes, ...materialLightsNode ] );\n\n\t\t}\n\n\t\tconst outgoingLightNode = this.generateLight( builder, { diffuseColorNode, lightingModelNode: PhysicalLightingModel } );\n\n\t\tthis.generateOutput( builder, { diffuseColorNode, outgoingLightNode } );\n\n\t}\n\n\tgenerateStandardMaterial( builder, { colorNode, diffuseColorNode } ) {\n\n\t\tconst { material } = builder;\n\n\t\t// METALNESS\n\n\t\tlet metalnessNode = this.metalnessNode ? float( this.metalnessNode ) : materialMetalness;\n\n\t\tmetalnessNode = builder.addFlow( 'fragment', label( metalnessNode, 'Metalness' ) );\n\t\tbuilder.addFlow( 'fragment', assign( diffuseColorNode, vec4( mul( diffuseColorNode.rgb, invert( metalnessNode ) ), diffuseColorNode.a ) ) );\n\n\t\t// ROUGHNESS\n\n\t\tlet roughnessNode = this.roughnessNode ? float( this.roughnessNode ) : materialRoughness;\n\t\troughnessNode = getRoughness.call( { roughness: roughnessNode } );\n\n\t\tbuilder.addFlow( 'fragment', label( roughnessNode, 'Roughness' ) );\n\n\t\t// SPECULAR COLOR\n\n\t\tconst specularColorNode = mix( vec3( 0.04 ), colorNode.rgb, metalnessNode );\n\n\t\tbuilder.addFlow( 'fragment', label( specularColorNode, 'SpecularColor' ) );\n\n\t\t// NORMAL VIEW\n\n\t\tconst normalNode = this.normalNode ? vec3( this.normalNode ) : ( material.normalMap ? new NormalMapNode( texture( material.normalMap ), uniform( material.normalScale ) ) : normalView );\n\n\t\tbuilder.addFlow( 'fragment', label( normalNode, 'TransformedNormalView' ) );\n\n\t\treturn diffuseColorNode;\n\n\t}\n\n\tgenerateLight( builder, { diffuseColorNode, lightingModelNode, lightsNode = builder.lightsNode } ) {\n\n\t\tconst renderer = builder.renderer;\n\n\t\t// OUTGOING LIGHT\n\n\t\tlet outgoingLightNode = super.generateLight( builder, { diffuseColorNode, lightingModelNode, lightsNode } );\n\n\t\t// EMISSIVE\n\n\t\toutgoingLightNode = add( vec3( this.emissiveNode || materialEmissive ), outgoingLightNode );\n\n\t\t// TONE MAPPING\n\n\t\tif ( renderer.toneMappingNode ) outgoingLightNode = context( renderer.toneMappingNode, { color: outgoingLightNode } );\n\n\t\treturn outgoingLightNode;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.colorNode = source.colorNode;\n\t\tthis.opacityNode = source.opacityNode;\n\n\t\tthis.alphaTestNode = source.alphaTestNode;\n\n\t\tthis.normalNode = source.normalNode;\n\n\t\tthis.emissiveNode = source.emissiveNode;\n\n\t\tthis.metalnessNode = source.metalnessNode;\n\t\tthis.roughnessNode = source.roughnessNode;\n\n\t\tthis.envNode = source.envNode;\n\n\t\tthis.lightsNode = source.lightsNode;\n\n\t\tthis.positionNode = source.positionNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n", "import MeshStandardNodeMaterial from './MeshStandardNodeMaterial.js';\n\nimport { MeshPhysicalMaterial } from 'three';\n\nconst defaultValues = new MeshPhysicalMaterial();\n\nexport default class MeshPhysicalNodeMaterial extends MeshStandardNodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalNodeMaterial = true;\n\n\t\tthis.clearcoatNode = null;\n\t\tthis.clearcoatRoughnessNode = null;\n\t\tthis.clearcoatNormalNode = null;\n\n\t\tthis.sheenNode = null;\n\t\tthis.sheenRoughnessNode = null;\n\n\t\tthis.sheen = 0;\n\t\tthis.clearcoat = 0;\n\t\tthis.iridescence = 0;\n\t\tthis.transmission = 0;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.clearcoatNode = source.clearcoatNode;\n\t\tthis.clearcoatRoughnessNode = source.clearcoatRoughnessNode;\n\t\tthis.clearcoatNormalNode = source.clearcoatNormalNode;\n\n\t\tthis.sheenNode = source.sheenNode;\n\t\tthis.sheenRoughnessNode = source.sheenRoughnessNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n", "import NodeMaterial from './NodeMaterial.js';\nimport { PointsMaterial } from 'three';\n\nconst defaultValues = new PointsMaterial();\n\nclass PointsNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsNodeMaterial = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.colorNode = null;\n\t\tthis.opacityNode = null;\n\n\t\tthis.alphaTestNode = null;\n\n\t\tthis.lightNode = null;\n\n\t\tthis.sizeNode = null;\n\n\t\tthis.positionNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.colorNode = source.colorNode;\n\t\tthis.opacityNode = source.opacityNode;\n\n\t\tthis.alphaTestNode = source.alphaTestNode;\n\n\t\tthis.lightNode = source.lightNode;\n\n\t\tthis.sizeNode = source.sizeNode;\n\n\t\tthis.positionNode = source.positionNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default PointsNodeMaterial;\n", "import NodeMaterial from './NodeMaterial.js';\nimport { SpriteMaterial } from 'three';\nimport {\n\tvec2, vec3, vec4,\n\tuniform, add, mul, sub,\n\tpositionLocal, length, cos, sin,\n\tmodelViewMatrix, cameraProjectionMatrix, modelWorldMatrix, materialRotation\n} from '../shadernode/ShaderNodeElements.js';\n\nconst defaultValues = new SpriteMaterial();\n\nclass SpriteNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteNodeMaterial = true;\n\n\t\tthis.lights = true;\n\n\t\tthis.colorNode = null;\n\t\tthis.opacityNode = null;\n\n\t\tthis.alphaTestNode = null;\n\n\t\tthis.lightNode = null;\n\n\t\tthis.positionNode = null;\n\t\tthis.rotationNode = null;\n\t\tthis.scaleNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tgeneratePosition( builder ) {\n\n\t\t// < VERTEX STAGE >\n\n\t\tconst { positionNode, rotationNode, scaleNode } = this;\n\n\t\tconst vertex = positionLocal;\n\n\t\tlet mvPosition = mul( modelViewMatrix, positionNode ? vec4( positionNode.xyz, 1 ) : vec4( 0, 0, 0, 1 ) );\n\n\t\tlet scale = vec2(\n\t\t\tlength( vec3( modelWorldMatrix[ 0 ].x, modelWorldMatrix[ 0 ].y, modelWorldMatrix[ 0 ].z ) ),\n\t\t\tlength( vec3( modelWorldMatrix[ 1 ].x, modelWorldMatrix[ 1 ].y, modelWorldMatrix[ 1 ].z ) )\n\t\t);\n\n\t\tif ( scaleNode !== null ) {\n\n\t\t\tscale = mul( scale, scaleNode );\n\n\t\t}\n\n\t\tlet alignedPosition = vertex.xy;\n\n\t\tif ( builder.object.center?.isVector2 === true ) {\n\n\t\t\talignedPosition = sub( alignedPosition, sub( uniform( builder.object.center ), vec2( 0.5 ) ) );\n\n\t\t}\n\n\t\talignedPosition = mul( alignedPosition, scale );\n\n\t\tconst rotation = rotationNode || materialRotation;\n\n\t\tconst rotatedPosition = vec2(\n\t\t\tsub( mul( cos( rotation ), alignedPosition.x ), mul( sin( rotation ), alignedPosition.y ) ),\n\t\t\tadd( mul( sin( rotation ), alignedPosition.x ), mul( cos( rotation ), alignedPosition.y ) )\n\t\t);\n\n\t\tmvPosition = vec4( add( mvPosition.xy, rotatedPosition.xy ), mvPosition.z, mvPosition.w );\n\n\t\tconst modelViewProjection = mul( cameraProjectionMatrix, mvPosition );\n\n\t\tbuilder.context.vertex = vertex;\n\n\t\tbuilder.addFlow( 'vertex', modelViewProjection );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.colorNode = source.colorNode;\n\t\tthis.opacityNode = source.opacityNode;\n\n\t\tthis.alphaTestNode = source.alphaTestNode;\n\n\t\tthis.lightNode = source.lightNode;\n\n\t\tthis.positionNode = source.positionNode;\n\t\tthis.rotationNode = source.rotationNode;\n\t\tthis.scaleNode = source.scaleNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default SpriteNodeMaterial;\n", "import NodeMaterial from './NodeMaterial.js';\nimport LineBasicNodeMaterial from './LineBasicNodeMaterial.js';\nimport MeshBasicNodeMaterial from './MeshBasicNodeMaterial.js';\nimport MeshStandardNodeMaterial from './MeshStandardNodeMaterial.js';\nimport MeshPhysicalNodeMaterial from './MeshPhysicalNodeMaterial.js';\nimport PointsNodeMaterial from './PointsNodeMaterial.js';\nimport SpriteNodeMaterial from './SpriteNodeMaterial.js';\n\nexport {\n\tNodeMaterial,\n\tLineBasicNodeMaterial,\n\tMeshBasicNodeMaterial,\n\tMeshStandardNodeMaterial,\n\tMeshPhysicalNodeMaterial,\n\tPointsNodeMaterial,\n\tSpriteNodeMaterial\n};\n\nNodeMaterial.fromMaterial = function ( material ) {\n\n\tconst materialLib = {\n\t\tNodeMaterial,\n\t\tLineBasicNodeMaterial,\n\t\tMeshBasicNodeMaterial,\n\t\tMeshStandardNodeMaterial,\n\t\tMeshPhysicalNodeMaterial,\n\t\tPointsNodeMaterial,\n\t\tSpriteNodeMaterial\n\t};\n\n\tconst type = material.type.replace( 'Material', 'NodeMaterial' );\n\n\tif ( materialLib[ type ] === undefined ) {\n\n\t\treturn material; // is already a node material or cannot be converted\n\n\t}\n\n\tconst nodeMaterial = new materialLib[ type ]( material );\n\n\tfor ( const key in material ) {\n\n\t\tif ( nodeMaterial[ key ] === undefined ) {\n\n\t\t\tnodeMaterial[ key ] = material[ key ]; // currently this is needed only for material.alphaTest\n\n\t\t}\n\n\t}\n\n\treturn nodeMaterial;\n\n};\n", "import { MaterialLoader } from 'three';\nimport {\n\tNodeMaterial,\n\tLineBasicNodeMaterial,\n\tMeshBasicNodeMaterial,\n\tMeshStandardNodeMaterial,\n\tPointsNodeMaterial,\n\tSpriteNodeMaterial\n} from '../materials/Materials.js';\n\nconst superFromTypeFunction = MaterialLoader.createMaterialFromType;\n\nMaterialLoader.createMaterialFromType = function ( type ) {\n\n\tconst materialLib = {\n\t\tNodeMaterial,\n\t\tLineBasicNodeMaterial,\n\t\tMeshBasicNodeMaterial,\n\t\tMeshStandardNodeMaterial,\n\t\tPointsNodeMaterial,\n\t\tSpriteNodeMaterial,\n\t};\n\n\tif ( materialLib[ type ] !== undefined ) {\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n\treturn superFromTypeFunction.call( this, type );\n\n};\n\nclass NodeMaterialLoader extends MaterialLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.nodes = {};\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst material = super.parse( json );\n\n\t\tconst nodes = this.nodes;\n\t\tconst inputNodes = json.inputNodes;\n\n\t\tfor ( const property in inputNodes ) {\n\n\t\t\tconst uuid = inputNodes[ property ];\n\n\t\t\tmaterial[ property ] = nodes[ uuid ];\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tsetNodes( value ) {\n\n\t\tthis.nodes = value;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default NodeMaterialLoader;\n", "import NodeLoader from './NodeLoader.js';\nimport NodeMaterialLoader from './NodeMaterialLoader.js';\nimport { ObjectLoader } from 'three';\n\nclass NodeObjectLoader extends ObjectLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis._nodesJSON = null;\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tthis._nodesJSON = json.nodes;\n\n\t\tconst data = super.parse( json, onLoad );\n\n\t\tthis._nodesJSON = null; // dispose\n\n\t\treturn data;\n\n\t}\n\n\tparseNodes( json, textures ) {\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new NodeLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\treturn loader.parseNodes( json );\n\n\t\t}\n\n\t\treturn {};\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst nodes = this.parseNodes( this._nodesJSON, textures );\n\n\t\t\tconst loader = new NodeMaterialLoader();\n\t\t\tloader.setTextures( textures );\n\t\t\tloader.setNodes( nodes );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n}\n\nexport default NodeObjectLoader;\n", "// core\nimport ArrayUniformNode from './core/ArrayUniformNode.js';\nimport AttributeNode from './core/AttributeNode.js';\nimport BypassNode from './core/BypassNode.js';\nimport CodeNode from './core/CodeNode.js';\nimport ConstNode from './core/ConstNode.js';\nimport ContextNode from './core/ContextNode.js';\nimport ExpressionNode from './core/ExpressionNode.js';\nimport FunctionCallNode from './core/FunctionCallNode.js';\nimport FunctionNode from './core/FunctionNode.js';\nimport InstanceIndexNode from './core/InstanceIndexNode.js';\nimport Node from './core/Node.js';\nimport NodeAttribute from './core/NodeAttribute.js';\nimport NodeBuilder from './core/NodeBuilder.js';\nimport NodeCode from './core/NodeCode.js';\nimport NodeFrame from './core/NodeFrame.js';\nimport NodeFunctionInput from './core/NodeFunctionInput.js';\nimport NodeKeywords from './core/NodeKeywords.js';\nimport NodeUniform from './core/NodeUniform.js';\nimport NodeVar from './core/NodeVar.js';\nimport NodeVarying from './core/NodeVarying.js';\nimport PropertyNode from './core/PropertyNode.js';\nimport TempNode from './core/TempNode.js';\nimport UniformNode from './core/UniformNode.js';\nimport VarNode from './core/VarNode.js';\nimport VaryingNode from './core/VaryingNode.js';\n\n// accessors\nimport BufferNode from './accessors/BufferNode.js';\nimport CameraNode from './accessors/CameraNode.js';\nimport CubeTextureNode from './accessors/CubeTextureNode.js';\nimport InstanceNode from './accessors/InstanceNode.js';\nimport MaterialNode from './accessors/MaterialNode.js';\nimport MaterialReferenceNode from './accessors/MaterialReferenceNode.js';\nimport ModelNode from './accessors/ModelNode.js';\nimport ModelViewProjectionNode from './accessors/ModelViewProjectionNode.js';\nimport NormalNode from './accessors/NormalNode.js';\nimport Object3DNode from './accessors/Object3DNode.js';\nimport PointUVNode from './accessors/PointUVNode.js';\nimport PositionNode from './accessors/PositionNode.js';\nimport ReferenceNode from './accessors/ReferenceNode.js';\nimport ReflectVectorNode from './accessors/ReflectVectorNode.js';\nimport SkinningNode from './accessors/SkinningNode.js';\nimport TextureNode from './accessors/TextureNode.js';\nimport UVNode from './accessors/UVNode.js';\nimport UserDataNode from './accessors/UserDataNode.js';\n\n// geometry\nimport RangeNode from './geometry/RangeNode.js';\n\n// gpgpu\nimport ComputeNode from './gpgpu/ComputeNode.js';\n\n// display\nimport ColorAdjustmentNode from './display/ColorAdjustmentNode.js';\nimport ColorSpaceNode from './display/ColorSpaceNode.js';\nimport FrontFacingNode from './display/FrontFacingNode.js';\nimport NormalMapNode from './display/NormalMapNode.js';\nimport ToneMappingNode from './display/ToneMappingNode.js';\n\n// math\nimport MathNode from './math/MathNode.js';\nimport OperatorNode from './math/OperatorNode.js';\nimport CondNode from './math/CondNode.js';\n\n// lighting\nimport PunctualLightNode from './lighting/PunctualLightNode.js';\nimport LightsNode from './lighting/LightsNode.js';\nimport LightingNode from './lighting/LightingNode.js';\nimport LightingContextNode from './lighting/LightingContextNode.js';\nimport HemisphereLightNode from './lighting/HemisphereLightNode.js';\nimport EnvironmentNode from './lighting/EnvironmentNode.js';\nimport AONode from './lighting/AONode.js';\nimport AnalyticLightNode from './lighting/AnalyticLightNode.js';\n\n// utils\nimport ArrayElementNode from './utils/ArrayElementNode.js';\nimport ConvertNode from './utils/ConvertNode.js';\nimport JoinNode from './utils/JoinNode.js';\nimport MatcapUVNode from './utils/MatcapUVNode.js';\nimport MaxMipLevelNode from './utils/MaxMipLevelNode.js';\nimport OscNode from './utils/OscNode.js';\nimport RotateUVNode from './utils/RotateUVNode.js'\nimport SplitNode from './utils/SplitNode.js';\nimport SpriteSheetUVNode from './utils/SpriteSheetUVNode.js';\nimport TimerNode from './utils/TimerNode.js';\n\n// loaders\nimport NodeLoader from './loaders/NodeLoader.js';\nimport NodeObjectLoader from './loaders/NodeObjectLoader.js';\nimport NodeMaterialLoader from './loaders/NodeMaterialLoader.js';\n\n// procedural\nimport CheckerNode from './procedural/CheckerNode.js';\n\n// fog\nimport FogNode from './fog/FogNode.js';\nimport FogRangeNode from './fog/FogRangeNode.js';\n\n// core\nexport * from './core/constants.js';\n\n// materials\nexport * from './materials/Materials.js';\n\n// shader node\nexport * from './shadernode/ShaderNodeElements.js';\n\nconst nodeLib = {\n\t// core\n\tArrayUniformNode,\n\tAttributeNode,\n\tBypassNode,\n\tCodeNode,\n\tContextNode,\n\tConstNode,\n\tExpressionNode,\n\tFunctionCallNode,\n\tFunctionNode,\n\tInstanceIndexNode,\n\tNode,\n\tNodeAttribute,\n\tNodeBuilder,\n\tNodeCode,\n\tNodeFrame,\n\tNodeFunctionInput,\n\tNodeKeywords,\n\tNodeUniform,\n\tNodeVar,\n\tNodeVarying,\n\tPropertyNode,\n\tTempNode,\n\tUniformNode,\n\tVarNode,\n\tVaryingNode,\n\n\t// geometry\n\tRangeNode,\n\n\t// gpgpu\n\tComputeNode,\n\n\t// accessors\n\tBufferNode,\n\tCameraNode,\n\tCubeTextureNode,\n\tInstanceNode,\n\tMaterialNode,\n\tMaterialReferenceNode,\n\tModelNode,\n\tModelViewProjectionNode,\n\tNormalNode,\n\tObject3DNode,\n\tPointUVNode,\n\tPositionNode,\n\tReferenceNode,\n\tReflectVectorNode,\n\tSkinningNode,\n\tTextureNode,\n\tUVNode,\n\tUserDataNode,\n\n\t// display\n\tColorAdjustmentNode,\n\tColorSpaceNode,\n\tFrontFacingNode,\n\tNormalMapNode,\n\tToneMappingNode,\n\n\t// math\n\tMathNode,\n\tOperatorNode,\n\tCondNode,\n\n\t// lighting\n\tPunctualLightNode,\n\tLightsNode,\n\tLightingNode,\n\tLightingContextNode,\n\tHemisphereLightNode,\n\tEnvironmentNode,\n\tAONode,\n\tAnalyticLightNode,\n\n\t// utils\n\tArrayElementNode,\n\tConvertNode,\n\tJoinNode,\n\tMatcapUVNode,\n\tMaxMipLevelNode,\n\tOscNode,\n\tRotateUVNode,\n\tSplitNode,\n\tSpriteSheetUVNode,\n\tTimerNode,\n\n\t// procedural\n\tCheckerNode,\n\n\t// fog\n\tFogNode,\n\tFogRangeNode,\n\n\t// loaders\n\tNodeLoader,\n\tNodeObjectLoader,\n\tNodeMaterialLoader\n\n};\n\nexport const fromType = ( type ) => {\n\n\treturn new nodeLib[ type ]();\n\n};\n\nexport {\n\t// core\n\tArrayUniformNode,\n\tAttributeNode,\n\tBypassNode,\n\tCodeNode,\n\tContextNode,\n\tConstNode,\n\tExpressionNode,\n\tFunctionCallNode,\n\tFunctionNode,\n\tInstanceIndexNode,\n\tNode,\n\tNodeAttribute,\n\tNodeBuilder,\n\tNodeCode,\n\tNodeFrame,\n\tNodeFunctionInput,\n\tNodeKeywords,\n\tNodeUniform,\n\tNodeVar,\n\tNodeVarying,\n\tPropertyNode,\n\tTempNode,\n\tUniformNode,\n\tVarNode,\n\tVaryingNode,\n\n\t// geometry\n\tRangeNode,\n\n\t// gpgpu\n\tComputeNode,\n\n\t// accessors\n\tBufferNode,\n\tCameraNode,\n\tCubeTextureNode,\n\tInstanceNode,\n\tMaterialNode,\n\tMaterialReferenceNode,\n\tModelNode,\n\tModelViewProjectionNode,\n\tNormalNode,\n\tObject3DNode,\n\tPointUVNode,\n\tPositionNode,\n\tReferenceNode,\n\tReflectVectorNode,\n\tSkinningNode,\n\tTextureNode,\n\tUVNode,\n\tUserDataNode,\n\n\t// display\n\tColorAdjustmentNode,\n\tColorSpaceNode,\n\tFrontFacingNode,\n\tNormalMapNode,\n\tToneMappingNode,\n\n\t// math\n\tMathNode,\n\tOperatorNode,\n\tCondNode,\n\n\t// lighting\n\tPunctualLightNode,\n\tLightsNode,\n\tLightingNode,\n\tLightingContextNode,\n\tHemisphereLightNode,\n\tEnvironmentNode,\n\tAONode,\n\tAnalyticLightNode,\n\n\t// utils\n\tArrayElementNode,\n\tConvertNode,\n\tJoinNode,\n\tMatcapUVNode,\n\tMaxMipLevelNode,\n\tOscNode,\n\tRotateUVNode,\n\tSplitNode,\n\tSpriteSheetUVNode,\n\tTimerNode,\n\n\t// procedural\n\tCheckerNode,\n\n\t// fog\n\tFogNode,\n\tFogRangeNode,\n\n\t// loaders\n\tNodeLoader,\n\tNodeObjectLoader,\n\tNodeMaterialLoader\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAM,kBAAkB;AAAA,EAC9B,QAAQ;AAAA,EACR,UAAU;AACX;AAEO,IAAM,iBAAiB;AAAA,EAC7B,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AACT;AAEO,IAAM,WAAW;AAAA,EACvB,SAAS;AAAA,EACT,SAAS;AAAA,EACT,OAAO;AAAA,EACP,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AACV;;;AClBO,IAAM,eAAe,CAAE,WAAY;AAEzC,QAAM,QAAQ,CAAC;AAEf,aAAY,QAAQ,QAAS;AAE5B,UAAM,QAAQ,OAAQ,IAAK;AAE3B,QAAK,SAAS,MAAM,WAAW,MAAO;AAErC,YAAM,KAAM,IAAK;AAAA,IAElB;AAAA,EAED;AAEA,SAAO;AAER;AAEO,IAAM,eAAe,CAAE,UAAW;AAExC,MAAK,OAAO,UAAU,UAAW;AAEhC,WAAO;AAAA,EAER,WAAY,OAAO,UAAU,WAAY;AAExC,WAAO;AAAA,EAER,YAAY,+BAAO,eAAc,MAAO;AAEvC,WAAO;AAAA,EAER,YAAY,+BAAO,eAAc,MAAO;AAEvC,WAAO;AAAA,EAER,YAAY,+BAAO,eAAc,MAAO;AAEvC,WAAO;AAAA,EAER,YAAY,+BAAO,eAAc,MAAO;AAEvC,WAAO;AAAA,EAER,YAAY,+BAAO,eAAc,MAAO;AAEvC,WAAO;AAAA,EAER,YAAY,+BAAO,aAAY,MAAO;AAErC,WAAO;AAAA,EAER;AAEA,SAAO;AAER;AAEO,IAAM,mBAAmB,CAAE,SAAS,WAAY;AAEtD,QAAM,QAAQ,6BAAM,MAAO;AAE3B,MAAK,SAAS,SAAU;AAEvB,WAAO,IAAI,MAAO,GAAG,MAAO;AAAA,EAE7B,WAAY,UAAU,QAAS;AAE9B,WAAO,IAAI,QAAS,GAAG,MAAO;AAAA,EAE/B,WAAY,UAAU,QAAS;AAE9B,WAAO,IAAI,QAAS,GAAG,MAAO;AAAA,EAE/B,WAAY,UAAU,QAAS;AAE9B,WAAO,IAAI,QAAS,GAAG,MAAO;AAAA,EAE/B,WAAY,UAAU,QAAS;AAE9B,WAAO,IAAI,QAAS,GAAG,MAAO;AAAA,EAE/B,WAAY,UAAU,QAAS;AAE9B,WAAO,IAAI,QAAS,GAAG,MAAO;AAAA,EAE/B,WAAY,SAAS,QAAS;AAE7B,WAAO;AAAA,EAER,WAAc,SAAS,WAAe,SAAS,SAAa,SAAS,QAAW;AAE/E,WAAO;AAAA,EAER;AAEA,SAAO;AAER;;;AClGA,IAAI,UAAU;AAEd,IAAM,OAAN,MAAW;AAAA,EAEV,YAAa,WAAW,MAAO;AAE9B,SAAK,SAAS;AAEd,SAAK,WAAW;AAEhB,SAAK,aAAa,eAAe;AAEjC,SAAK,OAAO,UAAU,aAAa;AAEnC,WAAO,eAAgB,MAAM,MAAM,EAAE,OAAO,UAAW,CAAE;AAAA,EAE1D;AAAA,EAEA,IAAI,OAAO;AAEV,WAAO,KAAK,YAAY;AAAA,EAEzB;AAAA,EAEA,cAAc;AAEb,UAAM,WAAW,CAAC;AAElB,eAAYA,aAAY,MAAO;AAE9B,YAAM,SAAS,KAAMA,SAAS;AAE9B,UAAK,MAAM,QAAS,MAAO,MAAM,MAAO;AAEvC,mBAAY,SAAS,QAAS;AAE7B,eAAK,+BAAO,YAAW,MAAO;AAE7B,qBAAS,KAAM,KAAM;AAAA,UAEtB;AAAA,QAED;AAAA,MAED,YAAY,iCAAQ,YAAW,MAAO;AAErC,iBAAS,KAAM,MAAO;AAAA,MAEvB;AAAA,IAED;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,UAAuB;AAEtB,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,gBAA6B;AAE5B,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,cAA2B;AAE1B,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,mBAAgC;AAE/B,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,aAAc,SAAU;AAEvB,UAAM,OAAO,KAAK,QAAS,OAAQ;AACnC,UAAM,eAAe,QAAQ,gBAAiB,IAAK;AAEnD,WAAO,gBAAgB;AAAA,EAExB;AAAA,EAEA,UAAW,SAAU;AAEpB,UAAM,iBAAiB,QAAQ,kBAAmB,IAAK;AAEvD,eAAY,aAAa,KAAK,YAAY,GAAI;AAE7C,qBAAgB,UAAU,UAAU,EAAG,IAAI;AAAA,IAE5C;AAGA,WAAO;AAAA,EAER;AAAA,EAEA,QAAS,SAAU;AAElB,UAAM,WAAW,QAAQ,gBAAiB,IAAK;AAC/C,aAAS,oBAAoB,SAAS,sBAAsB,SAAY,IAAI,SAAS,oBAAoB;AAEzG,QAAK,SAAS,sBAAsB,GAAI;AAIvC,YAAM,iBAAiB,QAAQ,kBAAmB,IAAK;AAEvD,iBAAY,aAAa,OAAO,OAAQ,cAAe,GAAI;AAE1D,aAAK,uCAAW,YAAW,MAAO;AAEjC,oBAAU,MAAO,OAAQ;AAAA,QAE1B;AAAA,MAED;AAAA,IAED;AAAA,EAED;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,EAAE,WAAW,IAAI,QAAQ,kBAAmB,IAAK;AAEvD,SAAK,yCAAY,YAAW,MAAO;AAElC,aAAO,WAAW,MAAO,SAAS,MAAO;AAAA,IAE1C;AAAA,EAED;AAAA,EAEA,SAAoB;AAEnB,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA,EAEA,MAAO,SAAS,SAAS,MAAO;AAE/B,UAAM,UAAU,KAAK,aAAc,OAAQ;AAE3C,QAAK,SAAS,SAAU;AAEvB,aAAO,QAAQ,MAAO,SAAS,MAAO;AAAA,IAEvC;AAEA,YAAQ,QAAS,IAAK;AACtB,YAAQ,SAAU,IAAK;AAOvB,QAAI,SAAS;AAEb,UAAM,aAAa,QAAQ,cAAc;AAEzC,QAAK,eAAe,aAAc;AAEjC,YAAM,aAAa,QAAQ,kBAAmB,IAAK;AAEnD,UAAK,WAAW,gBAAgB,QAAQ,QAAQ,QAAQ,aAAa,OAAQ;AAE5E,mBAAW,cAAc;AACzB,mBAAW,aAAa,KAAK,UAAW,OAAQ;AAEhD,mBAAY,aAAa,OAAO,OAAQ,UAAW,GAAI;AAEtD,eAAK,uCAAW,YAAW,MAAO;AAEjC,sBAAU,MAAO,OAAQ;AAAA,UAE1B;AAAA,QAED;AAAA,MAED;AAAA,IAED,WAAY,eAAe,WAAY;AAEtC,WAAK,QAAS,OAAQ;AAAA,IAEvB,WAAY,eAAe,YAAa;AAEvC,YAAM,iBAAiB,KAAK,SAAS,WAAW;AAEhD,UAAK,gBAAiB;AAErB,cAAM,OAAO,KAAK,YAAa,OAAQ;AACvC,cAAM,WAAW,QAAQ,gBAAiB,IAAK;AAE/C,iBAAS,SAAS;AAElB,YAAK,WAAW,QAAsD;AAErE,mBAAS,KAAK,SAAU,OAAQ,KAAK;AAErC,mBAAS,UAAU;AAAA,QAEpB;AAEA,iBAAS,QAAQ,OAAQ,QAAQ,MAAM,MAAO;AAAA,MAE/C,OAAO;AAEN,iBAAS,KAAK,SAAU,SAAS,MAAO,KAAK;AAAA,MAE9C;AAAA,IAED;AAEA,YAAQ,YAAa,IAAK;AAE1B,WAAO;AAAA,EAER;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,WAAW,aAAc,IAAK;AAEpC,QAAK,SAAS,SAAS,GAAI;AAE1B,YAAM,aAAa,CAAC;AAEpB,iBAAYA,aAAY,UAAW;AAElC,mBAAYA,SAAS,IAAI,KAAMA,SAAS,EAAE,OAAQ,KAAK,IAAK,EAAE;AAAA,MAE/D;AAEA,WAAK,aAAa;AAAA,IAEnB;AAAA,EAED;AAAA,EAEA,YAAa,MAAO;AAEnB,QAAK,KAAK,eAAe,QAAY;AAEpC,YAAM,QAAQ,KAAK,KAAK;AAExB,iBAAYA,aAAY,KAAK,YAAa;AAEzC,cAAM,OAAO,KAAK,WAAYA,SAAS;AAEvC,aAAMA,SAAS,IAAI,MAAO,IAAK;AAAA,MAEhC;AAAA,IAED;AAAA,EAED;AAAA,EAEA,OAAQ,MAAO;AAEd,UAAM,EAAE,MAAM,KAAK,IAAI;AACvB,UAAM,SAAW,SAAS,UAAa,OAAO,SAAS;AAEvD,QAAK,QAAS;AAEb,aAAO;AAAA,QACN,UAAU,CAAC;AAAA,QACX,QAAQ,CAAC;AAAA,QACT,OAAO,CAAC;AAAA,MACT;AAAA,IAED;AAIA,QAAI,OAAO,KAAK,MAAO,IAAK;AAE5B,QAAK,SAAS,QAAY;AAEzB,aAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAU;AAAA,UACT,SAAS;AAAA,UACT,MAAM;AAAA,UACN,WAAW;AAAA,QACZ;AAAA,MACD;AAEA,WAAK,MAAO,KAAK,IAAK,IAAI;AAE1B,WAAK,UAAW,IAAK;AAErB,aAAO,KAAK;AAAA,IAEb;AAIA,aAAS,iBAAkB,OAAQ;AAElC,YAAM,SAAS,CAAC;AAEhB,iBAAY,OAAO,OAAQ;AAE1B,cAAMC,QAAO,MAAO,GAAI;AACxB,eAAOA,MAAK;AACZ,eAAO,KAAMA,KAAK;AAAA,MAEnB;AAEA,aAAO;AAAA,IAER;AAEA,QAAK,QAAS;AAEb,YAAM,WAAW,iBAAkB,KAAK,QAAS;AACjD,YAAM,SAAS,iBAAkB,KAAK,MAAO;AAC7C,YAAM,QAAQ,iBAAkB,KAAK,KAAM;AAE3C,UAAK,SAAS,SAAS;AAAI,aAAK,WAAW;AAC3C,UAAK,OAAO,SAAS;AAAI,aAAK,SAAS;AACvC,UAAK,MAAM,SAAS;AAAI,aAAK,QAAQ;AAAA,IAEtC;AAEA,WAAO;AAAA,EAER;AAED;AAEA,IAAO,eAAQ;;;ACxVf,IAAM,YAAN,cAAwB,aAAK;AAAA,EAE5B,YAAa,OAAO,WAAW,MAAO;AAErC,UAAO,QAAS;AAEhB,SAAK,cAAc;AAEnB,SAAK,QAAQ;AAAA,EAEd;AAAA,EAEA,cAA2B;AAE1B,QAAK,KAAK,aAAa,MAAO;AAE7B,aAAO,aAAc,KAAK,KAAM;AAAA,IAEjC;AAEA,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,aAAc,SAAU;AAEvB,WAAO,KAAK,YAAa,OAAQ;AAAA,EAElC;AAAA,EAEA,UAAW,MAAO;AAjCnB;AAmCE,UAAM,UAAW,IAAK;AAEtB,SAAK,UAAQ,gBAAK,UAAL,mBAAY,YAAZ,gCAA2B,KAAK;AAC7C,SAAK,YAAY,aAAc,KAAK,KAAM;AAC1C,SAAK,WAAW,KAAK;AAAA,EAEtB;AAAA,EAEA,YAAa,MAAO;AA3CrB;AA6CE,UAAM,YAAa,IAAK;AAExB,SAAK,WAAW,KAAK;AACrB,SAAK,QAAQ,iBAAkB,KAAK,SAAU;AAC9C,SAAK,UAAQ,gBAAK,UAAL,mBAAY,cAAZ,4BAAyB,KAAK,WAAW,KAAK;AAAA,EAE5D;AAAA,EAEA,WAAgC;AAE/B,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAED;AAEA,IAAO,oBAAQ;;;AC3Df,IAAM,cAAN,cAA0B,kBAAU;AAAA,EAEnC,YAAa,OAAO,WAAW,MAAO;AAErC,UAAO,OAAO,QAAS;AAEvB,SAAK,gBAAgB;AAAA,EAEtB;AAAA,EAEA,eAAgB,SAAU;AAEzB,WAAO,KAAK,QAAS,OAAQ;AAAA,EAE9B;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,OAAO,KAAK,YAAa,OAAQ;AAEvC,UAAM,OAAO,KAAK,eAAgB,OAAQ;AAE1C,QAAI,aAAa,QAAQ,gBAAiB,IAAK;AAE/C,QAAK,eAAe,QAAY;AAE/B,cAAQ,YAAa,MAAM,IAAK;AAEhC,mBAAa;AAAA,IAEd;AAEA,UAAM,iBAAiB,WAAW,aAAc,OAAQ;AAExD,UAAM,cAAc,QAAQ,mBAAoB,YAAY,QAAQ,aAAa,cAAe;AAChG,UAAM,eAAe,QAAQ,gBAAiB,WAAY;AAE1D,WAAO,QAAQ,OAAQ,cAAc,MAAM,MAAO;AAAA,EAEnD;AAED;AAEA,IAAO,sBAAQ;;;AC3Cf,IAAM,mBAAN,cAA+B,oBAAY;AAAA,EAE1C,YAAa,QAAQ,CAAC,GAAI;AAEzB,UAAM;AAEN,SAAK,qBAAqB;AAE1B,SAAK,QAAQ;AAAA,EAEd;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAO,KAAK,MAAO,CAAE,EAAE,YAAa,OAAQ;AAAA,EAE7C;AAED;AAEA,IAAO,2BAAQ;;;ACnBf,IAAM,cAAN,cAA0B,aAAK;AAAA,EAE9B,YAAa,MAAM,OAAO,MAAO;AAEhC,UAAM;AAEN,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EAEb;AAAA,EAEA,QAAS,SAAU;AAElB,WAAO,KAAK,QAAQ,MAAM,QAAS,OAAQ;AAAA,EAE5C;AAAA,EAEA,YAAa,SAAU;AAItB,WAAO,KAAK,KAAK,YAAa,OAAQ;AAAA,EAEvC;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,OAAO,KAAK,YAAa,OAAQ;AACvC,UAAM,OAAO,KAAK;AAClB,UAAM,OAAO,KAAK;AAElB,UAAM,cAAc,QAAQ,mBAAoB,MAAM,IAAK;AAE3D,QAAK,SAAS,MAAO;AAEpB,kBAAY,OAAO;AAAA,IAEpB;AAEA,UAAM,eAAe,QAAQ,gBAAiB,aAAa,gBAAgB,MAAO;AAGlF,YAAQ,wBAAyB,gBAAgB,QAAQ,MAAM,MAAM,YAAa;AAElF,WAAO,QAAQ,gBAAiB,WAAY;AAAA,EAE7C;AAED;AAEA,IAAO,sBAAQ;;;AClDf,IAAM,gBAAN,cAA4B,aAAK;AAAA,EAEhC,YAAa,eAAe,WAAW,MAAO;AAE7C,UAAO,QAAS;AAEhB,SAAK,iBAAiB;AAAA,EAEvB;AAAA,EAEA,QAAS,SAAU;AAElB,WAAO,KAAK,iBAAkB,OAAQ;AAAA,EAEvC;AAAA,EAEA,YAAa,SAAU;AAEtB,QAAI,WAAW,MAAM,YAAa,OAAQ;AAE1C,QAAK,aAAa,MAAO;AAExB,YAAM,gBAAgB,KAAK,iBAAkB,OAAQ;AACrD,YAAMC,aAAY,QAAQ,SAAS,aAAc,aAAc;AAE/D,iBAAW,QAAQ,kBAAmBA,WAAU,QAAS;AAAA,IAE1D;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,iBAAkB,eAAgB;AAEjC,SAAK,iBAAiB;AAEtB,WAAO;AAAA,EAER;AAAA,EAEA,mBAAgC;AAE/B,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAMA,aAAY,QAAQ,aAAc,KAAK,iBAAkB,OAAQ,GAAG,KAAK,YAAa,OAAQ,CAAE;AAEtG,QAAK,QAAQ,cAAe,QAAS,GAAI;AAExC,aAAOA,WAAU;AAAA,IAElB,OAAO;AAEN,YAAM,cAAc,IAAI,oBAAa,IAAK;AAE1C,aAAO,YAAY,MAAO,SAASA,WAAU,IAAK;AAAA,IAEnD;AAAA,EAED;AAED;AAEA,IAAO,wBAAQ;;;ACpEf,IAAM,aAAN,cAAyB,aAAK;AAAA,EAE7B,YAAa,YAAY,UAAW;AAEnC,UAAM;AAEN,SAAK,eAAe;AAEpB,SAAK,aAAa;AAClB,SAAK,WAAW;AAAA,EAEjB;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAO,KAAK,WAAW,YAAa,OAAQ;AAAA,EAE7C;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,UAAU,KAAK,SAAS,MAAO,SAAS,MAAO;AAErD,QAAK,YAAY,IAAK;AAErB,cAAQ,YAAa,OAAQ;AAAA,IAE9B;AAEA,WAAO,KAAK,WAAW,MAAO,SAAS,MAAO;AAAA,EAE/C;AAED;AAEA,IAAO,qBAAQ;;;ACnCf,IAAM,WAAN,cAAuB,aAAK;AAAA,EAE3B,YAAaC,QAAO,IAAI,WAAW,QAAS;AAE3C,UAAO,QAAS;AAEhB,SAAK,aAAa;AAElB,SAAK,OAAOA;AAEZ,SAAK,YAAY,CAAC;AAAA,EAEnB;AAAA,EAEA,YAAa,UAAW;AAEvB,SAAK,YAAY;AAEjB,WAAO;AAAA,EAER;AAAA,EAEA,cAA2B;AAE1B,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,WAAW,KAAK,YAAa,OAAQ;AAE3C,eAAY,WAAW,UAAW;AAEjC,cAAQ,MAAO,OAAQ;AAAA,IAExB;AAEA,UAAM,WAAW,QAAQ,gBAAiB,MAAM,KAAK,YAAa,OAAQ,CAAE;AAC5E,aAAS,OAAO,KAAK;AAErB,WAAO,SAAS;AAAA,EAEjB;AAED;AAEA,IAAO,mBAAQ;;;AC/Cf,IAAM,YAAN,cAAwB,kBAAU;AAAA,EAEjC,YAAa,OAAO,WAAW,MAAO;AAErC,UAAO,OAAO,QAAS;AAEvB,SAAK,cAAc;AAAA,EAEpB;AAAA,EAEA,cAAe,SAAU;AAExB,WAAO,QAAQ,SAAU,KAAK,YAAa,OAAQ,GAAG,KAAK,KAAM;AAAA,EAElE;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,OAAO,KAAK,YAAa,OAAQ;AAEvC,WAAO,QAAQ,OAAQ,KAAK,cAAe,OAAQ,GAAG,MAAM,MAAO;AAAA,EAEpE;AAED;AAEA,IAAO,oBAAQ;;;AC1Bf,IAAM,cAAN,cAA0B,aAAK;AAAA,EAE9B,YAAa,MAAMC,WAAU,CAAC,GAAI;AAEjC,UAAM;AAEN,SAAK,gBAAgB;AAErB,SAAK,OAAO;AACZ,SAAK,UAAUA;AAAA,EAEhB;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAO,KAAK,KAAK,YAAa,OAAQ;AAAA,EAEvC;AAAA,EAEA,UAAW,SAAU;AAEpB,UAAM,kBAAkB,QAAQ,WAAW;AAE3C,YAAQ,WAAY,EAAE,GAAG,QAAQ,SAAS,GAAG,KAAK,QAAQ,CAAE;AAE5D,UAAM,OAAO,KAAK,KAAK,MAAO,OAAQ;AAEtC,YAAQ,WAAY,eAAgB;AAEpC,WAAO;AAAA,EAER;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,kBAAkB,QAAQ,WAAW;AAE3C,YAAQ,WAAY,EAAE,GAAG,QAAQ,SAAS,GAAG,KAAK,QAAQ,CAAE;AAE5D,UAAM,UAAU,KAAK,KAAK,MAAO,SAAS,MAAO;AAEjD,YAAQ,WAAY,eAAgB;AAEpC,WAAO;AAAA,EAER;AAED;AAEA,IAAO,sBAAQ;;;ACjDf,IAAM,WAAN,cAAuB,aAAK;AAAA,EAE3B,YAAa,MAAO;AAEnB,UAAO,IAAK;AAEZ,SAAK,aAAa;AAAA,EAEnB;AAAA,EAEA,MAAO,SAAS,QAAS;AAExB,UAAM,aAAa,QAAQ,cAAc;AAEzC,QAAK,eAAe,YAAa;AAEhC,YAAM,OAAO,QAAQ,cAAe,KAAK,YAAa,SAAS,MAAO,CAAE;AACxE,YAAM,WAAW,QAAQ,gBAAiB,IAAK;AAE/C,UAAK,QAAQ,QAAQ,aAAa,SAAS,SAAS,iBAAiB,QAAY;AAEhF,eAAO,QAAQ,OAAQ,SAAS,cAAc,MAAM,MAAO;AAAA,MAE5D,WAAY,QAAQ,QAAQ,cAAc,SAAS,SAAS,WAAW,WAAW,UAAU,SAAS,oBAAoB,GAAI;AAE5H,cAAM,UAAU,MAAM,MAAO,SAAS,IAAK;AAE3C,cAAM,UAAU,QAAQ,eAAgB,MAAM,IAAK;AACnD,cAAM,eAAe,QAAQ,gBAAiB,OAAQ;AAEtD,gBAAQ,YAAa,GAAG,YAAY,MAAM,OAAO,EAAG;AAEpD,iBAAS,UAAU;AACnB,iBAAS,eAAe;AAExB,eAAO,QAAQ,OAAQ,SAAS,cAAc,MAAM,MAAO;AAAA,MAE5D;AAAA,IAED;AAEA,WAAO,MAAM,MAAO,SAAS,MAAO;AAAA,EAErC;AAED;AAEA,IAAO,mBAAQ;;;AC/Cf,IAAM,iBAAN,cAA6B,iBAAS;AAAA,EAErC,YAAa,UAAU,IAAI,WAAW,QAAS;AAE9C,UAAO,QAAS;AAEhB,SAAK,UAAU;AAAA,EAEhB;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,OAAO,KAAK,YAAa,OAAQ;AACvC,UAAM,UAAU,KAAK;AAErB,QAAK,SAAS,QAAS;AAEtB,cAAQ,YAAa,OAAQ;AAAA,IAE9B,OAAO;AAEN,aAAO,KAAM,OAAQ;AAAA,IAEtB;AAAA,EAED;AAED;AAEA,IAAO,yBAAQ;;;AC7Bf,IAAM,mBAAN,cAA+B,iBAAS;AAAA,EAEvC,YAAa,eAAe,MAAM,aAAa,CAAC,GAAI;AAEnD,UAAM;AAEN,SAAK,eAAe;AACpB,SAAK,aAAa;AAAA,EAEnB;AAAA,EAEA,cAAe,YAAa;AAE3B,SAAK,aAAa;AAElB,WAAO;AAAA,EAER;AAAA,EAEA,gBAAgB;AAEf,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAO,KAAK,aAAa,YAAa,OAAQ;AAAA,EAE/C;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,SAAS,CAAC;AAEhB,UAAM,eAAe,KAAK;AAE1B,UAAM,SAAS,aAAa,UAAW,OAAQ;AAC/C,UAAM,aAAa,KAAK;AAExB,eAAY,aAAa,QAAS;AAEjC,YAAM,OAAO,WAAY,UAAU,IAAK;AAExC,UAAK,SAAS,QAAY;AAEzB,eAAO,KAAM,KAAK,MAAO,SAAS,UAAU,IAAK,CAAE;AAAA,MAEpD,OAAO;AAEN,cAAM,IAAI,MAAO,4BAA4B,UAAU,IAAI,8BAA+B;AAAA,MAE3F;AAAA,IAED;AAEA,UAAM,eAAe,aAAa,MAAO,SAAS,UAAW;AAE7D,WAAO,GAAG,YAAY,KAAK,OAAO,KAAM,IAAK,CAAC;AAAA,EAE/C;AAED;AAEA,IAAO,2BAAQ;;;AC/Df,IAAM,eAAN,cAA2B,iBAAS;AAAA,EAEnC,YAAaC,QAAO,IAAK;AAExB,UAAOA,KAAK;AAEZ,SAAK,WAAW,CAAC;AAAA,EAElB;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAO,KAAK,gBAAiB,OAAQ,EAAE;AAAA,EAExC;AAAA,EAEA,UAAW,SAAU;AAEpB,WAAO,KAAK,gBAAiB,OAAQ,EAAE;AAAA,EAExC;AAAA,EAEA,gBAAiB,SAAU;AAE1B,UAAM,WAAW,QAAQ,gBAAiB,IAAK;AAE/C,QAAI,eAAe,SAAS;AAE5B,QAAK,iBAAiB,QAAY;AAEjC,qBAAe,QAAQ,OAAO,cAAe,KAAK,IAAK;AAEvD,eAAS,eAAe;AAAA,IAEzB;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,KAAM,aAAa,CAAC,GAAI;AAEvB,WAAO,IAAI,yBAAkB,MAAM,UAAW;AAAA,EAE/C;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,SAAU,OAAQ;AAExB,UAAM,eAAe,KAAK,gBAAiB,OAAQ;AAEnD,UAAM,OAAO,aAAa;AAC1B,UAAM,OAAO,aAAa;AAE1B,UAAM,WAAW,QAAQ,gBAAiB,MAAM,IAAK;AAErD,QAAK,SAAS,IAAK;AAIlB,eAAS,OAAO;AAAA,IAEjB;AAEA,UAAM,eAAe,QAAQ,gBAAiB,QAAS;AAEvD,QAAIA,QAAO,KAAK,gBAAiB,OAAQ,EAAE,QAAS,YAAa;AAEjE,UAAM,WAAW,KAAK;AACtB,UAAM,qBAAqB,OAAO,KAAM,QAAS;AAEjD,QAAK,mBAAmB,SAAS,GAAI;AAEpC,iBAAYC,aAAY,oBAAqB;AAE5C,cAAM,iBAAiB,IAAI,OAAQ,MAAMA,SAAQ,OAAO,GAAI;AAC5D,cAAM,eAAe,SAAUA,SAAS,EAAE,MAAO,SAAS,UAAW;AAErE,QAAAD,QAAOA,MAAK,QAAS,gBAAgB,YAAa;AAAA,MAEnD;AAAA,IAED;AAEA,aAAS,OAAOA;AAEhB,QAAK,WAAW,YAAa;AAE5B,aAAO;AAAA,IAER,OAAO;AAEN,aAAO,QAAQ,OAAQ,GAAI,YAAa,MAAM,MAAM,MAAO;AAAA,IAE5D;AAAA,EAED;AAED;AAEA,IAAO,uBAAQ;;;ACtGf,IAAM,oBAAN,cAAgC,aAAK;AAAA,EAEpC,cAAc;AAEb,UAAO,MAAO;AAEd,SAAK,sBAAsB;AAAA,EAE5B;AAAA,EAEA,SAAU,SAAU;AAEnB,WAAO,QAAQ,iBAAiB;AAAA,EAEjC;AAED;AAEA,IAAO,4BAAQ;;;ACpBf,IAAM,gBAAN,MAAoB;AAAA,EAEnB,YAAa,MAAM,MAAO;AAEzB,SAAK,kBAAkB;AAEvB,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EAEb;AAED;AAEA,IAAO,wBAAQ;;;ACbf,IAAM,cAAN,MAAkB;AAAA,EAEjB,YAAa,MAAM,MAAM,MAAM,cAAc,QAAY;AAExD,SAAK,gBAAgB;AAErB,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,cAAc;AAAA,EAEpB;AAAA,EAEA,IAAI,QAAQ;AAEX,WAAO,KAAK,KAAK;AAAA,EAElB;AAAA,EAEA,IAAI,MAAO,KAAM;AAEhB,SAAK,KAAK,QAAQ;AAAA,EAEnB;AAED;AAEA,IAAO,sBAAQ;;;AC3Bf,IAAM,cAAN,MAAkB;AAAA,EAEjB,YAAa,MAAM,MAAO;AAEzB,SAAK,gBAAgB;AAErB,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EAEb;AAED;AAEA,IAAO,sBAAQ;;;ACbf,IAAM,UAAN,MAAc;AAAA,EAEb,YAAa,MAAM,MAAO;AAEzB,SAAK,YAAY;AAEjB,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EAEb;AAED;AAEA,IAAO,kBAAQ;;;ACbf,IAAM,WAAN,MAAe;AAAA,EAEd,YAAa,MAAM,MAAME,QAAO,IAAK;AAEpC,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,OAAOA;AAEZ,WAAO,eAAgB,MAAM,cAAc,EAAE,OAAO,KAAK,CAAE;AAAA,EAE5D;AAED;AAEA,IAAO,mBAAQ;;;ACdf,IAAM,eAAN,MAAmB;AAAA,EAElB,cAAc;AAEb,SAAK,WAAW,CAAC;AACjB,SAAK,QAAQ,CAAC;AACd,SAAK,mBAAmB,CAAC;AAAA,EAE1B;AAAA,EAEA,QAAS,MAAO;AAEf,QAAI,OAAO,KAAK,MAAO,IAAK;AAE5B,QAAK,SAAS,UAAa,KAAK,iBAAkB,IAAK,MAAM,QAAY;AAExE,aAAO,KAAK,iBAAkB,IAAK,EAAG,IAAK;AAE3C,WAAK,MAAO,IAAK,IAAI;AAAA,IAEtB;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,WAAY,MAAM,UAAW;AAE5B,SAAK,SAAS,KAAM,IAAK;AACzB,SAAK,iBAAkB,IAAK,IAAI;AAEhC,WAAO;AAAA,EAER;AAAA,EAEA,MAAOC,OAAO;AAEb,UAAM,eAAe,KAAK;AAE1B,UAAM,SAAS,IAAI,OAAQ,MAAM,aAAa,KAAM,SAAU,CAAC,OAAO,GAAI;AAE1E,UAAM,eAAeA,MAAK,MAAO,MAAO;AAExC,UAAM,eAAe,CAAC;AAEtB,QAAK,iBAAiB,MAAO;AAE5B,iBAAY,WAAW,cAAe;AAErC,cAAM,OAAO,KAAK,QAAS,OAAQ;AAEnC,YAAK,SAAS,UAAa,aAAa,QAAS,IAAK,MAAM,IAAM;AAEjE,uBAAa,KAAM,IAAK;AAAA,QAEzB;AAAA,MAED;AAAA,IAED;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,QAAS,SAASA,OAAO;AAExB,UAAM,eAAe,KAAK,MAAOA,KAAK;AAEtC,eAAY,eAAe,cAAe;AAEzC,kBAAY,MAAO,OAAQ;AAAA,IAE5B;AAAA,EAED;AAED;AAEA,IAAO,uBAAQ;;;ACrER,IAAM,sBAAsB,CAAE,YAAY,QAAS;AACnD,IAAM,eAAe,CAAE,GAAG,qBAAqB,SAAU;AACzD,IAAM,SAAS,CAAE,KAAK,KAAK,KAAK,GAAI;AAE3C,IAAM,iBAAiB,oBAAI,IAAI;AAC/B,eAAe,IAAK,GAAG,OAAQ;AAC/B,eAAe,IAAK,GAAG,MAAO;AAC9B,eAAe,IAAK,GAAG,MAAO;AAC9B,eAAe,IAAK,GAAG,MAAO;AAC9B,eAAe,IAAK,GAAG,MAAO;AAC9B,eAAe,IAAK,IAAI,MAAO;AAE/B,IAAM,UAAU,CAAE,UAAW;AAE5B,UAAQ,OAAQ,KAAM;AAEtB,SAAO,SAAU,QAAQ,IAAI,KAAK;AAEnC;AAEA,IAAM,cAAN,MAAkB;AAAA,EAEjB,YAAa,QAAQ,UAAU,QAAS;AAEvC,SAAK,SAAS;AACd,SAAK,WAAW,OAAO,YAAY;AACnC,SAAK,WAAW,OAAO,YAAY;AACnC,SAAK,WAAW;AAChB,SAAK,SAAS;AAEd,SAAK,QAAQ,CAAC;AACd,SAAK,cAAc,CAAC;AACpB,SAAK,YAAY,CAAC;AAElB,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,UAAU;AAEf,SAAK,eAAe;AACpB,SAAK,iBAAiB;AACtB,SAAK,gBAAgB;AAErB,SAAK,YAAY,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,GAAG,SAAS,CAAC,EAAE;AACzD,SAAK,WAAW,EAAE,QAAQ,IAAI,UAAU,IAAI,SAAS,CAAC,EAAE;AACxD,SAAK,WAAW,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,GAAG,SAAS,CAAC,GAAG,OAAO,EAAE;AAClE,SAAK,QAAQ,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,GAAG,SAAS,CAAC,EAAE;AACrD,SAAK,aAAa,CAAC;AACnB,SAAK,WAAW,CAAC;AACjB,SAAK,OAAO,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,GAAG,SAAS,CAAC,EAAE;AACpD,SAAK,OAAO,EAAE,MAAM,GAAG;AACvB,SAAK,QAAQ,CAAC;AAEd,SAAK,UAAU;AAAA,MACd,UAAU,IAAI,qBAAa;AAAA,MAC3B,UAAU,OAAO;AAAA,IAClB;AAEA,SAAK,YAAY,oBAAI,QAAQ;AAC7B,SAAK,YAAY,oBAAI,QAAQ;AAE7B,SAAK,cAAc;AACnB,SAAK,aAAa;AAAA,EAEnB;AAAA,EAEA,IAAI,OAAO;AAEV,WAAO,KAAK,MAAO,KAAK,MAAM,SAAS,CAAE;AAAA,EAE1C;AAAA,EAEA,SAAU,MAAO;AAUhB,SAAK,MAAM,KAAM,IAAK;AAAA,EAEvB;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAY,KAAK,MAAM,IAAI;AAEjC,QAAK,cAAc,MAAO;AAEzB,YAAM,IAAI,MAAO,kCAAmC;AAAA,IAErD;AAAA,EAED;AAAA,EAEA,YAAa,MAAM,MAAO;AAEzB,SAAK,UAAW,IAAK,IAAI;AAAA,EAE1B;AAAA,EAEA,QAAS,MAAO;AAEf,QAAK,KAAK,MAAM,QAAS,IAAK,MAAM,IAAM;AAEzC,YAAM,aAAa,KAAK,cAAe,IAAK;AAE5C,UAAK,eAAe,eAAe,MAAO;AAEzC,aAAK,YAAY,KAAM,IAAK;AAAA,MAE7B;AAEA,WAAK,MAAM,KAAM,IAAK;AAEtB,WAAK,YAAa,MAAM,KAAK,QAAS,IAAK,CAAE;AAAA,IAE9C;AAAA,EAED;AAAA,EAEA,UAAW,QAAS;AAEnB,WAAO;AAAA,EAER;AAAA,EAEA,gBAAiB,MAAO;AAEvB,WAAO,KAAK,UAAW,IAAK;AAAA,EAE7B;AAAA,EAEA,QAAS,aAAa,MAAO;AAE5B,SAAK,UAAW,WAAY,EAAE,KAAM,IAAK;AAEzC,WAAO;AAAA,EAER;AAAA,EAEA,WAAYC,UAAU;AAErB,SAAK,UAAUA;AAAA,EAEhB;AAAA,EAEA,aAAa;AAEZ,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,cAAwB;AAEvB,WAAO;AAAA,EAER;AAAA,EAEA,mBAAmB;AAElB,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA,EAEA,iBAAiB;AAEhB,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA,EAEA,aAA+C;AAE9C,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA,EAEA,kBAAkE;AAEjE,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA,EAEA,iBAAmD;AAElD,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA,EAEA,sBAAsE;AAErE,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA;AAAA,EAGA,SAAU,MAAM,OAAQ;AAEvB,QAAK,SAAS;AAAU,aAAO,QAAS,KAAM;AAC9C,QAAK,SAAS;AAAQ,aAAO,GAAI,KAAK,MAAO,KAAM,CAAE;AACrD,QAAK,SAAS;AAAS,aAAO,SAAS,IAAI,GAAI,KAAK,MAAO,KAAM,CAAE,MAAM;AACzE,QAAK,SAAS;AAAS,aAAO,QAAQ,SAAS;AAC/C,QAAK,SAAS;AAAU,aAAO,GAAI,KAAK,QAAS,MAAO,CAAE,KAAM,QAAS,MAAM,CAAE,CAAE,KAAM,QAAS,MAAM,CAAE,CAAE,KAAM,QAAS,MAAM,CAAE,CAAE;AAErI,UAAM,aAAa,KAAK,cAAe,IAAK;AAE5C,UAAM,gBAAgB,KAAK,iBAAkB,IAAK;AAElD,UAAM,WAAW,CAAAC,WAAS,KAAK,SAAU,eAAeA,MAAM;AAE9D,QAAK,eAAe,GAAI;AAEvB,aAAO,GAAI,KAAK,QAAS,IAAK,CAAE,KAAM,SAAU,MAAM,CAAE,CAAE,KAAM,SAAU,MAAM,CAAE,CAAE;AAAA,IAErF,WAAY,eAAe,GAAI;AAE9B,aAAO,GAAI,KAAK,QAAS,IAAK,CAAE,KAAM,SAAU,MAAM,CAAE,CAAE,KAAM,SAAU,MAAM,CAAE,CAAE,KAAM,SAAU,MAAM,CAAE,CAAE;AAAA,IAE/G,WAAY,eAAe,GAAI;AAE9B,aAAO,GAAI,KAAK,QAAS,IAAK,CAAE,KAAM,SAAU,MAAM,CAAE,CAAE,KAAM,SAAU,MAAM,CAAE,CAAE,KAAM,SAAU,MAAM,CAAE,CAAE,KAAM,SAAU,MAAM,CAAE,CAAE;AAAA,IAEzI,WAAY,aAAa,GAAI;AAE5B,aAAO,GAAI,KAAK,QAAS,IAAK,CAAE;AAAA,IAEjC;AAEA,UAAM,IAAI,MAAO,sBAAsB,IAAI,2CAA4C;AAAA,EAExF;AAAA,EAEA,QAAS,MAAO;AAEf,WAAO;AAAA,EAER;AAAA,EAEA,eAAgB,QAAS;AAExB,WAAO;AAAA,EAER;AAAA,EAEA,aAAc,MAAM,MAAO;AAE1B,UAAM,aAAa,KAAK;AAIxB,eAAYC,cAAa,YAAa;AAErC,UAAKA,WAAU,SAAS,MAAO;AAE9B,eAAOA;AAAA,MAER;AAAA,IAED;AAIA,UAAMA,aAAY,IAAI,sBAAe,MAAM,IAAK;AAEhD,eAAW,KAAMA,UAAU;AAE3B,WAAOA;AAAA,EAER;AAAA,EAEA,gBAAiB,MAAwB;AAExC,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,SAAU,MAAO;AAEhB,WAAO,QAAQ,KAAM,IAAK;AAAA,EAE3B;AAAA,EAEA,SAAU,MAAO;AAEhB,WAAO,QAAQ,KAAM,IAAK;AAAA,EAE3B;AAAA,EAEA,YAAa,MAAO;AAEnB,WAAO,SAAS,UAAU,SAAS,cAAc,SAAS,aAAa,SAAS,aAAa,SAAS;AAAA,EAEvG;AAAA,EAEA,cAAe,aAAc;AAE5B,WAAO,KAAK,gBAAgB;AAAA,EAE7B;AAAA,EAEA,0BAA2B,KAAM;AAEhC,QAAI;AAEJ,QAAK,OAAO,IAAI,WAAY;AAE3B,iBAAW,IAAI;AAAA,IAEhB,WAAY,OAAO,IAAI,qBAAsB;AAE5C,iBAAW,IAAI,QAAQ;AAAA,IAExB,OAAO;AAEN,iBAAW;AAAA,IAEZ;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,iBAAkB,MAAO;AAExB,WAAO,KAAK,cAAe,IAAK;AAEhC,UAAM,gBAAgB,2BAA2B,KAAM,IAAK;AAE5D,QAAK,kBAAkB;AAAO,aAAO;AAErC,QAAK,cAAe,CAAE,MAAM;AAAM,aAAO;AACzC,QAAK,cAAe,CAAE,MAAM;AAAM,aAAO;AACzC,QAAK,cAAe,CAAE,MAAM;AAAM,aAAO;AAEzC,WAAO;AAAA,EAER;AAAA,EAEA,cAAe,MAAO;AAErB,QAAK,SAAS;AAAU,aAAO;AAC/B,QAAK,SAAS;AAAY,aAAO;AAEjC,WAAO;AAAA,EAER;AAAA,EAEA,kBAAmBC,SAAS;AAE3B,WAAO,eAAe,IAAKA,OAAO;AAAA,EAEnC;AAAA,EAEA,cAAe,MAAO;AAErB,UAAM,UAAU,KAAK,cAAe,IAAK;AACzC,UAAM,SAAS,aAAa,KAAM,OAAQ;AAE1C,QAAK,WAAW;AAAO,aAAO,OAAQ,OAAQ,CAAE,CAAE;AAClD,QAAK,YAAY,WAAW,YAAY,UAAU,YAAY,SAAS,YAAY;AAAS,aAAO;AACnG,QAAK,OAAO,KAAM,IAAK,MAAM;AAAO,aAAO;AAC3C,QAAK,OAAO,KAAM,IAAK,MAAM;AAAO,aAAO;AAE3C,WAAO;AAAA,EAER;AAAA,EAEA,oBAAqB,MAAO;AAE3B,WAAO,KAAK,QAAS,OAAO,KAAM;AAAA,EAEnC;AAAA,EAEA,gBAAiB,MAAM,cAAc,KAAK,aAAc;AAEvD,QAAI,WAAW,KAAK,UAAU,IAAK,IAAK;AAExC,QAAK,aAAa,QAAY;AAE7B,iBAAW,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,GAAG,SAAS,CAAC,EAAE;AAEnD,WAAK,UAAU,IAAK,MAAM,QAAS;AAAA,IAEpC;AAEA,WAAO,gBAAgB,OAAO,SAAU,WAAY,IAAI;AAAA,EAEzD;AAAA,EAEA,kBAAmB,MAAM,cAAc,KAAK,aAAc;AAEzD,UAAM,WAAW,KAAK,gBAAiB,MAAM,WAAY;AACzD,UAAM,gBAAgB,KAAK,iBAAkB,IAAK;AAElD,aAAS,aAAa,SAAS,cAAc,CAAC;AAC9C,aAAS,WAAY,aAAc,IAAI,SAAS,WAAY,aAAc,KAAK,EAAE,YAAY,KAAK;AAElG,WAAO,SAAS,WAAY,aAAc;AAAA,EAE3C;AAAA,EAEA,mBAAoB,MAAM,aAAa,MAAO;AAE7C,UAAM,WAAW,KAAK,gBAAiB,MAAM,WAAY;AAEzD,QAAI,cAAc,SAAS;AAE3B,QAAK,gBAAgB,QAAY;AAEhC,YAAM,QAAQ,KAAK,SAAS;AAE5B,oBAAc,IAAI,oBAAa,gBAAgB,OAAO,MAAM,IAAK;AAEjE,WAAK,SAAU,WAAY,EAAE,KAAM,WAAY;AAE/C,eAAS,UAAU;AAAA,IAEpB;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,eAAgB,MAAM,MAAM,cAAc,KAAK,aAAc;AAE5D,UAAM,WAAW,KAAK,gBAAiB,MAAM,WAAY;AAEzD,QAAI,UAAU,SAAS;AAEvB,QAAK,YAAY,QAAY;AAE5B,YAAM,OAAO,KAAK,KAAM,WAAY;AACpC,YAAM,QAAQ,KAAK;AAEnB,gBAAU,IAAI,gBAAS,YAAY,OAAO,IAAK;AAE/C,WAAK,KAAM,OAAQ;AAEnB,eAAS,WAAW;AAAA,IAErB;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,mBAAoB,MAAM,MAAO;AAEhC,UAAM,WAAW,KAAK,gBAAiB,MAAM,IAAK;AAElD,QAAI,cAAc,SAAS;AAE3B,QAAK,gBAAgB,QAAY;AAEhC,YAAM,WAAW,KAAK;AACtB,YAAM,QAAQ,SAAS;AAEvB,oBAAc,IAAI,oBAAa,gBAAgB,OAAO,IAAK;AAE3D,eAAS,KAAM,WAAY;AAE3B,eAAS,UAAU;AAAA,IAEpB;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,gBAAiB,MAAM,MAAM,cAAc,KAAK,aAAc;AAE7D,UAAM,WAAW,KAAK,gBAAiB,IAAK;AAE5C,QAAI,WAAW,SAAS;AAExB,QAAK,aAAa,QAAY;AAE7B,YAAM,QAAQ,KAAK,MAAO,WAAY;AACtC,YAAM,QAAQ,MAAM;AAEpB,iBAAW,IAAI,iBAAU,aAAa,OAAO,IAAK;AAElD,YAAM,KAAM,QAAS;AAErB,eAAS,OAAO;AAAA,IAEjB;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,YAAaC,OAAO;AAEnB,SAAK,KAAK,QAAQA;AAAA,EAEnB;AAAA,EAEA,YAAa,MAAwB;AAEpC,WAAO,KAAK,UAAU,IAAK,IAAK;AAAA,EAEjC;AAAA,EAEA,SAAU,MAAO;AAEhB,UAAM,SAAS,KAAK,YAAa,IAAK;AAEtC,UAAM,WAAW,KAAK,cAAe,MAAM,MAAO;AAElD,SAAK,UAAU,IAAK,MAAM,QAAS;AAEnC,WAAO;AAAA,EAER;AAAA,EAEA,cAAe,MAAM,SAAS,MAAO;AAEpC,UAAM,eAAe,KAAK;AAE1B,UAAM,OAAO;AAAA,MACZ,MAAM;AAAA,IACP;AAEA,SAAK,OAAO;AAEZ,SAAK,SAAS,KAAK,MAAO,MAAM,MAAO;AAEvC,SAAK,OAAO;AAEZ,WAAO;AAAA,EAER;AAAA,EAEA,wBAAyB,aAAa,MAAM,SAAS,MAAM,eAAe,MAAO;AAEhF,UAAM,sBAAsB,KAAK;AAEjC,SAAK,eAAgB,WAAY;AAEjC,UAAM,WAAW,KAAK,cAAe,MAAM,MAAO;AAElD,QAAK,iBAAiB,MAAO;AAE5B,eAAS,QAAQ,GAAG,YAAY,MAAM,SAAS,MAAM;AAAA;AAAA,IAEtD;AAEA,SAAK,SAAU,WAAY,IAAI,KAAK,SAAU,WAAY,IAAI,SAAS;AAEvE,SAAK,eAAgB,mBAAoB;AAEzC,WAAO;AAAA,EAER;AAAA,EAEA,gBAAiC;AAEhC,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA,EAEA,cAA+B;AAE9B,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA,EAEA,QAAS,aAAc;AAEtB,QAAI,UAAU;AAEd,UAAM,OAAO,KAAK,KAAM,WAAY;AAEpC,eAAY,YAAY,MAAO;AAE9B,iBAAW,GAAG,SAAS,IAAI,IAAI,SAAS,IAAI;AAAA,IAE7C;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,cAA+B;AAE9B,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA,EAEA,SAAU,aAAc;AAEvB,UAAM,QAAQ,KAAK,MAAO,WAAY;AAEtC,QAAIA,QAAO;AAEX,eAAY,YAAY,OAAQ;AAE/B,MAAAA,SAAQ,SAAS,OAAO;AAAA,IAEzB;AAEA,WAAOA;AAAA,EAER;AAAA,EAEA,UAAU;AAET,WAAO,KAAK,eAAe,KAAK,iBAAiB,KAAK;AAAA,EAEvD;AAAA,EAEA,eAAgB,aAAc;AAE7B,SAAK,cAAc;AAAA,EAEpB;AAAA,EAEA,iBAAiB;AAEhB,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,cAAe,YAAa;AAE3B,SAAK,aAAa;AAAA,EAEnB;AAAA,EAEA,gBAAgB;AAEf,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,YAAY;AAEX,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAAA,EAEA,QAAQ;AAIP,SAAK,cAAe,WAAY;AAEhC,eAAY,eAAe,cAAe;AAEzC,WAAK,eAAgB,WAAY;AAEjC,YAAM,YAAY,KAAK,UAAW,WAAY;AAE9C,iBAAY,QAAQ,WAAY;AAE/B,aAAK,MAAO,IAAK;AAAA,MAElB;AAAA,IAED;AAIA,SAAK,cAAe,SAAU;AAE9B,eAAY,eAAe,cAAe;AAEzC,WAAK,eAAgB,WAAY;AAEjC,YAAM,YAAY,KAAK,UAAW,WAAY;AAE9C,iBAAY,QAAQ,WAAY;AAE/B,aAAK,MAAO,IAAK;AAAA,MAElB;AAAA,IAED;AAIA,SAAK,cAAe,UAAW;AAE/B,QAAK,KAAK,QAAQ,UAAU,KAAK,QAAQ,OAAO,QAAS;AAExD,WAAK,wBAAyB,UAAU,KAAK,QAAQ,MAAO;AAAA,IAE7D;AAIA,SAAK,cAAe,UAAW;AAE/B,eAAY,eAAe,cAAe;AAEzC,WAAK,eAAgB,WAAY;AAEjC,YAAM,YAAY,KAAK,UAAW,WAAY;AAE9C,iBAAY,QAAQ,WAAY;AAE/B,aAAK,SAAU,IAAK;AAAA,MAErB;AAAA,IAED;AAEA,SAAK,cAAe,IAAK;AACzB,SAAK,eAAgB,IAAK;AAI1B,SAAK,UAAU;AAEf,WAAO;AAAA,EAER;AAAA,EAEA,OAAQ,SAASC,WAAU,QAAS;AAEnC,IAAAA,YAAW,KAAK,cAAeA,SAAS;AACxC,aAAS,KAAK,cAAe,MAAO;AAEpC,QAAKA,cAAa,UAAU,WAAW,QAAQ,KAAK,YAAa,MAAO,GAAI;AAE3E,aAAO;AAAA,IAER;AAEA,UAAM,iBAAiB,KAAK,cAAeA,SAAS;AACpD,UAAM,eAAe,KAAK,cAAe,MAAO;AAEhD,QAAK,iBAAiB,GAAI;AAIzB,aAAO;AAAA,IAER;AAEA,QAAK,eAAe,KAAK,iBAAiB,GAAI;AAI7C,aAAO;AAAA,IAER;AAEA,QAAK,mBAAmB,cAAe;AAEtC,aAAO,GAAI,KAAK,QAAS,MAAO,CAAE,KAAM,OAAQ;AAAA,IAEjD;AAEA,QAAK,iBAAiB,cAAe;AAEpC,aAAO,KAAK,OAAQ,GAAI,OAAQ,IAAK,MAAM,MAAO,GAAG,YAAa,CAAE,IAAI,KAAK,kBAAmB,YAAa,GAAG,MAAO;AAAA,IAExH;AAEA,QAAK,iBAAiB,GAAI;AAEzB,aAAO,GAAI,KAAK,QAAS,MAAO,CAAE,KAAM,KAAK,OAAQ,SAASA,WAAU,MAAO,CAAE;AAAA,IAElF;AAEA,QAAK,mBAAmB,GAAI;AAE3B,aAAO,GAAI,KAAK,QAAS,MAAO,CAAE,KAAM,KAAK,OAAQ,SAASA,WAAU,MAAO,CAAE;AAAA,IAElF;AAEA,WAAO,GAAI,KAAK,QAAS,MAAO,CAAE,KAAM,OAAQ;AAAA,EAEjD;AAAA,EAEA,eAAe;AAEd,WAAO,gBAAiB,QAAS;AAAA;AAAA,EAElC;AAED;AAEA,IAAO,sBAAQ;;;AC3xBf,IAAM,YAAN,MAAgB;AAAA,EAEf,cAAc;AAEb,SAAK,OAAO;AACZ,SAAK,YAAY;AAEjB,SAAK,UAAU;AAEf,SAAK,YAAY;AAEjB,SAAK,YAAY,oBAAI,QAAQ;AAE7B,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,SAAS;AACd,SAAK,SAAS;AAAA,EAEf;AAAA,EAEA,WAAY,MAAO;AAElB,QAAK,KAAK,eAAe,eAAe,OAAQ;AAE/C,UAAK,KAAK,UAAU,IAAK,IAAK,MAAM,KAAK,SAAU;AAElD,aAAK,UAAU,IAAK,MAAM,KAAK,OAAQ;AAEvC,aAAK,OAAQ,IAAK;AAAA,MAEnB;AAAA,IAED,WAAY,KAAK,eAAe,eAAe,QAAS;AAEvD,WAAK,OAAQ,IAAK;AAAA,IAEnB;AAAA,EAED;AAAA,EAEA,SAAS;AAER,SAAK;AAEL,QAAK,KAAK,aAAa;AAAY,WAAK,WAAW,YAAY,IAAI;AAEnE,SAAK,aAAc,YAAY,IAAI,IAAI,KAAK,YAAa;AAEzD,SAAK,WAAW,YAAY,IAAI;AAEhC,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAED;AAEA,IAAO,oBAAQ;;;AC1Df,IAAM,oBAAN,MAAwB;AAAA,EAEvB,YAAa,MAAM,MAAM,QAAQ,MAAM,YAAY,IAAI,UAAU,OAAQ;AAExE,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,YAAY;AACjB,SAAK,UAAU;AAAA,EAEhB;AAED;AAEA,kBAAkB,sBAAsB;AAExC,IAAO,4BAAQ;;;ACdf,IAAM,eAAN,cAA2B,aAAK;AAAA,EAE/B,YAAa,OAAO,MAAM,WAAW,QAAS;AAE7C,UAAO,QAAS;AAEhB,SAAK,OAAO;AAAA,EAEb;AAAA,EAEA,QAAS,SAAU;AAElB,WAAO,KAAK,QAAQ,MAAM,QAAS,OAAQ;AAAA,EAE5C;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,WAAW,QAAQ,eAAgB,MAAM,KAAK,YAAa,OAAQ,CAAE;AAC3E,UAAM,OAAO,KAAK;AAElB,QAAK,SAAS,MAAO;AAEpB,eAAS,OAAO;AAAA,IAEjB;AAEA,WAAO,QAAQ,gBAAiB,QAAS;AAAA,EAE1C;AAED;AAEA,IAAO,uBAAQ;;;ACjCf,IAAM,eAAN,MAAM,sBAAqB,iBAAS;AAAA,EAEnC,YAAa,IAAI,OAAO,UAAU,QAAS;AAE1C,UAAM;AAEN,SAAK,KAAK;AAEV,QAAK,OAAO,SAAS,GAAI;AAExB,UAAI,aAAa;AAEjB,eAAU,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAO;AAE1C,qBAAa,IAAI,cAAc,IAAI,YAAY,OAAQ,CAAE,CAAE;AAAA,MAE5D;AAEA,cAAQ;AAAA,IAET;AAEA,SAAK,QAAQ;AACb,SAAK,QAAQ;AAAA,EAEd;AAAA,EAEA,YAAa,SAAS,QAAS;AAE9B,UAAM,KAAK,KAAK;AAEhB,UAAM,QAAQ,KAAK;AACnB,UAAM,QAAQ,KAAK;AAEnB,UAAM,QAAQ,MAAM,YAAa,OAAQ;AACzC,UAAM,QAAQ,MAAM,YAAa,OAAQ;AAEzC,QAAK,UAAU,UAAU,UAAU,QAAS;AAE3C,aAAO;AAAA,IAER,WAAY,OAAO,OAAO,OAAO,KAAM;AAEtC,aAAO;AAAA,IAER,WAAY,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,QAAQ,OAAO,MAAO;AAElF,aAAO;AAAA,IAER,WAAY,OAAO,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAO,MAAO;AAEtE,aAAO;AAAA,IAER,WAAY,OAAO,OAAO,OAAO,OAAO,OAAO,QAAQ,OAAO,MAAO;AAEpE,YAAM,aAAa,QAAQ,cAAe,MAAO;AAEjD,aAAO,aAAa,IAAI,OAAQ,UAAW,KAAK;AAAA,IAEjD,OAAO;AAEN,UAAK,UAAU,WAAW,QAAQ,SAAU,KAAM,GAAI;AAErD,eAAO;AAAA,MAER,WAAY,QAAQ,SAAU,KAAM,KAAK,QAAQ,SAAU,KAAM,GAAI;AAIpE,eAAO,QAAQ,oBAAqB,KAAM;AAAA,MAE3C,WAAY,QAAQ,SAAU,KAAM,KAAK,QAAQ,SAAU,KAAM,GAAI;AAIpE,eAAO,QAAQ,oBAAqB,KAAM;AAAA,MAE3C,WAAY,QAAQ,cAAe,KAAM,IAAI,QAAQ,cAAe,KAAM,GAAI;AAI7E,eAAO;AAAA,MAER;AAEA,aAAO;AAAA,IAER;AAAA,EAED;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,KAAK,KAAK;AAEhB,UAAM,QAAQ,KAAK;AACnB,UAAM,QAAQ,KAAK;AAEnB,UAAM,OAAO,KAAK,YAAa,SAAS,MAAO;AAE/C,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,QAAK,SAAS,QAAS;AAEtB,cAAQ,MAAM,YAAa,OAAQ;AACnC,cAAQ,MAAM,YAAa,OAAQ;AAEnC,UAAK,OAAO,KAAM;AAEjB,gBAAQ;AAAA,MAET,WAAY,OAAO,OAAO,OAAO,OAAO,OAAO,QAAQ,OAAO,MAAO;AAEpE,YAAK,QAAQ,SAAU,KAAM,GAAI;AAEhC,kBAAQ;AAAA,QAET,OAAO;AAEN,kBAAQ,QAAQ;AAAA,QAEjB;AAAA,MAED,WAAY,QAAQ,SAAU,KAAM,KAAK,QAAQ,SAAU,KAAM,GAAI;AAIpE,gBAAQ,QAAQ,oBAAqB,KAAM;AAAA,MAE5C,WAAY,QAAQ,SAAU,KAAM,KAAK,QAAQ,SAAU,KAAM,GAAI;AAIpE,gBAAQ,QAAQ,oBAAqB,KAAM;AAAA,MAE5C,OAAO;AAIN,gBAAQ,QAAQ;AAAA,MAEjB;AAAA,IAED,OAAO;AAEN,cAAQ,QAAQ;AAAA,IAEjB;AAEA,UAAM,IAAI,MAAM,MAAO,SAAS,KAAM;AACtC,UAAM,IAAI,MAAM,MAAO,SAAS,KAAM;AAEtC,UAAM,eAAe,QAAQ,cAAe,MAAO;AAEnD,QAAK,WAAW,QAAS;AAExB,UAAK,OAAO,KAAM;AAEjB,gBAAQ,YAAa,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,CAAC,EAAG;AAE5C,eAAO;AAAA,MAER,WAAY,OAAO,OAAO,eAAe,GAAI;AAE5C,eAAO,QAAQ,OAAQ,GAAI,QAAQ,UAAW,aAAc,CAAE,KAAK,CAAC,KAAK,CAAC,MAAM,MAAM,MAAO;AAAA,MAE9F,WAAY,OAAO,QAAQ,eAAe,GAAI;AAE7C,eAAO,QAAQ,OAAQ,GAAI,QAAQ,UAAW,eAAgB,CAAE,KAAK,CAAC,KAAK,CAAC,MAAM,MAAM,MAAO;AAAA,MAEhG,OAAO;AAEN,eAAO,QAAQ,OAAQ,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,CAAC,MAAM,MAAM,MAAO;AAAA,MAEjE;AAAA,IAED,WAAY,UAAU,QAAS;AAE9B,aAAO,QAAQ,OAAQ,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,CAAC,IAAI,MAAM,MAAO;AAAA,IAE7D;AAAA,EAED;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,UAAW,IAAK;AAEtB,SAAK,KAAK,KAAK;AAAA,EAEhB;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAa,IAAK;AAExB,SAAK,KAAK,KAAK;AAAA,EAEhB;AAED;AAEA,IAAO,uBAAQ;;;AC1Mf,IAAM,UAAN,cAAsB,aAAK;AAAA,EAE1B,YAAa,MAAM,OAAO,MAAO;AAEhC,UAAM;AAEN,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EAEb;AAAA,EAEA,GAAI,OAAO,QAAS;AAEnB,SAAK,OAAO,IAAI,qBAAc,IAAI,KAAK,MAAM,GAAG,MAAO;AAEvD,WAAO;AAAA,EAER;AAAA,EAEA,UAAW,QAAS;AAEnB,WAAO,KAAK,GAAI,KAAK,GAAG,MAAO;AAAA,EAEhC;AAAA,EAEA,OAAQ,QAAS;AAEhB,WAAO,KAAK,GAAI,KAAK,GAAG,MAAO;AAAA,EAEhC;AAAA,EAEA,OAAQ,QAAS;AAEhB,WAAO,KAAK,GAAI,KAAK,GAAG,MAAO;AAAA,EAEhC;AAAA,EAEA,OAAQ,QAAS;AAEhB,WAAO,KAAK,GAAI,KAAK,GAAG,MAAO;AAAA,EAEhC;AAAA,EAEA,OAAQ,QAAS;AAEhB,WAAO,KAAK,GAAI,KAAK,GAAG,MAAO;AAAA,EAEhC;AAAA,EAEA,QAAS,SAAU;AAElB,WAAO,KAAK,QAAQ,MAAM,QAAS,OAAQ;AAAA,EAE5C;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAO,KAAK,KAAK,YAAa,OAAQ;AAAA,EAEvC;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,OAAO,KAAK;AAClB,UAAM,OAAO,KAAK;AAElB,QAAK,SAAS,QAAQ,KAAK,eAAe,MAAO;AAEhD,aAAO,KAAK,MAAO,OAAQ;AAAA,IAE5B;AAEA,UAAM,OAAO,QAAQ,cAAe,KAAK,YAAa,OAAQ,CAAE;AAEhE,UAAM,UAAU,KAAK,MAAO,SAAS,IAAK;AAC1C,UAAM,UAAU,QAAQ,eAAgB,MAAM,IAAK;AAEnD,QAAK,SAAS,MAAO;AAEpB,cAAQ,OAAO;AAAA,IAEhB;AAEA,UAAM,eAAe,QAAQ,gBAAiB,OAAQ;AAEtD,YAAQ,YAAa,GAAG,YAAY,MAAM,OAAO,EAAG;AAEpD,WAAO;AAAA,EAER;AAED;AAEA,IAAO,kBAAQ;;;AC9Ff,IAAM,aAAN,cAAyB,oBAAY;AAAA,EAEpC,YAAa,OAAO,YAAY,cAAc,GAAI;AAEjD,UAAO,OAAO,UAAW;AAEzB,SAAK,eAAe;AAEpB,SAAK,aAAa;AAClB,SAAK,cAAc;AAAA,EAEpB;AAAA,EAEA,eAA4B;AAE3B,WAAO;AAAA,EAER;AAED;AAEA,IAAO,qBAAQ;;;AClBf,IAAM,gBAAN,MAAM,sBAAqB,aAAK;AAAA,EAQ/B,YAAa,QAAQ,cAAa,aAAa,WAAW,MAAO;AAEhE,UAAM;AAEN,SAAK,QAAQ;AACb,SAAK,WAAW;AAEhB,SAAK,aAAa,eAAe;AAEjC,SAAK,eAAe,IAAI,oBAAa,IAAK;AAAA,EAE3C;AAAA,EAEA,cAAc;AAEb,UAAM,QAAQ,KAAK;AAEnB,QAAK,UAAU,cAAa,gBAAgB,UAAU,cAAa,aAAc;AAEhF,aAAO;AAAA,IAER,WAAY,UAAU,cAAa,eAAgB;AAElD,aAAO;AAAA,IAER,WAAY,UAAU,cAAa,YAAY,UAAU,cAAa,eAAgB;AAErF,aAAO;AAAA,IAER;AAAA,EAED;AAAA,EAEA,OAAQ,OAAQ;AAEf,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,KAAK;AACzB,UAAM,QAAQ,KAAK;AAEnB,QAAK,UAAU,cAAa,aAAc;AAEzC,kBAAY,QAAQ,OAAO;AAAA,IAE5B,WAAY,UAAU,cAAa,eAAgB;AAElD,kBAAY,QAAQ,OAAO;AAAA,IAE5B,WAAY,UAAU,cAAa,cAAe;AAEjD,kBAAY,QAAQ,OAAO;AAAA,IAE5B,WAAY,UAAU,cAAa,UAAW;AAE7C,kBAAY,MAAM,sBAAuB,OAAO,WAAY;AAAA,IAE7D,WAAY,UAAU,cAAa,eAAgB;AAElD,YAAM,SAAS,MAAM;AAErB,kBAAY,QAAQ,YAAY,SAAS,IAAI,QAAQ;AACrD,kBAAY,MAAM,sBAAuB,OAAO,WAAY;AAE5D,kBAAY,MAAM,aAAc,OAAO,kBAAmB;AAAA,IAE3D;AAAA,EAED;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,QAAQ,KAAK;AAEnB,QAAK,UAAU,cAAa,gBAAgB,UAAU,cAAa,aAAc;AAEhF,WAAK,aAAa,WAAW;AAAA,IAE9B,WAAY,UAAU,cAAa,eAAgB;AAElD,WAAK,aAAa,WAAW;AAAA,IAE9B,WAAY,UAAU,cAAa,YAAY,UAAU,cAAa,eAAgB;AAErF,WAAK,aAAa,WAAW;AAAA,IAE9B;AAEA,WAAO,KAAK,aAAa,MAAO,OAAQ;AAAA,EAEzC;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,UAAW,IAAK;AAEtB,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAa,IAAK;AAExB,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAED;AAhHC,cAFK,eAEE,eAAc;AACrB,cAHK,eAGE,iBAAgB;AACvB,cAJK,eAIE,gBAAe;AACtB,cALK,eAKE,YAAW;AAClB,cANK,eAME,iBAAgB;AANxB,IAAM,eAAN;AAoHA,IAAO,uBAAQ;;;ACvHf,IAAM,cAAN,MAAM,oBAAmB,qBAAa;AAAA,EAIrC,YAAa,QAAQ,YAAW,UAAW;AAE1C,UAAO,KAAM;AAAA,EAEd;AAAA,EAEA,YAAa,SAAU;AAEtB,UAAM,QAAQ,KAAK;AAEnB,QAAK,UAAU,YAAW,mBAAoB;AAE7C,aAAO;AAAA,IAER;AAEA,WAAO,MAAM,YAAa,OAAQ;AAAA,EAEnC;AAAA,EAEA,OAAQ,OAAQ;AAEf,UAAM,SAAS,MAAM;AACrB,UAAM,cAAc,KAAK;AACzB,UAAM,QAAQ,KAAK;AAEnB,QAAK,UAAU,YAAW,mBAAoB;AAE7C,kBAAY,QAAQ,OAAO;AAAA,IAE5B,WAAY,UAAU,YAAW,aAAc;AAE9C,kBAAY,QAAQ,OAAO;AAAA,IAE5B,OAAO;AAEN,WAAK,WAAW;AAEhB,YAAM,OAAQ,KAAM;AAAA,IAErB;AAAA,EAED;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,QAAQ,KAAK;AAEnB,QAAK,UAAU,YAAW,mBAAoB;AAE7C,WAAK,aAAa,WAAW;AAAA,IAE9B;AAEA,WAAO,MAAM,SAAU,OAAQ;AAAA,EAEhC;AAED;AA5DC,cAFK,aAEE,qBAAoB;AAF5B,IAAM,aAAN;AAgEA,IAAO,qBAAQ;;;AChEf,IAAM,SAAN,cAAqB,sBAAc;AAAA,EAElC,YAAa,QAAQ,GAAI;AAExB,UAAO,MAAM,MAAO;AAEpB,SAAK,WAAW;AAEhB,SAAK,QAAQ;AAAA,EAEd;AAAA,EAEA,mBAAgC;AAE/B,UAAM,QAAQ,KAAK;AAEnB,WAAO,QAAS,QAAQ,IAAI,QAAQ,IAAI;AAAA,EAEzC;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,UAAW,IAAK;AAEtB,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAa,IAAK;AAExB,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAED;AAEA,IAAO,iBAAQ;;;ACrCf,IAAM,cAAN,cAA0B,oBAAY;AAAA,EAErC,YAAa,OAAO,SAAS,IAAI,eAAO,GAAG,YAAY,MAAO;AAE7D,UAAO,OAAO,MAAO;AAErB,SAAK,gBAAgB;AAErB,SAAK,SAAS;AACd,SAAK,YAAY;AAAA,EAElB;AAAA,EAEA,iBAA8B;AAE7B,WAAO,KAAK,MAAM;AAAA,EAEnB;AAAA,EAEA,eAA4B;AAE3B,WAAO;AAAA,EAER;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAMC,WAAU,KAAK;AAErB,QAAK,CAAEA,YAAWA,SAAQ,cAAc,MAAO;AAE9C,YAAM,IAAI,MAAO,uCAAwC;AAAA,IAE1D;AAEA,UAAM,kBAAkB,MAAM,SAAU,SAAS,SAAU;AAE3D,QAAK,WAAW,WAAY;AAE3B,aAAO,kBAAkB;AAAA,IAE1B,WAAY,QAAQ,YAAa,MAAO,GAAI;AAE3C,aAAO;AAAA,IAER,OAAO;AAEN,YAAM,WAAW,QAAQ,gBAAiB,IAAK;AAE/C,UAAI,UAAU,SAAS;AAEvB,UAAK,YAAY,QAAY;AAE5B,cAAM,YAAY,KAAK,OAAO,MAAO,SAAS,MAAO;AACrD,cAAM,YAAY,KAAK;AAEvB,YAAK,cAAc,MAAO;AAEzB,gBAAM,eAAe,UAAU,MAAO,SAAS,OAAQ;AAEvD,oBAAU,QAAQ,gBAAiB,iBAAiB,WAAW,YAAa;AAAA,QAE7E,OAAO;AAEN,oBAAU,QAAQ,WAAY,iBAAiB,SAAU;AAAA,QAE1D;AAEA,iBAAS,UAAU;AAAA,MAEpB;AAEA,aAAO,QAAQ,OAAQ,SAAS,QAAQ,MAAO;AAAA,IAEhD;AAAA,EAED;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,UAAW,IAAK;AAEtB,SAAK,QAAQ,KAAK,MAAM,OAAQ,KAAK,IAAK,EAAE;AAAA,EAE7C;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAa,IAAK;AAExB,SAAK,QAAQ,KAAK,KAAK,SAAU,KAAK,KAAM;AAAA,EAE7C;AAED;AAEA,IAAO,sBAAQ;;;AC/Ff,IAAM,gBAAN,cAA4B,aAAK;AAAA,EAEhC,YAAaC,WAAU,aAAa,SAAS,MAAO;AAEnD,UAAM;AAEN,SAAK,WAAWA;AAEhB,SAAK,cAAc;AAEnB,SAAK,SAAS;AAEd,SAAK,OAAO;AAEZ,SAAK,aAAa,eAAe;AAEjC,SAAK,YAAa,WAAY;AAAA,EAE/B;AAAA,EAEA,YAAa,aAAc;AAE1B,SAAK,OAAO,IAAI,oBAAa,MAAM,WAAY;AAC/C,SAAK,WAAW;AAEhB,QAAK,gBAAgB,SAAU;AAE9B,WAAK,WAAW;AAAA,IAEjB,WAAY,gBAAgB,WAAY;AAEvC,WAAK,WAAW;AAAA,IAEjB;AAAA,EAED;AAAA,EAEA,cAAc;AAEb,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,OAAQ,OAAQ;AAEf,UAAM,SAAS,KAAK,WAAW,OAAO,KAAK,SAAS,MAAM;AAC1D,UAAM,QAAQ,OAAQ,KAAK,QAAS;AAEpC,SAAK,KAAK,QAAQ;AAAA,EAEnB;AAAA,EAEA,SAAU,SAAU;AAEnB,WAAO,KAAK,KAAK,MAAO,SAAS,KAAK,YAAa,OAAQ,CAAE;AAAA,EAE9D;AAED;AAEA,IAAO,wBAAQ;;;AC9Df,IAAM,wBAAN,cAAoC,sBAAc;AAAA,EAEjD,YAAaC,WAAU,WAAW,WAAW,MAAO;AAEnD,UAAOA,WAAU,WAAW,QAAS;AAErC,SAAK,WAAW;AAAA,EAEjB;AAAA,EAEA,OAAQ,OAAQ;AAEf,SAAK,SAAS,KAAK,aAAa,OAAO,KAAK,WAAW,MAAM;AAE7D,UAAM,OAAQ,KAAM;AAAA,EAErB;AAED;AAEA,IAAO,gCAAQ;;;ACnBf,IAAM,mBAAmB;AAEzB,IAAM,YAAN,cAAwB,aAAK;AAAA,EAE5B,YAAa,MAAM,aAAa,KAAM;AAErC,UAAM;AAEN,SAAK,OAAO;AACZ,SAAK,aAAa;AAAA,EAEnB;AAAA,EAEA,kBAAkB;AAEjB,QAAI,eAAe,KAAK,WAAW;AAEnC,eAAY,KAAK,KAAK,YAAa;AAElC,qBAAe,KAAK,IAAK,OAAO,QAAS,CAAE,IAAI,GAAG,YAAa;AAAA,IAEhE;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAO,QAAQ,kBAAmB,KAAK,WAAW,MAAO;AAAA,EAE1D;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,OAAO,KAAK;AAClB,UAAM,iBAAiB,QAAQ,cAAe,KAAK,YAAa,OAAQ,CAAE;AAE1E,QAAI,UAAU;AAEd,QAAK,iBAAiB,GAAI;AAEzB,UAAI,OAAO;AAEX,YAAM,mBAAmB,KAAK,gBAAgB;AAE9C,UAAK,oBAAoB,gBAAiB;AAIzC,eAAO,QAAQ,kBAAmB,KAAK,gBAAgB,CAAE;AAAA,MAE1D;AAEA,YAAM,cAAc,KAAK,MAAO,SAAS,IAAK;AAE9C,UAAK,KAAK,WAAW,WAAW,kBAAkB,KAAK,eAAe,iBAAiB,MAAO,GAAG,KAAK,WAAW,MAAO,GAAI;AAI3H,kBAAU,QAAQ,OAAQ,aAAa,MAAM,MAAO;AAAA,MAErD,OAAO;AAEN,kBAAU,QAAQ,OAAQ,GAAG,WAAW,IAAI,KAAK,UAAU,IAAI,KAAK,YAAa,OAAQ,GAAG,MAAO;AAAA,MAEpG;AAAA,IAED,OAAO;AAIN,gBAAU,KAAK,MAAO,SAAS,MAAO;AAAA,IAEvC;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,UAAW,IAAK;AAEtB,SAAK,aAAa,KAAK;AAAA,EAExB;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAa,IAAK;AAExB,SAAK,aAAa,KAAK;AAAA,EAExB;AAED;AAEA,IAAO,oBAAQ;;;AC/Ff,IAAM,gBAAN,MAAM,sBAAqB,aAAK;AAAA,EAU/B,YAAa,QAAQ,cAAa,OAAQ;AAEzC,UAAM;AAEN,SAAK,QAAQ;AAAA,EAEd;AAAA,EAEA,YAAa,SAAU;AAEtB,UAAM,QAAQ,KAAK;AACnB,UAAM,WAAW,QAAQ,QAAQ;AAEjC,QAAK,UAAU,cAAa,OAAQ;AAEnC,aAAO,SAAS,QAAQ,OAAO,SAAS;AAAA,IAEzC,WAAY,UAAU,cAAa,WAAW,UAAU,cAAa,UAAW;AAE/E,aAAO;AAAA,IAER,WAAY,UAAU,cAAa,UAAW;AAE7C,aAAO;AAAA,IAER,WAAY,UAAU,cAAa,aAAa,UAAU,cAAa,WAAY;AAElF,aAAO;AAAA,IAER;AAAA,EAED;AAAA,EAEA,SAAU,SAAS,QAAS;AAjD7B;AAmDE,UAAM,WAAW,QAAQ,QAAQ;AACjC,UAAM,QAAQ,KAAK;AAEnB,QAAI,OAAO;AAEX,QAAK,UAAU,cAAa,YAAa;AAExC,aAAO,IAAI,8BAAuB,aAAa,OAAQ;AAAA,IAExD,WAAY,UAAU,cAAa,OAAQ;AAE1C,YAAM,YAAY,IAAI,8BAAuB,SAAS,OAAQ;AAE9D,YAAK,cAAS,QAAT,mBAAc,eAAc,MAAO;AAGvC,cAAM,MAAM,IAAI,oBAAa,SAAS,GAAI;AAE1C,eAAO,IAAI,qBAAc,KAAK,WAAW,GAAI;AAAA,MAE9C,OAAO;AAEN,eAAO;AAAA,MAER;AAAA,IAED,WAAY,UAAU,cAAa,SAAU;AAE5C,YAAM,cAAc,IAAI,8BAAuB,WAAW,OAAQ;AAElE,YAAK,cAAS,aAAT,mBAAmB,eAAc,MAAO;AAE5C,eAAO,IAAI,qBAAc,KAAK,aAAa,IAAI,8BAAuB,YAAY,SAAU,CAAE;AAAA,MAE/F,OAAO;AAEN,eAAO;AAAA,MAER;AAAA,IAED,WAAY,UAAU,cAAa,WAAY;AAE9C,YAAM,gBAAgB,IAAI,8BAAuB,aAAa,OAAQ;AAEtE,YAAK,cAAS,iBAAT,mBAAuB,eAAc,MAAO;AAEhD,eAAO,IAAI,qBAAc,KAAK,eAAe,IAAI,kBAAW,IAAI,oBAAa,SAAS,YAAa,GAAG,GAAI,CAAE;AAAA,MAE7G,OAAO;AAEN,eAAO;AAAA,MAER;AAAA,IAED,WAAY,UAAU,cAAa,WAAY;AAE9C,YAAM,gBAAgB,IAAI,8BAAuB,aAAa,OAAQ;AAEtE,YAAK,cAAS,iBAAT,mBAAuB,eAAc,MAAO;AAEhD,eAAO,IAAI,qBAAc,KAAK,eAAe,IAAI,kBAAW,IAAI,oBAAa,SAAS,YAAa,GAAG,GAAI,CAAE;AAAA,MAE7G,OAAO;AAEN,eAAO;AAAA,MAER;AAAA,IAED,WAAY,UAAU,cAAa,UAAW;AAE7C,YAAM,eAAe,IAAI,8BAAuB,YAAY,OAAQ;AAEpE,YAAK,cAAS,gBAAT,mBAAsB,eAAc,MAAO;AAE/C,eAAO,IAAI,qBAAc,KAAK,cAAc,IAAI,oBAAa,SAAS,WAAY,CAAE;AAAA,MAErF,OAAO;AAEN,eAAO;AAAA,MAER;AAAA,IAED,WAAY,UAAU,cAAa,UAAW;AAE7C,aAAO,IAAI,8BAAuB,YAAY,OAAQ;AAAA,IAEvD,OAAO;AAEN,YAAM,aAAa,KAAK,YAAa,OAAQ;AAE7C,aAAO,IAAI,8BAAuB,OAAO,UAAW;AAAA,IAErD;AAEA,WAAO,KAAK,MAAO,SAAS,MAAO;AAAA,EAEpC;AAED;AA7IC,cAFK,eAEE,cAAa;AACpB,cAHK,eAGE,SAAQ;AACf,cAJK,eAIE,WAAU;AACjB,cALK,eAKE,aAAY;AACnB,cANK,eAME,aAAY;AACnB,cAPK,eAOE,YAAW;AAClB,cARK,eAQE,YAAW;AARnB,IAAM,eAAN;AAiJA,IAAO,uBAAQ;;;ACrJf,IAAM,YAAN,MAAM,mBAAkB,qBAAa;AAAA,EAEpC,YAAa,QAAQ,WAAU,aAAc;AAE5C,UAAO,KAAM;AAAA,EAEd;AAAA,EAEA,OAAQ,OAAQ;AAEf,SAAK,WAAW,MAAM;AAEtB,UAAM,OAAQ,KAAM;AAAA,EAErB;AAED;AAEA,IAAO,oBAAQ;;;AClBf,IAAM,WAAN,cAAuB,aAAS;AAAA,EAE/B,YAAa,QAAQ,CAAC,GAAI;AAEzB,UAAM;AAEN,SAAK,QAAQ;AAAA,EAEd;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAO,QAAQ,kBAAmB,KAAK,MAAM,OAAQ,CAAE,OAAO,QAAS,QAAQ,QAAQ,cAAe,IAAI,YAAa,OAAQ,CAAE,GAAG,CAAE,CAAE;AAAA,EAEzI;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,OAAO,KAAK,YAAa,OAAQ;AACvC,UAAM,QAAQ,KAAK;AAEnB,UAAM,gBAAgB,CAAC;AAEvB,eAAY,SAAS,OAAQ;AAE5B,YAAM,eAAe,MAAM,MAAO,OAAQ;AAE1C,oBAAc,KAAM,YAAa;AAAA,IAElC;AAEA,UAAM,UAAU,GAAI,QAAQ,QAAS,IAAK,CAAE,KAAM,cAAc,KAAM,IAAK,CAAE;AAE7E,WAAO,QAAQ,OAAQ,SAAS,MAAM,MAAO;AAAA,EAE9C;AAED;AAEA,IAAO,mBAAQ;;;ACnCf,IAAM,YAAN,MAAM,kBAAiB,iBAAS;AAAA,EAsD/B,YAAa,QAAQ,OAAO,QAAQ,MAAM,QAAQ,MAAO;AAExD,UAAM;AAEN,SAAK,SAAS;AAEd,SAAK,QAAQ;AACb,SAAK,QAAQ;AACb,SAAK,QAAQ;AAAA,EAEd;AAAA,EAEA,aAAc,SAAU;AAEvB,UAAM,QAAQ,KAAK,MAAM,YAAa,OAAQ;AAC9C,UAAM,QAAQ,KAAK,QAAQ,KAAK,MAAM,YAAa,OAAQ,IAAI;AAC/D,UAAM,QAAQ,KAAK,QAAQ,KAAK,MAAM,YAAa,OAAQ,IAAI;AAE/D,UAAM,OAAO,QAAQ,SAAU,KAAM,IAAI,IAAI,QAAQ,cAAe,KAAM;AAC1E,UAAM,OAAO,QAAQ,SAAU,KAAM,IAAI,IAAI,QAAQ,cAAe,KAAM;AAC1E,UAAM,OAAO,QAAQ,SAAU,KAAM,IAAI,IAAI,QAAQ,cAAe,KAAM;AAE1E,QAAK,OAAO,QAAQ,OAAO,MAAO;AAEjC,aAAO;AAAA,IAER,WAAY,OAAO,MAAO;AAEzB,aAAO;AAAA,IAER,WAAY,OAAO,MAAO;AAEzB,aAAO;AAAA,IAER;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,YAAa,SAAU;AAEtB,UAAM,SAAS,KAAK;AAEpB,QAAK,WAAW,UAAS,UAAU,WAAW,UAAS,YAAY,WAAW,UAAS,KAAM;AAE5F,aAAO;AAAA,IAER,WAAY,WAAW,UAAS,OAAQ;AAEvC,aAAO;AAAA,IAER,OAAO;AAEN,aAAO,KAAK,aAAc,OAAQ;AAAA,IAEnC;AAAA,EAED;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,SAAS,KAAK;AAEpB,UAAM,OAAO,KAAK,YAAa,OAAQ;AACvC,UAAM,YAAY,KAAK,aAAc,OAAQ;AAE7C,UAAM,IAAI,KAAK;AACf,UAAM,IAAI,KAAK;AACf,UAAM,IAAI,KAAK;AAEf,UAAM,UAAU,QAAQ,SAAS,oBAAoB;AAErD,QAAK,YAAa,WAAW,UAAS,QAAQ,WAAW,UAAS,SAAU,WAAW,QAAS;AAI/F,aAAO,IAAI,iBAAU;AAAA,QACpB,IAAI,UAAU,QAAQ,IAAI,kBAAW,GAAG,GAAI,CAAE;AAAA,QAC9C,IAAI,UAAU,QAAQ,IAAI,kBAAW,GAAG,GAAI,CAAE;AAAA,QAC9C,IAAI,UAAU,QAAQ,IAAI,kBAAW,GAAG,GAAI,CAAE;AAAA,MAC/C,CAAE,EAAE,MAAO,OAAQ;AAAA,IAEpB,WAAY,WAAW,UAAS,qBAAsB;AAKrD,UAAI,KAAK;AACT,UAAI,KAAK;AAET,UAAK,QAAQ,SAAU,GAAG,YAAa,OAAQ,CAAE,GAAI;AAEpD,aAAK,IAAI,uBAAgB,GAAI,QAAQ,QAAS,MAAO,CAAE,KAAM,GAAG,MAAO,SAAS,MAAO,CAAE,WAAW,MAAO;AAAA,MAE5G,OAAO;AAEN,aAAK,IAAI,uBAAgB,GAAI,QAAQ,QAAS,MAAO,CAAE,KAAM,GAAG,MAAO,SAAS,MAAO,CAAE,WAAW,MAAO;AAAA,MAE5G;AAEA,YAAM,UAAU,IAAI,kBAAW,IAAI,qBAAc,KAAK,IAAI,EAAG,GAAG,KAAM;AAEtE,aAAO,IAAI,UAAU,UAAS,WAAW,OAAQ,EAAE,MAAO,OAAQ;AAAA,IAEnE,WAAY,WAAW,UAAS,UAAW;AAE1C,aAAO,QAAQ,OAAQ,UAAW,EAAE,MAAO,SAAS,SAAU,CAAE,gBAAgB,MAAM,MAAO;AAAA,IAE9F,WAAY,WAAW,UAAS,QAAS;AAExC,aAAO,QAAQ,OAAQ,QAAQ,EAAE,MAAO,SAAS,SAAU,IAAI,MAAM,MAAM,MAAO;AAAA,IAEnF,WAAY,WAAW,UAAS,QAAS;AAExC,aAAO,QAAQ,OAAQ,aAAa,EAAE,MAAO,SAAS,SAAU,IAAI,MAAM,MAAM,MAAO;AAAA,IAExF,OAAO;AAEN,YAAM,SAAS,CAAC;AAEhB,UAAK,WAAW,UAAS,OAAQ;AAEhC,eAAO;AAAA,UACN,EAAE,MAAO,SAAS,IAAK;AAAA,UACvB,EAAE,MAAO,SAAS,IAAK;AAAA,QACxB;AAAA,MAED,WAAY,WAAW,UAAS,MAAO;AAEtC,eAAO;AAAA,UACN,EAAE,MAAO,SAAS,QAAQ,cAAe,EAAE,YAAa,OAAQ,CAAE,MAAM,IAAI,UAAU,SAAU;AAAA,UAChG,EAAE,MAAO,SAAS,SAAU;AAAA,QAC7B;AAAA,MAED,WAAc,YAAa,WAAW,UAAS,OAAO,WAAW,UAAS,QAAW,WAAW,UAAS,KAAM;AAE9G,eAAO;AAAA,UACN,EAAE,MAAO,SAAS,SAAU;AAAA,UAC5B,EAAE,MAAO,SAAS,QAAQ,cAAe,EAAE,YAAa,OAAQ,CAAE,MAAM,IAAI,UAAU,SAAU;AAAA,QACjG;AAAA,MAED,WAAY,WAAW,UAAS,SAAU;AAEzC,eAAO;AAAA,UACN,EAAE,MAAO,SAAS,SAAU;AAAA,UAC5B,EAAE,MAAO,SAAS,SAAU;AAAA,UAC5B,EAAE,MAAO,SAAS,OAAQ;AAAA,QAC3B;AAAA,MAED,WAAY,WAAW,UAAS,KAAM;AAErC,eAAO;AAAA,UACN,EAAE,MAAO,SAAS,SAAU;AAAA,UAC5B,EAAE,MAAO,SAAS,SAAU;AAAA,UAC5B,EAAE,MAAO,SAAS,QAAQ,cAAe,EAAE,YAAa,OAAQ,CAAE,MAAM,IAAI,UAAU,SAAU;AAAA,QACjG;AAAA,MAED,OAAO;AAEN,eAAO,KAAM,EAAE,MAAO,SAAS,SAAU,CAAE;AAE3C,YAAK,MAAM,MAAO;AAEjB,iBAAO,KAAM,EAAE,MAAO,SAAS,SAAU,GAAG,EAAE,MAAO,SAAS,SAAU,CAAE;AAAA,QAE3E,WAAY,MAAM,MAAO;AAExB,iBAAO,KAAM,EAAE,MAAO,SAAS,SAAU,CAAE;AAAA,QAE5C;AAAA,MAED;AAEA,aAAO,QAAQ,OAAQ,GAAI,QAAQ,UAAW,MAAO,CAAE,KAAK,OAAO,KAAM,IAAK,CAAC,MAAM,MAAM,MAAO;AAAA,IAEnG;AAAA,EAED;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,UAAW,IAAK;AAEtB,SAAK,SAAS,KAAK;AAAA,EAEpB;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAa,IAAK;AAExB,SAAK,SAAS,KAAK;AAAA,EAEpB;AAED;AAAA;AAtPC,cAJK,WAIE,WAAU;AACjB,cALK,WAKE,WAAU;AACjB,cANK,WAME,OAAM;AACb,cAPK,WAOE,QAAO;AACd,cARK,WAQE,OAAM;AACb,cATK,WASE,QAAO;AACd,cAVK,WAUE,QAAO;AACd,cAXK,WAWE,gBAAe;AACtB,cAZK,WAYE,SAAQ;AACf,cAbK,WAaE,QAAO;AACd,cAdK,WAcE,aAAY;AACnB,cAfK,WAeE,SAAQ;AACf,cAhBK,WAgBE,OAAM;AACb,cAjBK,WAiBE,OAAM;AACb,cAlBK,WAkBE,OAAM;AACb,cAnBK,WAmBE,QAAO;AACd,cApBK,WAoBE,QAAO;AACd,cArBK,WAqBE,QAAO;AACd,cAtBK,WAsBE,OAAM;AACb,cAvBK,WAuBE,QAAO;AACd,cAxBK,WAwBE,UAAS;AAChB,cAzBK,WAyBE,UAAS;AAChB,cA1BK,WA0BE,UAAS;AAChB,cA3BK,WA2BE,QAAO;AACd,cA5BK,WA4BE,QAAO;AACd,cA7BK,WA6BE,YAAW;AAClB,cA9BK,WA8BE,SAAQ;AAAA;AAIf,cAlCK,WAkCE,SAAQ;AACf,cAnCK,WAmCE,OAAM;AACb,cApCK,WAoCE,OAAM;AACb,cArCK,WAqCE,OAAM;AACb,cAtCK,WAsCE,QAAO;AACd,cAvCK,WAuCE,WAAU;AACjB,cAxCK,WAwCE,YAAW;AAClB,cAzCK,WAyCE,OAAM;AACb,cA1CK,WA0CE,SAAQ;AACf,cA3CK,WA2CE,OAAM;AACb,cA5CK,WA4CE,uBAAsB;AAAA;AAI7B,cAhDK,WAgDE,OAAM;AACb,cAjDK,WAiDE,SAAQ;AACf,cAlDK,WAkDE,WAAU;AACjB,cAnDK,WAmDE,cAAa;AACpB,cApDK,WAoDE,eAAc;AApDtB,IAAM,WAAN;AA4PA,IAAO,mBAAQ;;;AC3Pf,IAAM,gBAAN,MAAM,sBAAqB,aAAK;AAAA,EAQ/B,YAAa,QAAQ,cAAa,OAAQ;AAEzC,UAAO,MAAO;AAEd,SAAK,QAAQ;AAAA,EAEd;AAAA,EAEA,UAAuB;AAEtB,WAAO,YAAY,KAAK,KAAK;AAAA,EAE9B;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,QAAQ,KAAK;AAEnB,QAAI,aAAa;AAEjB,QAAK,UAAU,cAAa,UAAW;AAEtC,mBAAa,IAAI,sBAAe,YAAY,MAAO;AAAA,IAEpD,WAAY,UAAU,cAAa,OAAQ;AAE1C,mBAAa,IAAI,oBAAa,IAAI,cAAc,cAAa,QAAS,CAAE;AAAA,IAEzE,WAAY,UAAU,cAAa,OAAQ;AAE1C,YAAM,qBAAqB,IAAI,iBAAU,iBAAS,qBAAqB,IAAI,kBAAW,kBAAU,YAAa,GAAG,IAAI,cAAc,cAAa,KAAM,CAAE;AACvJ,mBAAa,IAAI,oBAAa,kBAAmB;AAAA,IAElD,WAAY,UAAU,cAAa,MAAO;AAEzC,YAAM,qBAAqB,IAAI,qBAAc,KAAK,IAAI,kBAAW,kBAAU,WAAY,GAAG,IAAI,cAAc,cAAa,KAAM,CAAE;AACjI,mBAAa,IAAI,oBAAa,kBAAmB;AAAA,IAElD,WAAY,UAAU,cAAa,gBAAiB;AAEnD,YAAM,qBAAqB,IAAI,iBAAU,iBAAS,QAAQ,IAAI,cAAc,cAAa,IAAK,CAAE;AAChG,mBAAa,IAAI,iBAAU,iBAAS,WAAW,IAAI,oBAAa,kBAAmB,CAAE;AAAA,IAEtF;AAEA,WAAO,WAAW,MAAO,SAAS,KAAK,YAAa,OAAQ,CAAE;AAAA,EAE/D;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,UAAW,IAAK;AAEtB,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAa,IAAK;AAExB,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAED;AAvEC,cAFK,eAEE,YAAW;AAClB,cAHK,eAGE,SAAQ;AACf,cAJK,eAIE,SAAQ;AACf,cALK,eAKE,QAAO;AACd,cANK,eAME,kBAAiB;AANzB,IAAM,eAAN;AA2EA,IAAO,uBAAQ;;;AC5Ef,IAAM,0BAAN,cAAsC,aAAK;AAAA,EAE1C,YAAa,WAAW,IAAI,qBAAa,GAAI;AAE5C,UAAO,MAAO;AAEd,SAAK,WAAW;AAAA,EAEjB;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,WAAW,KAAK;AAEtB,UAAM,YAAY,IAAI,qBAAc,KAAK,IAAI,mBAAY,mBAAW,iBAAkB,GAAG,IAAI,kBAAW,kBAAU,WAAY,CAAE;AAChI,UAAM,UAAU,IAAI,qBAAc,KAAK,WAAW,QAAS;AAE3D,WAAO,QAAQ,MAAO,OAAQ;AAAA,EAE/B;AAED;AAEA,IAAO,kCAAQ;;;ACrBf,IAAM,cAAN,MAAM,oBAAmB,aAAK;AAAA,EAO7B,YAAa,QAAQ,YAAW,OAAQ;AAEvC,UAAO,MAAO;AAEd,SAAK,QAAQ;AAAA,EAEd;AAAA,EAEA,UAAuB;AAEtB,WAAO,UAAU,KAAK,KAAK;AAAA,EAE5B;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,QAAQ,KAAK;AAEnB,QAAI,aAAa;AAEjB,QAAK,UAAU,YAAW,UAAW;AAEpC,mBAAa,IAAI,sBAAe,UAAU,MAAO;AAAA,IAElD,WAAY,UAAU,YAAW,OAAQ;AAExC,mBAAa,IAAI,oBAAa,IAAI,YAAY,YAAW,QAAS,CAAE;AAAA,IAErE,WAAY,UAAU,YAAW,MAAO;AAEvC,YAAM,mBAAmB,IAAI,qBAAc,KAAK,IAAI,kBAAW,kBAAU,aAAc,GAAG,IAAI,YAAY,YAAW,KAAM,CAAE;AAC7H,mBAAa,IAAI,iBAAU,iBAAS,WAAW,IAAI,oBAAa,gBAAiB,CAAE;AAAA,IAEpF,WAAY,UAAU,YAAW,OAAQ;AAGxC,YAAM,mBAAmB,IAAI,iBAAU,iBAAS,qBAAqB,IAAI,YAAY,YAAW,IAAK,GAAG,IAAI,mBAAY,mBAAW,WAAY,CAAE;AACjJ,mBAAa,IAAI,iBAAU,iBAAS,WAAW,IAAI,oBAAa,gBAAiB,CAAE;AAAA,IAEpF;AAEA,WAAO,WAAW,MAAO,OAAQ;AAAA,EAElC;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,UAAW,IAAK;AAEtB,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAa,IAAK;AAExB,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAED;AAlEC,cAFK,aAEE,YAAW;AAClB,cAHK,aAGE,SAAQ;AACf,cAJK,aAIE,SAAQ;AACf,cALK,aAKE,QAAO;AALf,IAAM,aAAN;AAsEA,IAAO,qBAAQ;;;AC5Ef,IAAM,cAAN,cAA0B,aAAK;AAAA,EAE9B,cAAc;AAEb,UAAO,MAAO;AAEd,SAAK,gBAAgB;AAAA,EAEtB;AAAA,EAEA,WAAwB;AAEvB,WAAO;AAAA,EAER;AAED;AAEA,IAAO,sBAAQ;;;AClBf,IAAM,oBAAN,cAAgC,mBAAW;AAAA,EAE1C,YAAa,OAAO,YAAY,cAAc,GAAI;AAEjD,UAAO,OAAO,YAAY,WAAY;AAEtC,SAAK,sBAAsB;AAAA,EAE5B;AAAA,EAEA,eAA4B;AAE3B,WAAO;AAAA,EAER;AAED;AAEA,IAAO,4BAAQ;;;AClBf,IAAM,eAAN,cAA2B,sBAAc;AAAA,EAExC,YAAaC,WAAU,WAAWC,YAAW,MAAO;AAEnD,UAAOD,WAAU,WAAWC,SAAS;AAErC,SAAK,WAAWA;AAAA,EAEjB;AAAA,EAEA,OAAQ,OAAQ;AAEf,SAAK,SAAS,KAAK,aAAa,OAAO,KAAK,WAAW,MAAM,OAAO;AAEpE,UAAM,OAAQ,KAAM;AAAA,EAErB;AAED;AAEA,IAAO,uBAAQ;;;ACpBf,IAAM,kBAAN,cAA8B,aAAK;AAAA,EAElC,cAAc;AAEb,UAAO,MAAO;AAEd,SAAK,oBAAoB;AAAA,EAE1B;AAAA,EAEA,SAAU,SAAU;AAEnB,WAAO,QAAQ,eAAe;AAAA,EAE/B;AAED;AAEA,IAAO,0BAAQ;;;ACjBf,IAAM,cAAN,cAA0B,aAAK;AAAA,EAE9B,YAAa,aAAa,OAAO,gBAAgB,CAAE,EAAG,GAAI;AAEzD,UAAO,MAAO;AAEd,SAAK,gBAAgB;AAErB,SAAK,cAAc;AAEnB,SAAK,QAAQ;AACb,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AAErB,SAAK,aAAa,eAAe;AAEjC,SAAK,oBAAoB;AAAA,EAE1B;AAAA,EAEA,sBAAsB;AAErB,UAAM,EAAE,OAAO,cAAc,IAAI;AAEjC,QAAI,OAAO,cAAe,CAAE;AAE5B,aAAU,IAAI,GAAG,IAAI,cAAc,QAAQ;AAC1C,cAAQ,cAAe,CAAE;AAE1B,SAAK,gBAAgB,KAAK,KAAM,QAAQ,IAAK;AAAA,EAE9C;AAAA,EAEA,SAAS;AAAA,EAAE;AAAA,EAEX,OAAQ,EAAE,SAAS,GAAI;AAEtB,aAAS,QAAS,IAAK;AAAA,EAExB;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,EAAE,YAAY,IAAI;AAExB,QAAK,gBAAgB,WAAY;AAEhC,YAAM,UAAU,KAAK,YAAY,MAAO,SAAS,MAAO;AAExD,UAAK,YAAY,IAAK;AAErB,gBAAQ,YAAa,OAAQ;AAAA,MAE9B;AAAA,IAED;AAAA,EAED;AAED;AAEA,IAAO,sBAAQ;;;AC5Df,IAAM,WAAN,cAAuB,aAAK;AAAA,EAE3B,YAAa,UAAU,QAAQ,UAAW;AAEzC,UAAM;AAEN,SAAK,WAAW;AAEhB,SAAK,SAAS;AACd,SAAK,WAAW;AAAA,EAEjB;AAAA,EAEA,YAAa,SAAU;AAEtB,UAAM,SAAS,KAAK,OAAO,YAAa,OAAQ;AAChD,UAAM,WAAW,KAAK,SAAS,YAAa,OAAQ;AAEpD,QAAK,QAAQ,cAAe,QAAS,IAAI,QAAQ,cAAe,MAAO,GAAI;AAE1E,aAAO;AAAA,IAER;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,OAAO,KAAK,YAAa,OAAQ;AAEvC,UAAMC,WAAU,EAAE,WAAW,MAAM;AACnC,UAAM,eAAe,IAAI,qBAAc,MAAM,IAAK,EAAE,MAAO,OAAQ;AAEnE,UAAM,cAAc,IAAI;AAAA,MAAa,KAAK;AAAA;AAAA,IAAsB,EAAE,MAAO,SAAS,MAAO,GACxF,YAAY,IAAI,oBAAa,KAAK,QAAQA,QAAQ,EAAE,MAAO,SAAS,IAAK,GACzE,cAAc,IAAI,oBAAa,KAAK,UAAUA,QAAQ,EAAE,MAAO,SAAS,IAAK;AAE9E,YAAQ,YAAa,QAAQ,WAAW;AAAA;AAAA,IAEpC,YAAY,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA,IAI3B,YAAY,MAAM,WAAW;AAAA;AAAA,GAE9B;AAEH,WAAO;AAAA,EAER;AAED;AAEA,IAAO,mBAAQ;;;ACzDf,IAAM,mBAAN,cAA+B,aAAS;AAAA,EAEvC,YAAa,MAAM,WAAY;AAE9B,UAAM;AAEN,SAAK,OAAO;AACZ,SAAK,YAAY;AAAA,EAElB;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAO,KAAK,KAAK,YAAa,OAAQ;AAAA,EAEvC;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,cAAc,KAAK,KAAK,MAAO,OAAQ;AAC7C,UAAM,eAAe,KAAK,UAAU,MAAO,SAAS,MAAO;AAE3D,WAAO,GAAG,WAAW,KAAK,YAAY;AAAA,EAEvC;AAED;AAEA,IAAO,2BAAQ;;;AC5Bf,IAAM,cAAN,cAA0B,aAAK;AAAA,EAE9B,YAAa,MAAM,WAAY;AAE9B,UAAM;AAEN,SAAK,OAAO;AACZ,SAAK,YAAY;AAAA,EAElB;AAAA,EAEA,cAA2B;AAE1B,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,YAAY,KAAK;AACvB,UAAM,OAAO,KAAK;AAClB,UAAM,OAAO,KAAK,YAAa,OAAQ;AAEvC,QAAI,UAAU;AAEd,QAAK,QAAQ,YAAa,SAAU,MAAM,OAAQ;AAEjD,YAAM,cAAc,KAAK,MAAO,SAAS,SAAU;AAEnD,gBAAU,QAAQ,OAAQ,aAAa,MAAM,SAAU;AAAA,IAExD,OAAO;AAEN,gBAAU,KAAK,MAAO,SAAS,SAAU;AAAA,IAE1C;AAEA,WAAO,QAAQ,OAAQ,SAAS,MAAM,MAAO;AAAA,EAE9C;AAED;AAEA,IAAO,sBAAQ;;;ACtCf,IAAM,oBAAoB;AAAA,EAEzB,UAAW,aAAa,QAAS;AAEhC,UAAM,SAAS,OAAO,MAAM;AAE5B,WAAO,YAAa,YAAa,MAAO,GAAG,GAAG,MAAO;AAAA,EAEtD;AAAA,EAEA,KAAK,SAAW,MAAM,MAAO;AAE5B,QAAK,OAAO,SAAS,YAAY,KAAM,IAAK,MAAM,QAAY;AAE7D,UAAK,wBAAwB,KAAM,IAAK,MAAM,MAAO;AAIpD,eAAO,KACL,QAAS,QAAQ,GAAI,EACrB,QAAS,QAAQ,GAAI,EACrB,QAAS,QAAQ,GAAI,EACrB,QAAS,QAAQ,GAAI;AAEvB,eAAO,WAAY,IAAI,kBAAW,MAAM,IAAK,CAAE;AAAA,MAEhD,WAAY,QAAQ,KAAM,IAAK,MAAM,MAAO;AAI3C,eAAO,WAAY,IAAI,yBAAkB,MAAM,IAAI,kBAAW,OAAQ,IAAK,GAAG,MAAO,CAAE,CAAE;AAAA,MAE1F;AAAA,IAED;AAEA,WAAO,KAAM,IAAK;AAAA,EAEnB;AAED;AAEA,IAAM,sBAAsB,oBAAI,QAAQ;AAExC,IAAM,mBAAmB,SAAW,KAAM;AAEzC,QAAM,OAAO,OAAO;AAEpB,MAAO,SAAS,YAAgB,SAAS,WAAc;AAEtD,WAAO,WAAY,sBAAuB,GAAI,CAAE;AAAA,EAEjD,WAAY,SAAS,UAAW;AAE/B,SAAK,2BAAK,YAAW,MAAO;AAE3B,UAAIC,cAAa,oBAAoB,IAAK,GAAI;AAE9C,UAAKA,gBAAe,QAAY;AAE/B,QAAAA,cAAa,IAAI,MAAO,KAAK,iBAAkB;AAC/C,4BAAoB,IAAK,KAAKA,WAAW;AACzC,4BAAoB,IAAKA,aAAYA,WAAW;AAAA,MAEjD;AAEA,aAAOA;AAAA,IAER;AAAA,EAED;AAEA,SAAO;AAER;AAEA,IAAM,oBAAoB,SAAW,SAAU;AAE9C,aAAY,QAAQ,SAAU;AAE7B,YAAS,IAAK,IAAI,WAAY,QAAS,IAAK,CAAE;AAAA,EAE/C;AAEA,SAAO;AAER;AAEA,IAAM,kBAAkB,SAAW,OAAQ;AAE1C,QAAM,MAAM,MAAM;AAElB,WAAU,IAAI,GAAG,IAAI,KAAK,KAAO;AAEhC,UAAO,CAAE,IAAI,WAAY,MAAO,CAAE,CAAE;AAAA,EAErC;AAEA,SAAO;AAER;AAEA,IAAM,kBAAkB,SAAW,WAAW,QAAQ,MAAM,SAAS,MAAO;AAE3E,MAAK,UAAU,MAAO;AAErB,WAAO,IAAK,WAAY;AAEvB,aAAO,WAAY,IAAI,UAAW,GAAG,UAAW,MAAO,CAAE,CAAE;AAAA,IAE5D;AAAA,EAED,WAAY,WAAW,MAAO;AAE7B,WAAO,IAAK,WAAY;AAEvB,aAAO,WAAY,IAAI,UAAW,OAAO,GAAG,UAAW,MAAO,CAAE,CAAE;AAAA,IAEnE;AAAA,EAED,OAAO;AAEN,aAAS,WAAY,MAAO;AAE5B,WAAO,IAAK,WAAY;AAEvB,aAAO,WAAY,IAAI,UAAW,OAAO,GAAG,UAAW,MAAO,GAAG,MAAO,CAAE;AAAA,IAE3E;AAAA,EAED;AAED;AAEA,IAAM,sBAAsB,SAAW,cAAc,QAAS;AAE7D,SAAO,WAAY,IAAI,UAAW,GAAG,UAAW,MAAO,CAAE,CAAE;AAE5D;AAEA,IAAM,mBAAmB,SAAW,QAAS;AAI5C,QAAM,OAAO;AAAA,IAEZ,OAAO,CAAE,YAAa;AAErB,WAAK,KAAM,CAAC,GAAG,OAAQ;AAEvB,aAAO;AAAA,IAER;AAAA,IAEA,MAAM,CAAE,QAAQ,YAAa;AAE5B,eAAS,YAAa,MAAO;AAE7B,aAAO,WAAY,OAAQ,QAAQ,OAAQ,CAAE;AAAA,IAE9C;AAAA,EAED;AAEA,SAAO;AAER;AAEO,IAAM,aAAa,IAAI,MAAO,kBAAkB,iBAAkB;AAElE,IAAM,aAAa,CAAE;AAAA;AAAA,EAAmB,iBAAkB,GAAI;AAAA;AAC9D,IAAM,cAAc,CAAE,QAAS,IAAI,kBAAmB,GAAI;AAC1D,IAAM,YAAY,CAAE,QAAS,IAAI,gBAAiB,GAAI;AACtD,IAAM,YAAY,IAAK,QAAS,IAAI,gBAAiB,GAAG,GAAI;AAC5D,IAAM,gBAAgB,IAAK,QAAS,IAAI,oBAAqB,GAAG,GAAI;AAE3E,IAAM,QAAQ,CAAE,OAAO,IAAK;AAC5B,IAAM,QAAQ,CAAE,GAAG,GAAG,GAAG,CAAE;AAC3B,IAAM,OAAO,CAAE,IAAK,EAAI;AACxB,IAAM,SAAS,CAAE,KAAK,KAAK,IAAI,GAAG,MAAM,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAM,KAAK,KAAK,IAAK,KAAK,KAAK,CAAE;AAE9H,IAAM,gBAAgB,oBAAI,IAAI;AAC9B,WAAYC,SAAQ;AAAQ,gBAAc,IAAKA,OAAM,IAAI,kBAAWA,KAAK,CAAE;AAE3E,IAAM,gBAAgB,oBAAI,IAAI;AAC9B,WAAYC,SAAQ;AAAQ,gBAAc,IAAKA,OAAM,IAAI,kBAAWA,OAAM,MAAO,CAAE;AAEnF,IAAM,eAAe,IAAI,IAAK,CAAE,GAAG,aAAc,EAAE,IAAK,QAAM,IAAI,kBAAW,GAAG,OAAO,KAAM,CAAE,CAAE;AACjG,WAAYC,QAAO;AAAO,eAAa,IAAKA,MAAK,IAAI,kBAAWA,MAAK,KAAM,CAAE;AAE7E,IAAM,iBAAiB,IAAI,IAAK,CAAE,GAAG,YAAa,EAAE,IAAK,QAAM,IAAI,kBAAW,GAAG,KAAM,CAAE,CAAE;AAC3F,WAAYC,UAAS;AAAS,iBAAe,IAAKA,QAAO,IAAI,kBAAWA,MAAM,CAAE;AAChF,WAAYA,UAAS;AAAS,iBAAe,IAAK,CAAEA,QAAO,IAAI,kBAAW,CAAEA,MAAM,CAAE;AAE7E,IAAM,YAAY,EAAE,MAAM,eAAe,MAAM,eAAe,MAAM,cAAc,OAAO,eAAe;AAE/G,IAAM,qBAAqB,IAAI,IAAK,CAAE,GAAG,eAAe,GAAG,cAAe,CAAE;AAE5E,IAAM,wBAAwB,CAAE,UAAW;AAE1C,MAAK,mBAAmB,IAAK,KAAM,GAAI;AAEtC,WAAO,mBAAmB,IAAK,KAAM;AAAA,EAEtC,WAAY,MAAM,WAAW,MAAO;AAEnC,WAAO;AAAA,EAER,OAAO;AAEN,WAAO,IAAI,kBAAW,KAAM;AAAA,EAE7B;AAED;AAEO,IAAM,cAAc,SAAW,MAAM,WAAW,MAAO;AAE7D,SAAO,IAAK,WAAY;AAEvB,QAAK,OAAO,WAAW,GAAI;AAE1B,aAAO,WAAY,IAAI,kBAAW,iBAAkB,IAAK,GAAG,IAAK,CAAE;AAAA,IAEpE,OAAO;AAEN,UAAK,SAAS,WAAW,OAAQ,CAAE,EAAE,WAAW,MAAO;AAEtD,iBAAS,CAAE,iBAAkB,MAAM,GAAG,MAAO,CAAE;AAAA,MAEhD;AAEA,UAAK,OAAO,WAAW,KAAK,aAAa,QAAQ,SAAS,IAAK,OAAQ,CAAE,CAAE,GAAI;AAE9E,eAAO,SAAS,IAAK,OAAQ,CAAE,CAAE;AAAA,MAElC;AAEA,YAAM,QAAQ,OAAO,IAAK,qBAAsB;AAEhD,UAAK,MAAM,WAAW,GAAI;AAEzB,eAAO,WAAY,MAAO,CAAE,EAAE,aAAa,OAAO,MAAO,CAAE,IAAI,IAAI,oBAAa,MAAO,CAAE,GAAG,IAAK,CAAE;AAAA,MAEpG;AAEA,aAAO,WAAY,IAAI,oBAAa,IAAI,iBAAU,KAAM,GAAG,IAAK,CAAE;AAAA,IAEnE;AAAA,EAED;AAED;AAEO,IAAM,mBAAmB,CAAE,UAAW,MAAM,YAAY,MAAM,cAAe,OAAO,UAAU,WAAW,QAAQ;;;AChNjH,IAAM,QAAQ,IAAI,YAAa,OAAQ;AAEvC,IAAM,QAAQ,IAAI,YAAa,SAAS,UAAU,KAAM;AACxD,IAAM,MAAM,IAAI,YAAa,OAAO,UAAU,GAAI;AAClD,IAAM,OAAO,IAAI,YAAa,QAAQ,UAAU,IAAK;AACrD,IAAM,OAAO,IAAI,YAAa,QAAQ,UAAU,IAAK;AAErD,IAAM,OAAO,IAAI,YAAa,MAAO;AACrC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AACvC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AACvC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AAEvC,IAAM,OAAO,IAAI,YAAa,MAAO;AACrC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AACvC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AACvC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AAEvC,IAAM,OAAO,IAAI,YAAa,MAAO;AACrC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AACvC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AACvC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AAEvC,IAAM,OAAO,IAAI,YAAa,MAAO;AACrC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AACvC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AACvC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AAEvC,IAAM,OAAO,IAAI,YAAa,MAAO;AACrC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AACvC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AACvC,IAAM,QAAQ,IAAI,YAAa,OAAQ;AAMvC,IAAM,OAAO,CAAEC,UAAU;AAE/B,QAAM,OAAO,WAAY,IAAI,qBAAcA,KAAK,CAAE;AAElD,QAAMC,QAAO,KAAK,KAAK,KAAM,IAAK;AAClC,OAAK,OAAO,CAAE,WAAY,WAAYA,MAAM,MAAO,CAAE;AAErD,SAAO;AAER;AAEO,IAAM,UAAU,CAAE,eAAgB;AApGzC;AAsGC,QAAM,WAAW,iBAAkB,UAAW;AAG9C,QAAM,QAAQ,WAAW,WAAW,SAAO,gBAAW,SAAX,mBAAiB,UAAS,WAAW,QAAQ;AAExF,SAAO,WAAY,IAAI,oBAAa,OAAO,QAAS,CAAE;AAEvD;AAEO,IAAM,YAAY,CAAE,MAAM,aAAc,WAAY,IAAI,sBAAe,MAAM,QAAS,CAAE;AACxF,IAAM,WAAW,CAAE,MAAM,eAAgB,WAAY,IAAI,qBAAc,MAAM,iBAAkB,UAAW,CAAE,CAAE;AAE9G,IAAM,SAAS,UAAW,kBAAW;AACrC,IAAM,OAAO,UAAW,gBAAS;AACjC,IAAM,UAAU,UAAW,mBAAY;AACvC,IAAM,aAAa,UAAW,sBAAe;AAC7C,IAAM,OAAO,UAAW,wBAAiB;AACzC,IAAM,gBAAgB,cAAe,yBAAkB;AACvD,IAAM,QAAQ,UAAW,eAAQ;AACjC,IAAM,OAAO;AACb,IAAM,UAAU,UAAW,mBAAY;AAIvC,IAAM,SAAS,CAAE,OAAO,YAAY,UAAW,WAAY,IAAI,mBAAY,OAAO,iBAAkB,UAAW,GAAG,KAAM,CAAE;AAC1H,IAAM,UAAU,CAAE,OAAO,YAAY,UAAW,WAAY,IAAI,0BAAmB,OAAO,iBAAkB,UAAW,GAAG,KAAM,CAAE;AAElI,IAAM,yBAAyB,cAAe,oBAAY,mBAAW,iBAAkB;AACvF,IAAM,mBAAmB,cAAe,oBAAY,mBAAW,WAAY;AAC3E,IAAM,qBAAqB,cAAe,oBAAY,mBAAW,aAAc;AAC/E,IAAM,oBAAoB,cAAe,oBAAY,mBAAW,YAAa;AAC7E,IAAM,iBAAiB,cAAe,oBAAY,mBAAW,QAAS;AAEtE,IAAM,oBAAoB,cAAe,sBAAc,qBAAa,UAAW;AAC/E,IAAM,gBAAgB,cAAe,sBAAc,qBAAa,KAAM;AACtE,IAAM,mBAAmB,cAAe,sBAAc,qBAAa,QAAS;AAC5E,IAAM,kBAAkB,cAAe,sBAAc,qBAAa,OAAQ;AAE1E,IAAM,oBAAoB,cAAe,sBAAc,qBAAa,SAAU;AAC9E,IAAM,oBAAoB,cAAe,sBAAc,qBAAa,SAAU;AAC9E,IAAM,mBAAmB,cAAe,sBAAc,qBAAa,QAAS;AAE5E,IAAM,eAAe,cAAe,sBAAc,gBAAgB,MAAO;AACzE,IAAM,YAAY,cAAe,sBAAc,aAAa,OAAQ;AACpE,IAAM,YAAY,cAAe,sBAAc,aAAa,OAAQ;AACpE,IAAM,YAAY,cAAe,sBAAc,aAAa,OAAQ;AACpE,IAAM,gBAAgB,cAAe,sBAAc,iBAAiB,OAAQ;AAE5E,IAAM,YAAY,CAAE,MAAM,YAAY,WAAY,WAAY,IAAI,sBAAe,MAAM,iBAAkB,UAAW,GAAG,MAAO,CAAE;AAChI,IAAM,oBAAoB,CAAE,MAAM,YAAY,aAAc,WAAY,IAAI,8BAAuB,MAAM,iBAAkB,UAAW,GAAG,QAAS,CAAE;AACpJ,IAAM,WAAW,CAAE,MAAM,WAAWC,cAAc,WAAY,IAAI,qBAAc,MAAM,WAAWA,SAAS,CAAE;AAE5G,IAAM,sBAAsB,UAAW,+BAAwB;AAE/D,IAAM,iBAAiB,cAAe,oBAAY,mBAAW,QAAS;AACtE,IAAM,cAAc,cAAe,oBAAY,mBAAW,KAAM;AAChE,IAAM,cAAc,cAAe,oBAAY,mBAAW,KAAM;AAChE,IAAM,aAAa,cAAe,oBAAY,mBAAW,IAAK;AAC9D,IAAM,wBAAwB,cAAe,iBAAS,YAAY,uBAAwB;AAE1F,IAAM,kBAAkB,cAAe,mBAAW,kBAAU,WAAY;AACxE,IAAM,oBAAoB,cAAe,mBAAW,kBAAU,aAAc;AAC5E,IAAM,mBAAmB,cAAe,mBAAW,kBAAU,YAAa;AAC1E,IAAM,gBAAgB,cAAe,mBAAW,kBAAU,QAAS;AACnE,IAAM,oBAAoB,cAAe,mBAAW,kBAAU,aAAc;AAE5E,IAAM,mBAAmB,cAAe,sBAAc,qBAAa,QAAS;AAC5E,IAAM,gBAAgB,cAAe,sBAAc,qBAAa,KAAM;AACtE,IAAM,gBAAgB,cAAe,sBAAc,qBAAa,KAAM;AACtE,IAAM,eAAe,cAAe,sBAAc,qBAAa,IAAK;AACpE,IAAM,wBAAwB,cAAe,sBAAc,qBAAa,cAAe;AAEvF,IAAM,UAAU,UAAW,mBAAY;AACvC,IAAM,UAAU,CAAEC,aAAa,WAAY,IAAI,oBAAaA,SAAQ,WAAW,OAAOA,WAAU,IAAI,oBAAaA,QAAQ,GAAG,SAAU,CAAE;AACxI,IAAM,KAAK,IAAK,WAAY,WAAY,IAAI,eAAQ,GAAG,MAAO,CAAE;AAChE,IAAM,UAAU,cAAe,mBAAY;AAI3C,IAAM,UAAU,CAAE,MAAM,OAAO,kBAAmB,WAAY,IAAI,oBAAa,WAAY,IAAK,GAAG,OAAO,aAAc,CAAE;AAI1H,IAAM,UAAU,MAAO,IAAK;AAC5B,IAAM,WAAW,MAAO,GAAI;AAE5B,IAAM,OAAO,UAAW,gBAAS;AAEjC,IAAM,MAAM,UAAW,sBAAc,GAAI;AACzC,IAAM,MAAM,UAAW,sBAAc,GAAI;AACzC,IAAM,MAAM,UAAW,sBAAc,GAAI;AACzC,IAAM,MAAM,UAAW,sBAAc,GAAI;AACzC,IAAM,YAAY,UAAW,sBAAc,GAAI;AAC/C,IAAM,QAAQ,UAAW,sBAAc,IAAK;AAC5C,IAAM,SAAS,UAAW,sBAAc,GAAI;AAC5C,IAAM,WAAW,UAAW,sBAAc,GAAI;AAC9C,IAAM,cAAc,UAAW,sBAAc,GAAI;AACjD,IAAM,gBAAgB,UAAW,sBAAc,IAAK;AACpD,IAAM,mBAAmB,UAAW,sBAAc,IAAK;AACvD,IAAM,MAAM,UAAW,sBAAc,IAAK;AAC1C,IAAM,KAAK,UAAW,sBAAc,IAAK;AACzC,IAAM,MAAM,UAAW,sBAAc,IAAK;AAC1C,IAAM,SAAS,UAAW,sBAAc,GAAI;AAC5C,IAAM,QAAQ,UAAW,sBAAc,GAAI;AAC3C,IAAM,SAAS,UAAW,sBAAc,GAAI;AAC5C,IAAM,YAAY,UAAW,sBAAc,IAAK;AAChD,IAAM,aAAa,UAAW,sBAAc,IAAK;AAEjD,IAAM,UAAU,UAAW,kBAAU,iBAAS,OAAQ;AACtD,IAAM,UAAU,UAAW,kBAAU,iBAAS,OAAQ;AACtD,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,cAAc,UAAW,kBAAU,iBAAS,YAAa;AAC/D,IAAM,QAAQ,UAAW,kBAAU,iBAAS,KAAM;AAClD,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,YAAY,UAAW,kBAAU,iBAAS,SAAU;AAC1D,IAAM,QAAQ,UAAW,kBAAU,iBAAS,KAAM;AAClD,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,SAAS,UAAW,kBAAU,iBAAS,MAAO;AACpD,IAAM,SAAS,UAAW,kBAAU,iBAAS,MAAO;AACpD,IAAM,SAAS,UAAW,kBAAU,iBAAS,MAAO;AACpD,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,WAAW,UAAW,kBAAU,iBAAS,QAAS;AACxD,IAAM,QAAQ,UAAW,kBAAU,iBAAS,KAAM;AAElD,IAAM,QAAQ,UAAW,kBAAU,iBAAS,KAAM;AAClD,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,OAAO,UAAW,kBAAU,iBAAS,IAAK;AAChD,IAAM,UAAU,UAAW,kBAAU,iBAAS,OAAQ;AACtD,IAAM,WAAW,UAAW,kBAAU,iBAAS,QAAS;AACxD,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,QAAQ,UAAW,kBAAU,iBAAS,KAAM;AAClD,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,OAAO,UAAW,kBAAU,iBAAS,KAAK,CAAE;AAClD,IAAM,OAAO,UAAW,kBAAU,iBAAS,KAAK,CAAE;AAClD,IAAM,OAAO,UAAW,kBAAU,iBAAS,KAAK,CAAE;AAClD,IAAM,qBAAqB,UAAW,kBAAU,iBAAS,mBAAoB;AAE7E,IAAM,MAAM,UAAW,kBAAU,iBAAS,GAAI;AAC9C,IAAM,QAAQ,UAAW,kBAAU,iBAAS,KAAM;AAClD,IAAM,UAAU,UAAW,kBAAU,iBAAS,OAAQ;AACtD,IAAM,aAAa,UAAW,kBAAU,iBAAS,UAAW;AAC5D,IAAM,cAAc,UAAW,kBAAU,iBAAS,WAAY;AAI9D,IAAM,cAAc,cAAe,uBAAgB;AACnD,IAAM,gBAAgB,IAAK,IAAK,MAAO,WAAY,GAAG,CAAE,GAAG,CAAE;AAO7D,IAAM,UAAU,UAAW,wBAAiB;AAI5C,IAAM,QAAQ,SAAU,IAAK,uBAAuB,qBAAsB,CAAE;AAC5E,IAAM,yBAAyB,UAAW,mBAAoB,uBAAuB,gBAAiB,CAAE;;;AC5Q/G,IAAM,oBAAN,cAAgC,aAAK;AAAA,EAEpC,cAAc;AAEb,UAAO,MAAO;AAAA,EAEf;AAAA,EAEA,UAAuB;AAEtB,WAAO;AAAA,EAER;AAAA,EAEA,YAAY;AAEX,UAAM,cAAc,QAAS,OAAQ,qBAAsB,GAAG,qBAAsB;AAEpF,WAAO,mBAAoB,aAAa,gBAAiB;AAAA,EAE1D;AAED;AAEA,IAAO,4BAAQ;;;ACxBf,IAAM,kBAAN,cAA8B,oBAAY;AAAA,EAEzC,YAAa,OAAO,SAAS,MAAM,YAAY,MAAO;AAErD,UAAO,OAAO,QAAQ,SAAU;AAEhC,SAAK,oBAAoB;AAAA,EAE1B;AAAA,EAEA,eAA4B;AAE3B,WAAO;AAAA,EAER;AAAA,EAEA,iBAAkB,SAAU;AAtB7B;AAwBE,WAAO,GAAI,KAAK,IAAK,QAAO,aAAQ,QAAQ,uBAAhB,mBAAoC,SAAQ,EAAG;AAAA,EAE5E;AAAA,EAEA,UAAW,SAAU;AAEpB,UAAM,aAAa,QAAQ,kBAAmB,IAAK;AAEnD,UAAM,SAAS,KAAK,UAAU,QAAQ,QAAQ,UAAU,IAAI,0BAAkB;AAC9E,QAAI,YAAY,KAAK,aAAa,QAAQ,QAAQ;AAElD,SAAK,uCAAW,YAAW,MAAO;AAEjC,YAAMC,WAAU,KAAK;AAErB,kBAAY,QAAQ,QAAQ,kBAAkB,QAAQ,QAAQ,gBAAgB,KAAM,EAAE,SAAAA,UAAS,UAAU,GAAG,OAAQ,IAAI;AAAA,IAEzH;AAEA,eAAW,SAAS;AACpB,eAAW,YAAY;AAAA,EAExB;AAAA,EAEA,SAAU,SAAS,QAAS;AAE3B,UAAM,EAAE,QAAQ,UAAU,IAAI,QAAQ,kBAAmB,IAAK;AAE9D,UAAMA,WAAU,KAAK;AAErB,QAAK,CAAEA,YAAWA,SAAQ,kBAAkB,MAAO;AAElD,YAAM,IAAI,MAAO,gDAAiD;AAAA,IAEnE;AAEA,UAAM,kBAAkB,oBAAY,UAAU,SAAS,KAAM,MAAM,SAAS,aAAc;AAE1F,QAAK,WAAW,WAAY;AAE3B,aAAO,kBAAkB;AAAA,IAE1B,WAAY,QAAQ,YAAa,MAAO,GAAI;AAE3C,aAAO;AAAA,IAER,OAAO;AAEN,YAAM,WAAW,QAAQ,gBAAiB,IAAK;AAE/C,UAAI,UAAU,SAAS;AAEvB,UAAK,YAAY,UAAa,QAAQ,QAAQ,aAAa,OAAQ;AAElE,cAAM,eAAe,WAAY,MAAO;AACxC,cAAM,SAAS,KAAM,OAAQ,aAAa,CAAE,GAAG,aAAa,EAAG;AAC/D,cAAM,YAAY,OAAO,MAAO,SAAS,MAAO;AAEhD,YAAK,WAAY;AAEhB,gBAAM,eAAe,UAAU,MAAO,SAAS,OAAQ;AAEvD,oBAAU,QAAQ,oBAAqB,iBAAiB,WAAW,YAAa;AAAA,QAEjF,OAAO;AAEN,oBAAU,QAAQ,eAAgB,iBAAiB,SAAU;AAAA,QAE9D;AAEA,iBAAS,UAAU;AAAA,MAEpB;AAEA,aAAO,QAAQ,OAAQ,SAAS,QAAQ,MAAO;AAAA,IAEhD;AAAA,EAED;AAED;AAEA,IAAO,0BAAQ;;;AC1Ff,IAAM,eAAN,cAA2B,aAAK;AAAA,EAE/B,YAAa,cAAe;AAE3B,UAAO,MAAO;AAEd,SAAK,eAAe;AAIpB,UAAM,qBAAqB,OAAQ,aAAa,eAAe,OAAO,QAAQ,aAAa,KAAM;AAEjG,SAAK,qBAAqB,KAAM,QAAS,oBAAoB,aAAc,CAAE;AAAA,EAE9E;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,EAAE,mBAAmB,IAAI;AAI/B,UAAM,mBAAmB,IAAK,oBAAoB,aAAc,EAAE;AAIlE,UAAM,IAAI,KAAM,mBAAoB,CAAE,EAAE,KAAK,mBAAoB,CAAE,EAAE,KAAK,mBAAoB,CAAE,EAAE,GAAI;AAEtG,UAAM,oBAAoB,IAAK,aAAa,KAAM,IAAK,EAAG,CAAE,GAAG,EAAG,CAAE,CAAE,GAAG,IAAK,EAAG,CAAE,GAAG,EAAG,CAAE,CAAE,GAAG,IAAK,EAAG,CAAE,GAAG,EAAG,CAAE,CAAE,CAAE,CAAE;AAExH,UAAM,iBAAiB,IAAK,GAAG,iBAAkB,EAAE;AAInD,WAAQ,eAAe,gBAAiB,EAAE,MAAO,OAAQ;AACzD,WAAQ,aAAa,cAAe,EAAE,MAAO,OAAQ;AAAA,EAEtD;AAED;AAEA,IAAO,uBAAQ;;;ACvCf,IAAM,WAAW,IAAI,WAAY,CAAE,QAAQ,YAAa;AAEvD,QAAM,EAAE,OAAO,QAAQ,YAAY,mBAAmB,aAAa,IAAI;AAEvE,QAAM,WAAW,QAAS,cAAc,MAAM,CAAE;AAChD,QAAM,WAAW,QAAS,cAAc,MAAM,CAAE;AAChD,QAAM,WAAW,QAAS,cAAc,MAAM,CAAE;AAChD,QAAM,WAAW,QAAS,cAAc,MAAM,CAAE;AAIhD,QAAM,aAAa,IAAK,YAAY,aAAc;AAElD,QAAM,UAAU;AAAA,IACf,IAAK,IAAK,UAAU,UAAW,GAAG,OAAO,CAAE;AAAA,IAC3C,IAAK,IAAK,UAAU,UAAW,GAAG,OAAO,CAAE;AAAA,IAC3C,IAAK,IAAK,UAAU,UAAW,GAAG,OAAO,CAAE;AAAA,IAC3C,IAAK,IAAK,UAAU,UAAW,GAAG,OAAO,CAAE;AAAA,EAC5C;AAEA,QAAM,eAAe,IAAK,mBAAmB,OAAQ,EAAE;AAIvD,MAAI,aAAa;AAAA,IAChB,IAAK,OAAO,GAAG,QAAS;AAAA,IACxB,IAAK,OAAO,GAAG,QAAS;AAAA,IACxB,IAAK,OAAO,GAAG,QAAS;AAAA,IACxB,IAAK,OAAO,GAAG,QAAS;AAAA,EACzB;AAEA,eAAa,IAAK,IAAK,mBAAmB,UAAW,GAAG,UAAW;AAEnE,QAAM,aAAa,mBAAoB,YAAY,WAAY,EAAE;AAIjE,SAAQ,eAAe,YAAa,EAAE,MAAO,OAAQ;AACrD,SAAQ,aAAa,UAAW,EAAE,MAAO,OAAQ;AAElD,CAAE;AAEF,IAAM,eAAN,cAA2B,aAAK;AAAA,EAE/B,YAAa,aAAc;AAE1B,UAAO,MAAO;AAEd,SAAK,cAAc;AAEnB,SAAK,aAAa,eAAe;AAIjC,SAAK,gBAAgB,UAAW,aAAa,OAAQ;AACrD,SAAK,iBAAiB,UAAW,cAAc,MAAO;AAEtD,SAAK,iBAAiB,QAAS,KAAM,YAAY,UAAW,CAAE;AAC9D,SAAK,wBAAwB,QAAS,KAAM,YAAY,iBAAkB,CAAE;AAC5E,SAAK,mBAAmB,OAAQ,YAAY,SAAS,cAAc,QAAQ,YAAY,SAAS,MAAM,MAAO;AAAA,EAE9G;AAAA,EAEA,SAAU,SAAU;AAEnB,aAAS,KAAM;AAAA,MACd,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,YAAY,KAAK;AAAA,MACjB,mBAAmB,KAAK;AAAA,MACxB,cAAc,KAAK;AAAA,IACpB,GAAG,OAAQ;AAAA,EAEZ;AAAA,EAEA,SAAS;AAER,SAAK,YAAY,SAAS,OAAO;AAAA,EAElC;AAED;AAEA,IAAO,uBAAQ;;;ACjGf,IAAM,YAAN,cAAwB,aAAK;AAAA,EAE5B,YAAaC,MAAKC,MAAM;AAEvB,UAAM;AAEN,SAAK,MAAMD;AACX,SAAK,MAAMC;AAAA,EAEZ;AAAA,EAEA,kBAAkB;AAEjB,UAAMD,OAAM,KAAK;AAEjB,QAAIE,UAAS;AAEb,QAAKF,KAAI;AAAY,MAAAE,UAAS;AAAA,aACpBF,KAAI;AAAY,MAAAE,UAAS;AAAA,aACzBF,KAAI;AAAY,MAAAE,UAAS;AAAA,aACzBF,KAAI;AAAU,MAAAE,UAAS;AAEjC,WAAOA;AAAA,EAER;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAS,QAAQ,OAAO,oBAAoB,OAAS,QAAQ,kBAAmB,KAAK,gBAAgB,CAAE,IAAI;AAAA,EAE5G;AAAA,EAEA,UAAW,SAAU;AAEpB,UAAM,EAAE,KAAAF,MAAK,KAAAC,KAAI,IAAI;AACrB,UAAM,EAAE,QAAQ,SAAS,IAAI;AAE7B,QAAI,SAAS;AAEb,QAAK,OAAO,oBAAoB,MAAO;AAEtC,YAAM,eAAe,KAAK,gBAAgB;AAC1C,YAAM,gBAAgB,SAAS,KAAK;AAEpC,YAAMC,UAAS,eAAe,OAAO;AACrC,YAAM,QAAQ,IAAI,aAAcA,OAAO;AAEvC,YAAM,oBAAoB,SAAS,aAAc,aAAc;AAE/D,UAAK,sBAAsB,UAAa,kBAAkB,MAAM,SAASA,SAAS;AAEjF,YAAK,iBAAiB,GAAI;AAEzB,mBAAU,IAAI,GAAG,IAAIA,SAAQ,KAAO;AAEnC,kBAAO,CAAE,IAAI,UAAU,KAAMF,MAAKC,MAAK,KAAK,OAAO,CAAE;AAAA,UAEtD;AAAA,QAED,WAAYD,KAAI,SAAU;AAEzB,mBAAU,IAAI,GAAG,IAAIE,SAAQ,KAAK,GAAI;AAErC,kBAAO,CAAE,IAAI,UAAU,KAAMF,KAAI,GAAGC,KAAI,GAAG,KAAK,OAAO,CAAE;AACzD,kBAAO,IAAI,CAAE,IAAI,UAAU,KAAMD,KAAI,GAAGC,KAAI,GAAG,KAAK,OAAO,CAAE;AAC7D,kBAAO,IAAI,CAAE,IAAI,UAAU,KAAMD,KAAI,GAAGC,KAAI,GAAG,KAAK,OAAO,CAAE;AAAA,UAE9D;AAAA,QAED,OAAO;AAEN,mBAAU,IAAI,GAAG,IAAIC,SAAQ,KAAO;AAEnC,kBAAM,QAAQ,IAAI;AAElB,kBAAM,WAAWF,KAAI,aAAc,KAAM;AACzC,kBAAM,WAAWC,KAAI,aAAc,KAAM;AAEzC,kBAAO,CAAE,IAAI,UAAU,KAAM,UAAU,UAAU,KAAK,OAAO,CAAE;AAAA,UAEhE;AAAA,QAED;AAEA,iBAAS,aAAc,eAAe,IAAI,yBAA0B,OAAO,YAAa,CAAE;AAE1F,iBAAS,QAAQ;AAAA,MAElB;AAEA,eAAS,UAAW,eAAe,QAAQ,kBAAmB,YAAa,CAAE;AAAA,IAE9E,OAAO;AAEN,eAAS,MAAO,CAAE;AAAA,IAEnB;AAEA,WAAO;AAAA,EAER;AAED;AAEA,IAAO,oBAAQ;;;ACzGf,IAAM,gBAAgB,IAAI,WAAY,CAAE,EAAE,OAAAE,OAAM,MAAO;AAEtD,QAAM,OAAO,KAAM,QAAQ,QAAQ,MAAO;AAE1C,SAAO,IAAKA,QAAO,IAAK;AAEzB,CAAE;AAEF,IAAM,iBAAiB,IAAI,WAAY,CAAE,EAAE,OAAAA,QAAO,WAAW,MAAO;AAEnE,QAAM,gBAAgB,cAAc,KAAM,EAAE,OAAAA,OAAM,CAAE;AAEpD,SAAO,IAAK,eAAeA,QAAO,UAAW;AAE9C,CAAE;AAEF,IAAM,eAAe,IAAI,WAAY,CAAE,EAAE,OAAAA,QAAO,WAAW,MAAO;AAEjE,QAAM,UAAU,IAAK,IAAKA,OAAM,GAAGA,OAAM,GAAGA,OAAM,CAAE,GAAG,CAAI;AAE3D,QAAM,KAAK,IAAKA,OAAM,GAAG,IAAKA,OAAM,GAAGA,OAAM,CAAE,CAAE;AACjD,QAAM,MAAM,IAAK,IAAK,IAAI,OAAQ,GAAG,IAAK,IAAM,UAAW,CAAE;AAE7D,SAAO,IAAKA,OAAM,KAAK,KAAM,EAAG,GAAG,GAAI;AAExC,CAAE;AAEF,IAAM,UAAU,IAAI,WAAY,CAAE,EAAE,OAAAA,QAAO,WAAW,MAAO;AAE5D,QAAM,WAAW,KAAM,OAAO,OAAO,OAAO,UAAU,WAAW,WAAW,UAAU,WAAW,QAAS;AAC1G,QAAM,WAAW,KAAM,GAAK,QAAQ,OAAQ,GAAK,SAAS,SAAS,GAAK,QAAQ,MAAO;AAEvF,QAAM,MAAM,IAAK,UAAUA,MAAM;AAEjC,QAAMC,OAAM,IAAK,MAAO,IAAI,GAAG,IAAI,CAAE,GAAG,UAAW;AACnD,QAAM,SAAS,KAAM,IAAK,IAAK,IAAI,GAAG,IAAI,CAAE,GAAG,IAAK,IAAI,GAAG,IAAI,CAAE,CAAE,CAAE;AAErE,SAAO,IAAK,UAAU,KAAM,IAAI,GAAG,IAAK,QAAQ,IAAKA,IAAI,CAAE,GAAG,IAAK,QAAQ,IAAKA,IAAI,CAAE,CAAE,CAAE;AAE3F,CAAE;AAEF,IAAM,uBAAN,MAAM,6BAA4B,iBAAS;AAAA,EAM1C,YAAa,QAAQ,WAAW,iBAAiB,MAAO,CAAE,GAAI;AAE7D,UAAO,MAAO;AAEd,SAAK,SAAS;AAEd,SAAK,YAAY;AACjB,SAAK,iBAAiB;AAAA,EAEvB;AAAA,EAEA,YAAY;AAEX,UAAM,EAAE,QAAQ,WAAW,eAAe,IAAI;AAE9C,UAAM,aAAa,EAAE,OAAO,WAAW,YAAY,eAAe;AAElE,QAAI,aAAa;AAEjB,QAAK,WAAW,qBAAoB,YAAa;AAEhD,mBAAa,eAAe,KAAM,UAAW;AAAA,IAE9C,WAAY,WAAW,qBAAoB,UAAW;AAErD,mBAAa,aAAa,KAAM,UAAW;AAAA,IAE5C,WAAY,WAAW,qBAAoB,KAAM;AAEhD,mBAAa,QAAQ,KAAM,UAAW;AAAA,IAEvC,OAAO;AAEN,cAAQ,MAAO,GAAI,KAAK,IAAK,aAAc,KAAK,MAAO,kBAAmB;AAAA,IAE3E;AAEA,WAAO;AAAA,EAER;AAED;AA7CC,cAFK,sBAEE,cAAa;AACpB,cAHK,sBAGE,YAAW;AAClB,cAJK,sBAIE,OAAM;AAJd,IAAM,sBAAN;AAiDA,IAAO,8BAAQ;;;ACxFR,IAAM,iBAAiB,IAAI,WAAY,CAAE,WAAY;AAE3D,SAAO,OAAO;AAEf,CAAE;AAEK,IAAM,eAAe,IAAI,WAAY,CAAE,WAAY;AAEzD,QAAM,EAAE,MAAM,IAAI;AAElB,QAAM,MAAM,MAAM;AAElB,QAAM,IAAI,IAAK,IAAK,IAAK,MAAM,KAAK,KAAM,OAAQ,CAAE,GAAG,KAAM,GAAG,KAAM,KAAM,CAAE;AAC9E,QAAM,IAAI,IAAK,KAAK,KAAM;AAC1B,QAAM,SAAS,KAAM,cAAe,KAAK,KAAM,QAAU,CAAE,CAAE;AAE7D,QAAM,YAAY,IAAK,GAAG,GAAG,MAAO;AAEpC,SAAO,KAAM,WAAW,MAAM,CAAE;AAEjC,CAAE;AAEF,IAAM,cAAc;AAAA,EACnB;AAAA,EACA;AACD;AAEA,IAAM,kBAAN,MAAM,wBAAuB,aAAS;AAAA,EAKrC,YAAa,QAAQ,MAAO;AAE3B,UAAO,MAAO;AAEd,SAAK,SAAS;AAEd,SAAK,OAAO;AAAA,EAEb;AAAA,EAEA,aAAc,UAAW;AAExB,QAAI,SAAS;AAEb,QAAK,aAAa,gBAAiB;AAElC,eAAS;AAAA,IAEV,WAAY,aAAa,cAAe;AAEvC,eAAS;AAAA,IAEV;AAEA,SAAK,SAAS,aAAa;AAE3B,WAAO;AAAA,EAER;AAAA,EAEA,YAAY;AAEX,UAAM,SAAS,KAAK;AACpB,UAAM,OAAO,KAAK;AAElB,QAAI,aAAa;AAEjB,QAAK,WAAW,gBAAe,kBAAmB;AAEjD,YAAM,uBAAuB,YAAa,MAAO;AAEjD,mBAAa,qBAAqB,KAAM;AAAA,QACvC,OAAO;AAAA,MACR,CAAE;AAAA,IAEH,OAAO;AAEN,mBAAa;AAAA,IAEd;AAEA,WAAO;AAAA,EAER;AAED;AA1DC,cAFK,iBAEE,oBAAmB;AAC1B,cAHK,iBAGE,kBAAiB;AAHzB,IAAM,iBAAN;AA8DA,IAAO,yBAAQ;;;ACrFf,IAAM,wBAAwB,IAAI,WAAY,CAAE,WAAY;AAE3D,QAAM,EAAE,SAAS,WAAW,MAAM,IAAAC,IAAG,IAAI;AAEzC,QAAM,KAAK,KAAM,QAAQ,GAAI;AAC7B,QAAM,KAAK,KAAM,QAAQ,GAAI;AAC7B,QAAM,MAAM,KAAMA,IAAG,EAAG;AACxB,QAAM,MAAM,KAAMA,IAAG,EAAG;AAExB,QAAM,IAAI;AAEV,QAAM,SAAS,MAAO,IAAI,CAAE;AAC5B,QAAM,SAAS,MAAO,GAAG,EAAG;AAE5B,QAAM,IAAI,IAAK,IAAK,QAAQ,IAAI,CAAE,GAAG,IAAK,QAAQ,IAAI,CAAE,CAAE;AAC1D,QAAM,IAAI,IAAK,IAAK,QAAQ,IAAI,CAAE,GAAG,IAAK,QAAQ,IAAI,CAAE,CAAE;AAE1D,QAAM,MAAM,IAAK,IAAK,GAAG,CAAE,GAAG,IAAK,GAAG,CAAE,CAAE;AAC1C,QAAM,QAAQ,IAAK,eAAe,YAAa,GAAI,CAAE;AAErD,SAAO,UAAW,IAAK,IAAK,GAAG,IAAK,KAAK,GAAG,KAAM,CAAE,GAAG,IAAK,GAAG,IAAK,KAAK,GAAG,KAAM,CAAE,GAAG,IAAK,GAAG,KAAK,CAAE,CAAE,CAAE;AAE3G,CAAE;AAEF,IAAM,gBAAN,cAA4B,iBAAS;AAAA,EAEpC,YAAa,MAAM,YAAY,MAAO;AAErC,UAAO,MAAO;AAEd,SAAK,OAAO;AACZ,SAAK,YAAY;AAEjB,SAAK,gBAAgB;AAAA,EAEtB;AAAA,EAEA,YAAY;AAEX,UAAM,EAAE,eAAe,UAAU,IAAI;AAErC,UAAM,WAAW,IAAK,KAAK,MAAM,CAAI;AACrC,QAAIC,aAAY,IAAK,UAAU,CAAI;AAEnC,QAAK,cAAc,MAAO;AAEzB,YAAM,iBAAiB,IAAKA,WAAU,IAAI,SAAU;AACpD,MAAAA,aAAY,KAAM,gBAAgBA,WAAU,CAAE;AAAA,IAE/C;AAEA,QAAI,aAAa;AAEjB,QAAK,kBAAkB,sBAAuB;AAE7C,YAAM,mBAAmB,IAAK,IAAI,kBAAW,kBAAU,aAAc,GAAGA,UAAU;AAElF,mBAAa,UAAW,gBAAiB;AAAA,IAE1C,WAAY,kBAAkB,uBAAwB;AAErD,mBAAa,sBAAsB,KAAM;AAAA,QACxC,SAAS;AAAA,QACT,WAAW;AAAA,QACX,MAAMA;AAAA,QACN,IAAI,GAAG;AAAA,MACR,CAAE;AAAA,IAEH;AAEA,WAAO;AAAA,EAER;AAED;AAEA,IAAO,wBAAQ;;;AC/ER,IAAM,wBAAwB,IAAI,WAAY,CAAE,EAAE,OAAAC,QAAO,SAAS,MAAO;AAE/E,SAAO,IAAKA,QAAO,QAAS;AAE7B,CAAE;AAEF,IAAM,kBAAN,cAA8B,aAAS;AAAA,EAEtC,YAAaC,cAAa,eAAe,MAAO,CAAE,GAAG,YAAY,MAAO;AAEvE,UAAO,MAAO;AAEd,SAAK,cAAcA;AAEnB,SAAK,eAAe;AACpB,SAAK,YAAY;AAAA,EAElB;AAAA,EAEA,UAAW,SAAU;AAEpB,UAAM,YAAY,KAAK,SAAS,QAAQ,QAAQ;AAEhD,UAAMA,eAAc,KAAK;AACzB,UAAM,oBAAoB,EAAE,UAAU,KAAK,cAAc,OAAO,UAAU;AAE1E,QAAI,aAAa;AAEjB,QAAKA,iBAAgB,mBAAoB;AAExC,mBAAa,sBAAsB,KAAM,iBAAkB;AAAA,IAE5D,OAAO;AAEN,mBAAa,KAAK;AAAA,IAEnB;AAEA,WAAO;AAAA,EAER;AAED;AAEA,IAAO,0BAAQ;;;AChDf,IAAM,eAAN,cAA2B,aAAK;AAAA,EAE/B,cAAc;AAEb,UAAO,MAAO;AAAA,EAEf;AAAA,EAEA,WAAwB;AAEvB,YAAQ,KAAM,oBAAqB;AAAA,EAEpC;AAED;AAEA,IAAO,uBAAQ;;;ACff,IAAM,aAAa,oBAAI,QAAQ;AAE/B,IAAM,aAAa,CAAEC,YAAY;AAEhC,SAAOA,QAAO,KAAM,CAAE,GAAG,MAAO,EAAE,KAAK,EAAE,EAAG;AAE7C;AAEA,IAAM,aAAN,cAAyB,aAAK;AAAA,EAE7B,YAAa,aAAa,CAAC,GAAI;AAE9B,UAAO,MAAO;AAEd,SAAK,aAAa;AAElB,SAAK,QAAQ;AAAA,EAEd;AAAA,EAEA,IAAI,WAAW;AAEd,WAAO,KAAK,WAAW,SAAS;AAAA,EAEjC;AAAA,EAEA,UAAW,SAAU;AAEpB,UAAM,aAAa,KAAK;AAExB,eAAY,aAAa,YAAa;AAErC,gBAAU,MAAO,OAAQ;AAAA,IAE1B;AAAA,EAED;AAAA,EAEA,QAAS,SAAU;AAElB,QAAK,KAAK,UAAU,MAAO;AAE1B,UAAI,OAAO;AAEX,YAAM,aAAa,KAAK;AAExB,iBAAY,aAAa,YAAa;AAErC,gBAAQ,UAAU,QAAS,OAAQ,IAAI;AAAA,MAExC;AAEA,WAAK,QAAQ;AAAA,IAEd;AAEA,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,mBAAoB,MAAO;AAE1B,UAAM,aAAa,KAAK;AAExB,eAAY,aAAa,YAAa;AAErC,UAAK,UAAU,MAAM,SAAS,MAAO;AAEpC,eAAO;AAAA,MAER;AAAA,IAED;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,WAAYA,SAAS;AAEpB,UAAM,aAAa,CAAC;AAEpB,IAAAA,UAAS,WAAYA,OAAO;AAE5B,eAAY,SAASA,SAAS;AAE7B,UAAI,YAAY,KAAK,mBAAoB,MAAM,IAAK;AAEpD,UAAK,cAAc,MAAO;AAEzB,cAAM,aAAa,MAAM;AACzB,cAAM,iBAAiB,WAAW,IAAK,UAAW,IAAI,WAAW,IAAK,UAAW,IAAI;AAErF,oBAAY,IAAI,eAAgB,KAAM;AAAA,MAEvC;AAEA,iBAAW,KAAM,SAAU;AAAA,IAE5B;AAEA,SAAK,aAAa;AAClB,SAAK,QAAQ;AAEb,WAAO;AAAA,EAER;AAAA,EAEA,OAAO,aAAc,YAAY,gBAAiB;AAEjD,eAAW,IAAK,YAAY,cAAe;AAAA,EAE5C;AAED;AAEA,IAAO,qBAAQ;;;ACpHf,IAAM,sBAAN,cAAkC,oBAAY;AAAA,EAE7C,YAAa,MAAM,oBAAoB,MAAO;AAE7C,UAAO,IAAK;AAEZ,SAAK,oBAAoB;AAAA,EAE1B;AAAA,EAEA,cAA2B;AAE1B,WAAO;AAAA,EAER;AAAA,EAEA,UAAW,SAAU;AAEpB,UAAM,EAAE,kBAAkB,IAAI;AAE9B,UAAMC,WAAU,KAAK,UAAU,CAAC;AAChC,UAAM,aAAa,QAAQ,kBAAmB,IAAK;AAEnD,UAAM,gBAAgB,KAAM,KAAK,CAAE,GAClC,iBAAiB,KAAM,KAAK,CAAE,GAC9B,kBAAkB,KAAM,KAAK,CAAE,GAC/B,mBAAmB,KAAM,KAAK,CAAE,GAChC,QAAQ,IAAK,eAAe,gBAAgB,iBAAiB,gBAAiB;AAE/E,UAAM,iBAAiB;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,UAAM,WAAW;AAAA,MAChB,UAAU,KAAM,KAAK,CAAE;AAAA,MACvB,YAAY,KAAM,KAAK,CAAE;AAAA,MACzB,eAAe,KAAM,KAAK,CAAE;AAAA,MAC5B,kBAAkB,KAAM,MAAO,CAAE,CAAE;AAAA,IACpC;AAEA,WAAO,OAAQ,YAAY,gBAAgB,QAAS;AACpD,WAAO,OAAQA,UAAS,QAAS;AAEjC,IAAAA,SAAQ,iBAAiB;AACzB,IAAAA,SAAQ,oBAAoB,qBAAqBA,SAAQ;AAEzD,QAAK,uDAAmB;AAAkB,wBAAkB,gBAAgB,KAAMA,QAAQ;AAC1F,QAAK,uDAAmB;AAAmB,wBAAkB,iBAAiB,KAAMA,QAAQ;AAC5F,QAAK,uDAAmB;AAAmB,wBAAkB,iBAAiB,KAAMA,QAAQ;AAE5F,WAAO,MAAM,UAAW,OAAQ;AAAA,EAEjC;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,EAAE,SAAAA,SAAQ,IAAI;AACpB,UAAM,OAAO,KAAK,YAAa,OAAQ;AAEvC,UAAM,SAAU,SAAS,IAAK;AAE9B,WAAOA,SAAQ,eAAe,MAAM,MAAO,SAAS,IAAK;AAAA,EAE1D;AAED;AAEA,IAAO,8BAAQ;;;ACvEf,IAAM,eAAN,cAA2B,iBAAS;AAAA,EAEnC,cAAc;AAEb,UAAO,MAAO;AAAA,EAEf;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,IAAI,UAAW,KAAM,sBAAsB,GAAG,GAAG,OAAQ,sBAAsB,CAAE,CAAE,CAAE;AAC3F,UAAM,IAAI,MAAO,uBAAuB,CAAE;AAE1C,UAAMC,MAAK,IAAK,IAAK,KAAM,IAAK,GAAG,qBAAsB,GAAG,IAAK,GAAG,qBAAsB,CAAE,GAAG,KAAM,GAAG,GAAI;AAE5G,WAAOA,IAAG,MAAO,SAAS,KAAK,YAAa,OAAQ,CAAE;AAAA,EAEvD;AAED;AAEA,IAAO,uBAAQ;;;ACrBf,IAAM,kBAAN,cAA8B,oBAAY;AAAA,EAEzC,YAAaC,UAAU;AAEtB,UAAO,CAAE;AAET,SAAK,UAAUA;AAEf,SAAK,aAAa,eAAe;AAAA,EAElC;AAAA,EAEA,SAAS;AAfV;AAiBE,UAAM,SAAS,KAAK,QAAQ;AAC5B,UAAM,QAAU,UAAU,OAAO,SAAS,MAAQ,YAAQ,CAAE,MAAV,mBAAa,UAAS,OAAQ,CAAE,IAAM,KAAK,QAAQ;AAErG,SAAK,+BAAO,WAAU,QAAY;AAEjC,YAAM,EAAE,OAAO,OAAO,IAAI;AAE1B,WAAK,QAAQ,KAAK,KAAM,KAAK,IAAK,OAAO,MAAO,CAAE;AAAA,IAEnD;AAAA,EAED;AAED;AAEA,IAAO,0BAAQ;;;AC7Bf,IAAM,aAAN,MAAM,mBAAkB,oBAAY;AAAA,EAMnC,YAAa,QAAQ,WAAU,OAAO,QAAQ,GAAG,QAAQ,GAAI;AAE5D,UAAO,KAAM;AAEb,SAAK,QAAQ;AACb,SAAK,QAAQ;AAEb,SAAK,aAAa,eAAe;AAAA,EAElC;AAAA,EAEA,OAAQ,OAAQ;AAEf,UAAM,QAAQ,KAAK;AACnB,UAAM,QAAQ,KAAK;AAEnB,QAAK,UAAU,WAAU,OAAQ;AAEhC,WAAK,SAAS,MAAM,YAAY;AAAA,IAEjC,WAAY,UAAU,WAAU,OAAQ;AAEvC,WAAK,QAAQ,MAAM,YAAY;AAAA,IAEhC,OAAO;AAIN,WAAK,QAAQ,MAAM,OAAO;AAAA,IAE3B;AAAA,EAED;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,UAAW,IAAK;AAEtB,SAAK,QAAQ,KAAK;AAClB,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAa,IAAK;AAExB,SAAK,QAAQ,KAAK;AAClB,SAAK,QAAQ,KAAK;AAAA,EAEnB;AAED;AAxDC,cAFK,YAEE,SAAQ;AACf,cAHK,YAGE,UAAS;AAChB,cAJK,YAIE,SAAQ;AAJhB,IAAM,YAAN;AA4DA,IAAO,oBAAQ;;;AC3Df,IAAM,WAAN,MAAM,iBAAgB,aAAK;AAAA,EAO1B,YAAa,SAAS,SAAQ,MAAM,WAAW,IAAI,kBAAU,GAAI;AAEhE,UAAM;AAEN,SAAK,SAAS;AACd,SAAK,WAAW;AAAA,EAEjB;AAAA,EAEA,YAAa,SAAU;AAEtB,WAAO,KAAK,SAAS,YAAa,OAAQ;AAAA,EAE3C;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,SAAS,KAAK;AACpB,UAAM,WAAW,KAAK;AAEtB,QAAI,aAAa;AAEjB,QAAK,WAAW,SAAQ,MAAO;AAE9B,mBAAa,IAAK,IAAK,IAAK,IAAK,IAAK,UAAU,IAAI,GAAG,KAAK,KAAK,CAAE,CAAE,GAAG,GAAG,GAAG,GAAG;AAAA,IAElF,WAAY,WAAW,SAAQ,QAAS;AAEvC,mBAAa,MAAO,MAAO,QAAS,CAAE;AAAA,IAEvC,WAAY,WAAW,SAAQ,UAAW;AAEzC,mBAAa,IAAK,IAAK,GAAG,IAAK,MAAO,IAAK,UAAU,GAAG,CAAE,GAAG,CAAE,CAAE,CAAE;AAAA,IAEpE,WAAY,WAAW,SAAQ,UAAW;AAEzC,mBAAa,MAAO,QAAS;AAAA,IAE9B;AAEA,WAAO,WAAW,MAAO,OAAQ;AAAA,EAElC;AAAA,EAEA,UAAW,MAAO;AAEjB,UAAM,UAAW,IAAK;AAEtB,SAAK,SAAS,KAAK;AAAA,EAEpB;AAAA,EAEA,YAAa,MAAO;AAEnB,UAAM,YAAa,IAAK;AAExB,SAAK,SAAS,KAAK;AAAA,EAEpB;AAED;AAjEC,cAFK,UAEE,QAAO;AACd,cAHK,UAGE,UAAS;AAChB,cAJK,UAIE,YAAW;AAClB,cALK,UAKE,YAAW;AALnB,IAAM,UAAN;AAqEA,IAAO,kBAAQ;;;ACtEf,IAAM,eAAN,cAA2B,iBAAS;AAAA,EAEnC,YAAa,QAAQ,cAAc,aAAa,KAAM,GAAG,GAAI;AAE5D,UAAO,MAAO;AAEd,SAAK,SAAS;AACd,SAAK,eAAe;AACpB,SAAK,aAAa;AAAA,EAEnB;AAAA,EAEA,YAAY;AAEX,UAAM,EAAE,QAAQ,cAAc,WAAW,IAAI;AAE7C,UAAM,WAAW,IAAK,YAAa;AACnC,UAAM,WAAW,IAAK,YAAa;AAEnC,WAAO;AAAA,MACN,IAAK,IAAK,IAAK,UAAU,IAAK,OAAO,GAAG,WAAW,CAAE,CAAE,GAAG,IAAK,UAAU,IAAK,OAAO,GAAG,WAAW,CAAE,CAAE,CAAE,GAAG,WAAW,CAAE;AAAA,MACzH,IAAK,IAAK,IAAK,UAAU,IAAK,OAAO,GAAG,WAAW,CAAE,CAAE,GAAG,IAAK,UAAU,IAAK,OAAO,GAAG,WAAW,CAAE,CAAE,CAAE,GAAG,WAAW,CAAE;AAAA,IAC1H;AAAA,EAED;AAED;AAEA,IAAO,uBAAQ;;;ACvBf,IAAM,oBAAN,cAAgC,aAAK;AAAA,EAEpC,YAAa,WAAW,SAAS,IAAI,eAAO,GAAG,YAAY,IAAI,kBAAW,CAAE,GAAI;AAE/E,UAAO,MAAO;AAEd,SAAK,YAAY;AACjB,SAAK,SAAS;AACd,SAAK,YAAY;AAAA,EAElB;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,QAAQ,KAAK;AACnB,UAAMC,MAAK,KAAK;AAChB,UAAM,QAAQ,KAAK;AAEnB,UAAM,MAAM,IAAI,kBAAW,CAAE;AAE7B,UAAM,QAAQ,IAAI,kBAAW,OAAO,GAAI;AACxC,UAAM,SAAS,IAAI,kBAAW,OAAO,GAAI;AAEzC,UAAM,QAAQ,IAAI,qBAAc,KAAK,OAAO,MAAO;AAEnD,UAAM,aAAa,IAAI,iBAAU,iBAAS,OAAO,IAAI,iBAAU,iBAAS,KAAK,OAAO,KAAM,CAAE;AAE5F,UAAM,WAAW,IAAI,qBAAc,KAAK,YAAY,GAAI;AAExD,UAAM,OAAO,IAAI,iBAAU,iBAAS,KAAK,YAAY,KAAM;AAC3D,UAAM,MAAM,IAAI,iBAAU,iBAAS,MAAM,IAAI,qBAAc,KAAK,UAAU,KAAM,CAAE;AAClF,UAAM,SAAS,IAAI,qBAAc,KAAK,QAAQ,GAAI;AAElD,UAAM,QAAQ,IAAI,qBAAc,KAAK,KAAK,KAAM;AAEhD,UAAM,gBAAgB,IAAI,iBAAU;AAAA,MACnC,IAAI,qBAAc,KAAK,MAAM,IAAI,kBAAW,OAAO,GAAI,CAAE;AAAA,MACzD,IAAI,qBAAc,KAAK,QAAQ,IAAI,kBAAW,OAAO,GAAI,CAAE;AAAA,IAC5D,CAAE;AAEF,UAAM,UAAU,IAAI,qBAAc,KAAKA,KAAI,KAAM;AACjD,UAAM,UAAU,IAAI,qBAAc,KAAK,SAAS,aAAc;AAE9D,WAAO,QAAQ,MAAO,SAAS,KAAK,YAAa,OAAQ,CAAE;AAAA,EAE5D;AAED;AAEA,IAAO,4BAAQ;;;ACtDf,IAAM,oBAAoB,IAAI,WAAY,CAAE,WAAY;AAEvD,QAAMC,MAAK,IAAK,OAAO,IAAI,CAAI;AAE/B,QAAM,KAAK,MAAOA,IAAG,CAAE;AACvB,QAAM,KAAK,MAAOA,IAAG,CAAE;AACvB,QAAM,SAAS,IAAK,IAAK,IAAI,EAAG,GAAG,CAAI;AAEvC,SAAO,KAAM,MAAO;AAErB,CAAE;AAEF,IAAM,cAAN,cAA0B,aAAK;AAAA,EAE9B,YAAa,SAAS,GAAG,GAAI;AAE5B,UAAO,OAAQ;AAEf,SAAK,SAAS;AAAA,EAEf;AAAA,EAEA,SAAU,SAAU;AAEnB,WAAO,kBAAkB,KAAM,EAAE,IAAI,KAAK,OAAO,CAAE,EAAE,MAAO,OAAQ;AAAA,EAErE;AAED;AAEA,IAAO,sBAAQ;;;AC9Bf,IAAM,UAAN,cAAsB,aAAK;AAAA,EAE1B,YAAa,WAAW,YAAa;AAEpC,UAAO,OAAQ;AAEf,SAAK,YAAY;AAEjB,SAAK,YAAY;AACjB,SAAK,aAAa;AAAA,EAEnB;AAAA,EAEA,IAAK,YAAa;AAEjB,WAAO,IAAI,iBAAU,iBAAS,KAAK,YAAY,KAAK,WAAW,IAAK;AAAA,EAErE;AAAA,EAEA,SAAU,SAAU;AAEnB,WAAO,KAAK,WAAW,MAAO,SAAS,OAAQ;AAAA,EAEhD;AAED;AAEA,IAAO,kBAAQ;;;AC3Bf,IAAM,eAAN,cAA2B,gBAAQ;AAAA,EAElC,YAAa,WAAW,UAAU,SAAU;AAE3C,UAAO,SAAU;AAEjB,SAAK,iBAAiB;AAEtB,SAAK,WAAW;AAChB,SAAK,UAAU;AAAA,EAEhB;AAAA,EAEA,SAAU,SAAU;AAEnB,SAAK,aAAa,WAAY,KAAK,UAAU,KAAK,SAAS,OAAQ,aAAa,CAAE,CAAE;AAEpF,WAAO,MAAM,SAAU,OAAQ;AAAA,EAEhC;AAED;AAEA,IAAO,uBAAQ;;;ACxBf,IAAM,YAAY,IAAI,WAAY,CAAE,WAAY;AAE/C,QAAM,EAAE,IAAI,KAAK,MAAM,IAAI;AAO3B,QAAM,UAAU,KAAM,IAAK,IAAK,IAAK,UAAW,KAAM,GAAG,OAAQ,GAAG,KAAM,CAAE;AAE5E,SAAO,IAAK,IAAK,IAAI,IAAK,GAAK,OAAQ,CAAE,GAAG,IAAK,KAAK,OAAQ,CAAE;AAEjE,CAAE;AAEF,IAAO,oBAAQ;;;ACbf,IAAM,wBAAwB,IAAI,WAAY,CAAE,WAAY;AAE3D,QAAM,EAAE,OAAO,OAAO,OAAAC,OAAM,IAAI;AAEhC,QAAM,KAAK,KAAM,KAAM;AAEvB,QAAM,KAAK,IAAK,OAAO,KAAM,IAAK,IAAI,IAAK,IAAK,GAAK,EAAG,GAAG,KAAMA,MAAM,CAAE,CAAE,CAAE,CAAE;AAC/E,QAAM,KAAK,IAAKA,QAAO,KAAM,IAAK,IAAI,IAAK,IAAK,GAAK,EAAG,GAAG,KAAM,KAAM,CAAE,CAAE,CAAE,CAAE;AAE/E,SAAO,IAAK,KAAK,IAAK,IAAK,IAAI,EAAG,GAAG,OAAQ,CAAE;AAEhD,CAAE;AAEF,IAAO,gCAAQ;;;ACZf,IAAM,QAAQ,IAAI,WAAY,CAAE,WAAY;AAE3C,QAAM,EAAE,OAAO,MAAM,IAAI;AAEzB,QAAM,KAAK,KAAM,KAAM;AAEvB,QAAM,QAAQ,IAAK,IAAK,KAAM,KAAM,GAAG,IAAK,IAAI,CAAI,CAAE,GAAG,CAAI;AAE7D,SAAO,IAAK,IAAI,KAAK,IAAI,IAAK,IAAI,KAAM,KAAM,CAAE,CAAE;AAEnD,CAAE;AAEF,IAAO,gBAAQ;;;ACRf,IAAM,WAAW,IAAI,WAAY,CAAE,WAAY;AAE9C,QAAM,EAAE,gBAAgB,IAAI,KAAK,WAAAC,WAAU,IAAI;AAE/C,QAAM,QAAQ,KAAMA,UAAU;AAE9B,QAAM,UAAU,UAAW,IAAK,gBAAgB,qBAAsB,CAAE;AAExE,QAAM,QAAQ,SAAU,IAAK,uBAAuB,cAAe,CAAE;AAErE,QAAM,QAAQ,SAAU,IAAK,uBAAuB,OAAQ,CAAE;AAC9D,QAAM,QAAQ,SAAU,IAAK,uBAAuB,OAAQ,CAAE;AAE9D,QAAM,IAAI,kBAAU,KAAM,EAAE,IAAI,KAAK,MAAM,CAAE;AAE7C,QAAM,IAAI,8BAAsB,KAAM,EAAE,OAAO,OAAO,MAAM,CAAE;AAE9D,QAAM,IAAI,cAAM,KAAM,EAAE,OAAO,MAAM,CAAE;AAEvC,SAAO,IAAK,GAAG,IAAK,GAAG,CAAE,CAAE;AAE5B,CAAE;AAEF,IAAO,mBAAQ;;;AC9Bf,IAAM,eAAe,IAAI,WAAY,CAAE,WAAY;AAElD,SAAO,IAAK,IAAI,KAAK,IAAI,OAAO,YAAa;AAE9C,CAAE;AAEF,IAAO,uBAAQ;;;ACAf,IAAM,YAAY,IAAI,WAAY,CAAE,WAAY;AAE/C,QAAM,EAAE,WAAAC,WAAU,IAAI;AAEtB,QAAM,KAAK,KAAM,IAAK,SAAU,QAAS,KAAM;AAE/C,QAAM,KAAK,KAAM,GAAG,QAAQ,MAAM,KAAO;AAEzC,QAAM,IAAI,IAAK,IAAKA,YAAW,EAAG,GAAG,EAAG;AAExC,QAAM,OAAO,IAAK,IAAK,IAAK,IAAK,EAAE,GAAG,EAAE,CAAE,GAAG,KAAM,IAAK,OAAQ,KAAM,CAAE,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE;AAExF,QAAM,MAAM,IAAK,IAAK,KAAM,OAAQ,IAAK,GAAG,IAAK,GAAG,EAAE,EAAG;AAEzD,SAAO;AAER,CAAE;AAEF,IAAO,oBAAQ;;;ACtBf,IAAM,yBAAyB,IAAI,WAAY,CAAE,WAAY;AAE5D,QAAM,EAAE,eAAe,gBAAgB,cAAc,IAAI;AAKzD,QAAM,kBAAkB,IAAK,GAAK,IAAK,IAAK,eAAe,aAAc,GAAG,IAAK,CAAE;AAEnF,SAAO;AAAA,IACN,YAAa,gBAAgB,CAAE;AAAA,IAC/B,IAAK,iBAAiB,KAAM,SAAU,IAAK,GAAK,KAAM,IAAK,eAAe,cAAe,CAAE,CAAE,CAAE,CAAE,CAAE;AAAA,IACnG;AAAA,EACD;AAED,CAAE;AAEF,IAAO,iCAAQ;;;ACnBf,IAAM,uBAAuB,IAAI,WAAY,MAAM;AAElD,QAAM,MAAM,IAAK,IAAK,KAAM,cAAe,CAAE,GAAG,IAAK,KAAM,cAAe,CAAE,CAAE;AAC9E,QAAM,oBAAoB,IAAK,IAAK,IAAI,GAAG,IAAI,CAAE,GAAG,IAAI,CAAE;AAE1D,SAAO;AAER,CAAE;AAEF,IAAO,+BAAQ;;;ACRf,IAAM,eAAe,IAAI,WAAY,CAAE,WAAY;AAElD,QAAM,EAAE,WAAAC,WAAU,IAAI;AAEtB,QAAM,oBAAoB,6BAAqB,KAAK;AAEpD,MAAI,kBAAkB,IAAKA,YAAW,MAAO;AAC7C,oBAAkB,IAAK,iBAAiB,iBAAkB;AAC1D,oBAAkB,IAAK,iBAAiB,CAAI;AAE5C,SAAO;AAER,CAAE;AAEF,IAAO,uBAAQ;;;ACJf,IAAM,yBAAyB,CAAE,eAAe,cAAc,cAAc,MAAO;AAElF,QAAM,MAAM,kBAAU,KAAM,EAAE,UAAU,CAAE;AAE1C,QAAM,SAAS,IAAK,IAAK,eAAe,IAAI,CAAE,GAAG,IAAK,aAAa,IAAI,CAAE,CAAE;AAE3E,QAAM,MAAM,IAAK,IAAI,GAAG,IAAI,CAAE;AAC9B,QAAM,MAAM,IAAK,GAAK,GAAI;AAE1B,QAAM,OAAO,IAAK,eAAe,IAAK,IAAK,GAAK,aAAc,GAAG,QAAS,CAAE;AAC5E,QAAM,MAAM,IAAK,IAAK,QAAQ,IAAK,GAAG,IAAK,GAAK,IAAK,KAAK,IAAK,CAAE,CAAE;AAEnE,gBAAc,IAAK,MAAO;AAC1B,eAAa,IAAK,IAAK,KAAK,GAAI,CAAE;AAEnC;AAEA,IAAM,+BAA+B,IAAI,WAAY,CAAE,WAAY;AAElE,QAAM,EAAE,UAAU,eAAe,eAAe,IAAI;AAIpD,QAAM,mBAAmB,KAAM,KAAK,CAAE;AACtC,QAAM,kBAAkB,KAAM,KAAK,CAAE;AACrC,QAAM,2BAA2B,IAAK,eAAe,IAAI,KAAK,EAAG;AAEjE,yBAAwB,kBAAkB,eAAgB;AAE1D,QAAM,UAAU,IAAK,cAAc,IAAK,GAAK,IAAK,kBAAkB,eAAgB,CAAE,CAAE;AAExF,iBAAe,iBAAiB,IAAK,IAAK,UAAU,gBAAiB,CAAE;AACvE,iBAAe,iBAAiB,IAAK,IAAK,iBAAiB,wBAAyB,CAAE;AAEtF,iBAAe,gBAAgB,IAAK,IAAK,SAAS,wBAAyB,CAAE;AAE9E,CAAE;AAEF,IAAM,8BAA8B,IAAI,WAAY,CAAE,WAAY;AAEjE,QAAM,EAAE,YAAY,eAAe,IAAI;AAEvC,iBAAe,gBAAgB,IAAK,IAAK,YAAY,qBAAa,KAAM,EAAE,aAAa,CAAE,CAAE,CAAE;AAE9F,CAAE;AAEF,IAAM,qBAAqB,IAAI,WAAY,CAAE,WAAY;AAExD,QAAM,EAAE,gBAAgB,YAAY,eAAe,IAAI;AAEvD,QAAM,QAAQ,SAAU,IAAK,uBAAuB,cAAe,CAAE;AACrE,QAAM,aAAa,IAAK,OAAO,UAAW;AAE1C,iBAAe,cAAc,IAAK,IAAK,YAAY,qBAAa,KAAM,EAAE,cAAc,aAAa,IAAI,CAAE,CAAE,CAAE;AAE7G,iBAAe,eAAe,IAAK,IAAK,YAAY,iBAAS,KAAM,EAAE,gBAAgB,IAAI,eAAe,KAAK,GAAG,UAAU,CAAE,CAAE,CAAE;AAEjI,CAAE;AAEF,IAAM,+BAA+B,IAAI,WAAY,CAAE,EAAE,kBAAkB,eAAe,MAAO;AAEhG,QAAM,OAAO,IAAK,OAAO,gBAAiB;AAC1C,QAAM,QAAQ,KAAM,IAAK,IAAK,KAAQ,SAAU,GAAG,CAAI,CAAE;AAEzD,QAAM,SAAS,SAAU,IAAK,IAAK,IAAK,MAAM,KAAM,GAAG,CAAI,GAAG,gBAAiB,CAAE;AAEjF,iBAAe,gBAAgB,IAAK,gBAAiB;AAErD,iBAAe,iBAAiB,IAAK,MAAO;AAG7C,CAAE;AAEF,IAAM,wBAAwB;AAAA,EAC7B,QAAQ;AAAA,EACR,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,kBAAkB;AACnB;AAEA,IAAO,gCAAQ;;;AC7BR,IAAM,cAAc,UAAW,uBAAgB;AAE/C,IAAM,WAAW,UAAW,oBAAa;AAEzC,IAAM,gBAAgB,cAAe,yBAAkB;AAEvD,IAAM,WAAW,UAAW,oBAAa;AAIzC,IAAM,aAAa,UAAW,6BAAqB,4BAAoB,UAAW;AAClF,IAAM,WAAW,UAAW,6BAAqB,4BAAoB,QAAS;AAC9E,IAAM,MAAM,UAAW,6BAAqB,4BAAoB,GAAI;AAEpE,IAAM,aAAa,CAAE,MAAM,aAAc,WAAY,IAAI,uBAAgB,MAAM,WAAY,IAAK,CAAE,EAAE,aAAc,QAAS,CAAE;AAC7H,IAAM,YAAY,UAAW,qBAAc;AAC3C,IAAM,cAAc,CAAE,SAAS,UAAUC,WAAW,WAAY,IAAI,wBAAiB,SAAS,WAAY,QAAS,GAAG,WAAYA,MAAM,CAAE,CAAE;AAM5I,IAAM,SAAS,CAAEC,YAAY,WAAY,IAAI,mBAAW,EAAE,WAAYA,OAAO,CAAE;AAC/E,IAAM,kBAAkB,UAAW,2BAAoB;AAIvD,IAAM,WAAW,cAAe,oBAAa;AAC7C,IAAM,cAAc,UAAW,uBAAgB;AAE/C,IAAM,UAAU,UAAW,iBAAS,gBAAQ,IAAK;AACjD,IAAM,YAAY,UAAW,iBAAS,gBAAQ,MAAO;AACrD,IAAM,cAAc,UAAW,iBAAS,gBAAQ,QAAS;AACzD,IAAM,cAAc,UAAW,iBAAS,gBAAQ,QAAS;AAEzD,IAAM,WAAW,UAAW,oBAAa;AAEzC,IAAM,gBAAgB,UAAW,yBAAkB;AAGnD,IAAM,aAAa,CAAE,WAAW,QAAQ,MAAO,WAAY,IAAI,kBAAW,kBAAU,OAAO,WAAW,KAAM,CAAE;AAC9G,IAAM,cAAc,CAAE,WAAW,QAAQ,MAAO,WAAY,IAAI,kBAAW,kBAAU,QAAQ,WAAW,KAAM,CAAE;AAChH,IAAM,aAAa,CAAE,WAAW,QAAQ,MAAO,WAAY,IAAI,kBAAW,kBAAU,OAAO,WAAW,KAAM,CAAE;AAI9G,IAAM,QAAQ,CAAEC,MAAKC,SAAS,WAAY,IAAI,kBAAWD,MAAKC,IAAI,CAAE;AAIpE,IAAM,UAAU,UAAW,mBAAY;AAIvC,IAAM,MAAM,UAAW,eAAQ;AAC/B,IAAM,WAAW,UAAW,oBAAa;;;ACjHhD,IAAM,oBAAN,cAAgC,qBAAa;AAAA,EAE5C,YAAa,QAAQ,MAAO;AAE3B,UAAM;AAEN,SAAK,aAAa,eAAe;AAEjC,SAAK,QAAQ;AAEb,SAAK,YAAY,QAAS,IAAI,MAAM,CAAE;AAAA,EAEvC;AAAA,EAEA,UAAuB;AAEtB,WAAO,KAAK,MAAM;AAAA,EAEnB;AAAA,EAEA,SAAoB;AAEnB,UAAM,EAAE,MAAM,IAAI;AAElB,SAAK,UAAU,MAAM,KAAM,MAAM,KAAM,EAAE,eAAgB,MAAM,SAAU;AAAA,EAE1E;AAED;AAEA,IAAO,4BAAQ;;;AC5Bf,IAAM,oBAAN,cAAgC,0BAAkB;AAAA,EAEjD,YAAa,QAAQ,MAAO;AAE3B,UAAO,KAAM;AAEb,SAAK,qBAAqB,QAAS,CAAE;AACrC,SAAK,oBAAoB,QAAS,CAAE;AAAA,EAErC;AAAA,EAEA,OAAQ,OAAQ;AAEf,UAAM,EAAE,MAAM,IAAI;AAElB,UAAM,OAAQ,KAAM;AAEpB,SAAK,mBAAmB,QAAQ,MAAM;AACtC,SAAK,kBAAkB,QAAQ,MAAM;AAAA,EAEtC;AAAA,EAEA,UAAW,SAAU;AAEpB,UAAM,EAAE,WAAW,oBAAoB,kBAAkB,IAAI;AAE7D,UAAM,wBAAwB,IAAI,qBAAc,qBAAa,eAAe,KAAK,KAAM;AACvF,UAAM,UAAU,IAAK,uBAAuB,YAAa;AAEzD,UAAM,iBAAiB,UAAW,OAAQ;AAC1C,UAAM,gBAAgB,OAAQ,OAAQ;AAEtC,UAAM,mBAAmB,+BAAuB,KAAM;AAAA,MACrD;AAAA,MACA,gBAAgB;AAAA,MAChB,eAAe;AAAA,IAChB,CAAE;AAEF,UAAM,aAAa,IAAK,WAAW,gBAAiB;AAEpD,UAAM,4BAA4B,QAAQ,QAAQ;AAClD,UAAM,iBAAiB,QAAQ,QAAQ;AAEvC,QAAK,uEAA2B,QAAS;AAExC,gCAA0B,OAAO,KAAM;AAAA,QACtC;AAAA,QACA;AAAA,QACA;AAAA,MACD,GAAG,OAAQ;AAAA,IAEZ;AAAA,EAED;AAED;AAEA,mBAAW,aAAc,YAAY,iBAAkB;AAEvD,IAAO,4BAAQ;;;AC5Df,IAAM,sBAAN,cAAkC,0BAAkB;AAAA,EAEnD,YAAa,QAAQ,MAAO;AAE3B,UAAO,KAAM;AAEb,SAAK,oBAAoB,IAAI,qBAAc,qBAAa,QAAS;AACjE,SAAK,qBAAqB,UAAW,KAAK,iBAAkB;AAE5D,SAAK,kBAAkB,QAAS,IAAI,MAAM,CAAE;AAAA,EAE7C;AAAA,EAEA,OAAQ,OAAQ;AAEf,UAAM,EAAE,MAAM,IAAI;AAElB,UAAM,OAAQ,KAAM;AAEpB,SAAK,kBAAkB,WAAW;AAElC,SAAK,gBAAgB,MAAM,KAAM,MAAM,WAAY,EAAE,eAAgB,MAAM,SAAU;AAAA,EAEtF;AAAA,EAEA,SAAU,SAAU;AAEnB,UAAM,EAAE,WAAW,iBAAiB,mBAAmB,IAAI;AAE3D,UAAM,QAAQ,IAAK,YAAY,kBAAmB;AAClD,UAAM,oBAAoB,IAAK,IAAK,KAAK,KAAM,GAAG,GAAI;AAEtD,UAAM,aAAa,IAAK,iBAAiB,WAAW,iBAAkB;AAEtE,YAAQ,QAAQ,WAAW,IAAK,UAAW;AAAA,EAE5C;AAED;AAEA,mBAAW,aAAc,iBAAiB,mBAAoB;AAE9D,IAAO,8BAAQ;;;AC3Cf,IAAM,sBAAsB,IAAI,WAAY,CAAE,EAAE,SAAAC,UAAS,UAAU,MAAO;AAEzE,QAAM,oBAAoB,IAAI,wBAAiBA,QAAQ;AAEvD,QAAM,QAAQ,IAAK,IAAK,KAAK,IAAI,IAAK,WAAW,SAAU,CAAE,GAAG,IAAK,GAAK,SAAU,CAAE;AACtF,QAAM,kBAAkB,IAAK,mBAAmB,KAAM,KAAM,CAAE;AAE9D,SAAO,MAAO,iBAAiB,GAAK,iBAAkB;AAEvD,CAAE;AAEF,IAAM,kBAAN,cAA8B,qBAAa;AAAA,EAE1C,YAAa,UAAU,MAAO;AAE7B,UAAM;AAEN,SAAK,UAAU;AAAA,EAEhB;AAAA,EAEA,UAAW,SAAU;AAEpB,UAAM,UAAU,KAAK;AACrB,UAAM,aAAa,QAAQ,kBAAmB,IAAK;AAEnD,QAAI,aAAa,QAAS,OAAQ,qBAAsB,GAAG,qBAAsB;AACjF,iBAAa,UAAW,IAAK,YAAY,uBAAuB,IAAK,WAAW,SAAU,CAAE,CAAE;AAC9F,iBAAa,mBAAoB,YAAY,gBAAiB;AAE9D,UAAM,kBAAkB,IAAI,oBAAa,SAAS;AAAA,MACjD,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,iBAAiB;AAAA,IAClB,CAAE;AAEF,UAAM,oBAAoB,IAAI,oBAAa,SAAS;AAAA,MACnD,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,WAAW,MAAO,CAAE;AAAA,MACpB,iBAAiB;AAAA,IAClB,CAAE;AAGF,oBAAgB,QAAQ,qBAAqB;AAC7C,sBAAkB,QAAQ,qBAAqB;AAE/C,YAAQ,QAAQ,SAAS,IAAK,eAAgB;AAE9C,YAAQ,QAAQ,cAAc,IAAK,IAAK,KAAK,IAAI,iBAAkB,CAAE;AAErE,eAAW,kBAAkB;AAC7B,eAAW,oBAAoB;AAAA,EAEhC;AAED;AAEA,IAAO,0BAAQ;;;AC9Df,IAAM,SAAN,cAAqB,qBAAa;AAAA,EAEjC,YAAa,SAAS,MAAO;AAE5B,UAAM;AAEN,SAAK,SAAS;AAAA,EAEf;AAAA,EAEA,UAAW,SAAU;AAEpB,UAAM,cAAc;AACpB,UAAM,SAAS,IAAK,IAAK,IAAK,MAAO,KAAK,MAAO,GAAG,CAAI,GAAG,WAAY,GAAG,CAAI;AAE9E,YAAQ,QAAQ,iBAAiB,IAAK,MAAO;AAAA,EAE9C;AAED;AAEA,IAAO,iBAAQ;;;ACrBf,IAAM,aAAN,cAAyB,OAAO;AAAA,EAE/B,YAAa,SAAU;AAEtB,UAAO,OAAQ;AAEf,SAAK,WAAW,CAAC;AAAA,EAElB;AAAA,EAEA,KAAM,KAAK,QAAQ,YAAY,SAAU;AAExC,UAAM,SAAS,IAAI,WAAY,KAAK,OAAQ;AAC5C,WAAO,QAAS,KAAK,IAAK;AAC1B,WAAO,iBAAkB,KAAK,aAAc;AAC5C,WAAO,mBAAoB,KAAK,eAAgB;AAChD,WAAO,KAAM,KAAK,CAAE,SAAU;AAE7B,UAAI;AAEH,eAAQ,KAAK,MAAO,KAAK,MAAO,IAAK,CAAE,CAAE;AAAA,MAE1C,SAAU,GAAI;AAEb,YAAK,SAAU;AAEd,kBAAS,CAAE;AAAA,QAEZ,OAAO;AAEN,kBAAQ,MAAO,CAAE;AAAA,QAElB;AAEA,aAAK,QAAQ,UAAW,GAAI;AAAA,MAE7B;AAAA,IAED,GAAG,YAAY,OAAQ;AAAA,EAExB;AAAA,EAEA,WAAY,MAAO;AAElB,UAAM,QAAQ,CAAC;AAEf,QAAK,SAAS,QAAY;AAEzB,iBAAY,YAAY,MAAO;AAE9B,cAAM,EAAE,MAAM,KAAK,IAAI;AAEvB,cAAO,IAAK,IAAU,SAAU,IAAK;AACrC,cAAO,IAAK,EAAE,OAAO;AAAA,MAEtB;AAEA,YAAM,OAAO,EAAE,OAAO,UAAU,KAAK,SAAS;AAE9C,iBAAY,YAAY,MAAO;AAE9B,iBAAS,OAAO;AAEhB,cAAM,OAAO,MAAO,SAAS,IAAK;AAClC,aAAK,YAAa,QAAS;AAE3B,eAAO,SAAS;AAAA,MAEjB;AAAA,IAED;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,MAAO,MAAO;AAEb,UAAM,OAAa,SAAU,KAAK,IAAK;AACvC,SAAK,OAAO,KAAK;AAEjB,UAAM,QAAQ,KAAK,WAAY,KAAK,UAAW;AAC/C,UAAM,OAAO,EAAE,OAAO,UAAU,KAAK,SAAS;AAE9C,SAAK,OAAO;AAEZ,SAAK,YAAa,IAAK;AAEvB,WAAO,KAAK;AAEZ,WAAO;AAAA,EAER;AAAA,EAEA,YAAa,OAAQ;AAEpB,SAAK,WAAW;AAChB,WAAO;AAAA,EAER;AAED;AAEA,IAAO,qBAAQ;;;AChGf,IAAM,eAAN,cAA2B,eAAe;AAAA,EAEzC,cAAc;AAEb,UAAM;AAEN,SAAK,iBAAiB;AAEtB,SAAK,OAAO,KAAK,YAAY;AAE7B,SAAK,SAAS;AAAA,EAEf;AAAA,EAEA,MAAO,SAAU;AAEhB,SAAK,iBAAkB,OAAQ;AAE/B,UAAM,EAAE,WAAW,IAAI;AACvB,UAAM,EAAE,iBAAiB,IAAI,KAAK,qBAAsB,OAAQ;AAEhE,UAAM,oBAAoB,KAAK,cAAe,SAAS,EAAE,kBAAkB,WAAW,CAAE;AAExF,SAAK,eAAgB,SAAS,EAAE,kBAAkB,kBAAkB,CAAE;AAAA,EAEvE;AAAA,EAEA,wBAAwB;AAEvB,WAAO,KAAK,OAAO,MAAM,KAAK;AAAA,EAE/B;AAAA,EAEA,iBAAkB,SAAU;AA3C7B;AA6CE,UAAM,SAAS,QAAQ;AAIvB,QAAI,SAAS;AAEb,QAAK,KAAK,iBAAiB,MAAO;AAEjC,eAAS,OAAQ,QAAQ,OAAQ,eAAe,KAAK,YAAa,CAAE;AAAA,IAErE;AAEA,UAAK,YAAO,mBAAP,mBAAuB,gCAA+B,QAAQ,QAAQ,YAAa,UAAW,MAAM,MAAO;AAE/G,eAAS,OAAQ,QAAQ,SAAU,MAAO,CAAE;AAAA,IAE7C;AAEA,QAAK,OAAO,kBAAkB,MAAO;AAEpC,eAAS,OAAQ,QAAQ,SAAU,MAAO,CAAE;AAAA,IAE7C;AAEA,YAAQ,QAAQ,SAAS;AAEzB,YAAQ,QAAS,UAAU,oBAAoB,CAAE;AAAA,EAElD;AAAA,EAEA,qBAAsB,SAAU;AAI/B,QAAI,YAAY,KAAM,KAAK,aAAa,aAAc;AACtD,QAAI,cAAc,KAAK,cAAc,MAAO,KAAK,WAAY,IAAI;AAIjE,gBAAY,QAAQ,QAAS,YAAY,MAAO,WAAW,OAAQ,CAAE;AACrE,UAAM,mBAAmB,QAAQ,QAAS,YAAY,MAAO,WAAW,cAAe,CAAE;AAIzF,kBAAc,QAAQ,QAAS,YAAY,MAAO,aAAa,SAAU,CAAE;AAC3E,YAAQ,QAAS,YAAY,OAAQ,iBAAiB,GAAG,IAAK,iBAAiB,GAAG,WAAY,CAAE,CAAE;AAIlG,QAAK,KAAK,iBAAiB,KAAK,YAAY,GAAI;AAE/C,YAAM,gBAAgB,KAAK,gBAAgB,MAAO,KAAK,aAAc,IAAI;AAEzE,cAAQ,QAAS,YAAY,MAAO,eAAe,WAAY,CAAE;AAGjE,cAAQ,QAAS,YAAY,IAAI,uBAAgB,iDAAkD,CAAE;AAAA,IAEtG;AAEA,WAAO,EAAE,WAAW,iBAAiB;AAAA,EAEtC;AAAA,EAEA,cAAe,SAAS,EAAE,kBAAkB,mBAAmB,aAAa,QAAQ,WAAW,GAAI;AAMlG,QAAI,oBAAoB,iBAAiB;AACzC,QAAK,cAAc,WAAW,aAAa;AAAQ,0BAAoB,QAAQ,QAAS,YAAY,MAAO,gBAAiB,YAAY,iBAAkB,GAAG,OAAQ,CAAE;AAEvK,WAAO;AAAA,EAER;AAAA,EAEA,eAAgB,SAAS,EAAE,kBAAkB,kBAAkB,GAAI;AAIlE,QAAI,aAAa,KAAM,mBAAmB,iBAAiB,CAAE;AAI7D,iBAAa,WAAY,YAAY,QAAQ,SAAS,cAAe;AAIrE,QAAK,QAAQ;AAAU,mBAAa,KAAM,KAAM,QAAQ,QAAQ,IAAK,UAAW,CAAE,GAAG,WAAW,CAAE;AAIlG,YAAQ,QAAS,YAAY,MAAO,YAAY,QAAS,CAAE;AAE3D,WAAO;AAAA,EAER;AAAA,EAEA,iBAAkB,QAAS;AAhJ5B;AAqJE,eAAYC,aAAY,QAAS;AAEhC,YAAM,QAAQ,OAAQA,SAAS;AAE/B,UAAK,KAAMA,SAAS,MAAM,QAAY;AAErC,aAAMA,SAAS,MAAI,oCAAO,UAAP,mCAAoB;AAAA,MAExC;AAAA,IAED;AAEA,WAAO,OAAQ,KAAK,SAAS,OAAO,OAAQ;AAAA,EAE7C;AAAA,EAEA,OAAQ,MAAO;AAEd,UAAM,SAAW,SAAS,UAAa,OAAO,SAAS;AAEvD,QAAK,QAAS;AAEb,aAAO;AAAA,QACN,UAAU,CAAC;AAAA,QACX,QAAQ,CAAC;AAAA,QACT,OAAO,CAAC;AAAA,MACT;AAAA,IAED;AAEA,UAAM,OAAO,SAAS,UAAU,OAAO,KAAM,MAAM,IAAK;AACxD,UAAM,WAAW,aAAc,IAAK;AAEpC,SAAK,aAAa,CAAC;AAEnB,eAAY,QAAQ,UAAW;AAE9B,WAAK,WAAY,IAAK,IAAI,KAAM,IAAK,EAAE,OAAQ,IAAK,EAAE;AAAA,IAEvD;AAIA,aAAS,iBAAkB,OAAQ;AAElC,YAAM,SAAS,CAAC;AAEhB,iBAAY,OAAO,OAAQ;AAE1B,cAAMC,QAAO,MAAO,GAAI;AACxB,eAAOA,MAAK;AACZ,eAAO,KAAMA,KAAK;AAAA,MAEnB;AAEA,aAAO;AAAA,IAER;AAEA,QAAK,QAAS;AAEb,YAAM,WAAW,iBAAkB,KAAK,QAAS;AACjD,YAAM,SAAS,iBAAkB,KAAK,MAAO;AAC7C,YAAM,QAAQ,iBAAkB,KAAK,KAAM;AAE3C,UAAK,SAAS,SAAS;AAAI,aAAK,WAAW;AAC3C,UAAK,OAAO,SAAS;AAAI,aAAK,SAAS;AACvC,UAAK,MAAM,SAAS;AAAI,aAAK,QAAQ;AAAA,IAEtC;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,OAAO,eAA6B;AAAA,EAAE;AAEvC;AAEA,IAAO,uBAAQ;;;ACjOf,IAAM,gBAAgB,IAAI,kBAAkB;AAE5C,IAAM,wBAAN,cAAoC,qBAAa;AAAA,EAEhD,YAAa,YAAa;AAEzB,UAAM;AAEN,SAAK,0BAA0B;AAE/B,SAAK,YAAY;AACjB,SAAK,cAAc;AAEnB,SAAK,gBAAgB;AAErB,SAAK,YAAY;AAEjB,SAAK,eAAe;AAEpB,SAAK,iBAAkB,aAAc;AAErC,SAAK,UAAW,UAAW;AAAA,EAE5B;AAAA,EAEA,KAAM,QAAS;AAEd,SAAK,YAAY,OAAO;AACxB,SAAK,cAAc,OAAO;AAE1B,SAAK,gBAAgB,OAAO;AAE5B,SAAK,YAAY,OAAO;AAExB,SAAK,eAAe,OAAO;AAE3B,WAAO,MAAM,KAAM,MAAO;AAAA,EAE3B;AAED;AAEA,IAAO,gCAAQ;;;AC1Cf,IAAMC,iBAAgB,IAAI,kBAAkB;AAE5C,IAAM,wBAAN,cAAoC,qBAAa;AAAA,EAEhD,YAAa,YAAa;AAEzB,UAAM;AAEN,SAAK,0BAA0B;AAE/B,SAAK,SAAS;AAEd,SAAK,YAAY;AACjB,SAAK,cAAc;AAEnB,SAAK,gBAAgB;AAErB,SAAK,YAAY;AAEjB,SAAK,eAAe;AAEpB,SAAK,iBAAkBA,cAAc;AAErC,SAAK,UAAW,UAAW;AAAA,EAE5B;AAAA,EAEA,KAAM,QAAS;AAEd,SAAK,YAAY,OAAO;AACxB,SAAK,cAAc,OAAO;AAE1B,SAAK,gBAAgB,OAAO;AAE5B,SAAK,YAAY,OAAO;AAExB,SAAK,eAAe,OAAO;AAE3B,WAAO,MAAM,KAAM,MAAO;AAAA,EAE3B;AAED;AAEA,IAAO,gCAAQ;;;AChCf,IAAMC,iBAAgB,IAAI,qBAAqB;AAE/C,IAAqB,2BAArB,cAAsD,qBAAa;AAAA,EAElE,YAAa,YAAa;AAEzB,UAAM;AAEN,SAAK,6BAA6B;AAElC,SAAK,YAAY;AACjB,SAAK,cAAc;AAEnB,SAAK,gBAAgB;AAErB,SAAK,aAAa;AAElB,SAAK,eAAe;AAEpB,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AAErB,SAAK,UAAU;AAEf,SAAK,aAAa;AAElB,SAAK,eAAe;AAEpB,SAAK,iBAAkBA,cAAc;AAErC,SAAK,UAAW,UAAW;AAAA,EAE5B;AAAA,EAEA,MAAO,SAAU;AAEhB,SAAK,iBAAkB,OAAQ;AAE/B,UAAM,aAAa,KAAK,qBAAsB,OAAQ;AACtD,UAAM,EAAE,UAAU,IAAI;AACtB,QAAI,EAAE,iBAAiB,IAAI;AAE3B,UAAM,UAAU,KAAK,WAAW,QAAQ,MAAM;AAE9C,uBAAmB,KAAK,yBAA0B,SAAS,EAAE,WAAW,iBAAiB,CAAE;AAE3F,QAAK,KAAK;AAAa,cAAQ,aAAa,KAAK;AAEjD,UAAM,qBAAqB,CAAC;AAE5B,QAAK,SAAU;AAEd,yBAAmB,KAAM,IAAI,wBAAiB,OAAQ,CAAE;AAAA,IAEzD;AAEA,QAAK,QAAQ,SAAS,OAAQ;AAE7B,yBAAmB,KAAM,IAAI,eAAQ,QAAS,QAAQ,SAAS,KAAM,CAAE,CAAE;AAAA,IAE1E;AAEA,QAAK,mBAAmB,SAAS,GAAI;AAEpC,cAAQ,aAAa,IAAI,mBAAY,CAAE,GAAG,QAAQ,WAAW,YAAY,GAAG,kBAAmB,CAAE;AAAA,IAElG;AAEA,UAAM,oBAAoB,KAAK,cAAe,SAAS,EAAE,kBAAkB,mBAAmB,8BAAsB,CAAE;AAEtH,SAAK,eAAgB,SAAS,EAAE,kBAAkB,kBAAkB,CAAE;AAAA,EAEvE;AAAA,EAEA,yBAA0B,SAAS,EAAE,WAAW,iBAAiB,GAAI;AAEpE,UAAM,EAAE,SAAS,IAAI;AAIrB,QAAI,gBAAgB,KAAK,gBAAgB,MAAO,KAAK,aAAc,IAAI;AAEvE,oBAAgB,QAAQ,QAAS,YAAY,MAAO,eAAe,WAAY,CAAE;AACjF,YAAQ,QAAS,YAAY,OAAQ,kBAAkB,KAAM,IAAK,iBAAiB,KAAK,OAAQ,aAAc,CAAE,GAAG,iBAAiB,CAAE,CAAE,CAAE;AAI1I,QAAI,gBAAgB,KAAK,gBAAgB,MAAO,KAAK,aAAc,IAAI;AACvE,oBAAgB,qBAAa,KAAM,EAAE,WAAW,cAAc,CAAE;AAEhE,YAAQ,QAAS,YAAY,MAAO,eAAe,WAAY,CAAE;AAIjE,UAAM,oBAAoB,IAAK,KAAM,IAAK,GAAG,UAAU,KAAK,aAAc;AAE1E,YAAQ,QAAS,YAAY,MAAO,mBAAmB,eAAgB,CAAE;AAIzE,UAAM,aAAa,KAAK,aAAa,KAAM,KAAK,UAAW,IAAM,SAAS,YAAY,IAAI,sBAAe,QAAS,SAAS,SAAU,GAAG,QAAS,SAAS,WAAY,CAAE,IAAI;AAE5K,YAAQ,QAAS,YAAY,MAAO,YAAY,uBAAwB,CAAE;AAE1E,WAAO;AAAA,EAER;AAAA,EAEA,cAAe,SAAS,EAAE,kBAAkB,mBAAmB,aAAa,QAAQ,WAAW,GAAI;AAElG,UAAM,WAAW,QAAQ;AAIzB,QAAI,oBAAoB,MAAM,cAAe,SAAS,EAAE,kBAAkB,mBAAmB,WAAW,CAAE;AAI1G,wBAAoB,IAAK,KAAM,KAAK,gBAAgB,gBAAiB,GAAG,iBAAkB;AAI1F,QAAK,SAAS;AAAkB,0BAAoB,QAAS,SAAS,iBAAiB,EAAE,OAAO,kBAAkB,CAAE;AAEpH,WAAO;AAAA,EAER;AAAA,EAEA,KAAM,QAAS;AAEd,SAAK,YAAY,OAAO;AACxB,SAAK,cAAc,OAAO;AAE1B,SAAK,gBAAgB,OAAO;AAE5B,SAAK,aAAa,OAAO;AAEzB,SAAK,eAAe,OAAO;AAE3B,SAAK,gBAAgB,OAAO;AAC5B,SAAK,gBAAgB,OAAO;AAE5B,SAAK,UAAU,OAAO;AAEtB,SAAK,aAAa,OAAO;AAEzB,SAAK,eAAe,OAAO;AAE3B,WAAO,MAAM,KAAM,MAAO;AAAA,EAE3B;AAED;;;ACnKA,IAAMC,iBAAgB,IAAI,qBAAqB;AAE/C,IAAqB,2BAArB,cAAsD,yBAAyB;AAAA,EAE9E,YAAa,YAAa;AAEzB,UAAM;AAEN,SAAK,6BAA6B;AAElC,SAAK,gBAAgB;AACrB,SAAK,yBAAyB;AAC9B,SAAK,sBAAsB;AAE3B,SAAK,YAAY;AACjB,SAAK,qBAAqB;AAE1B,SAAK,QAAQ;AACb,SAAK,YAAY;AACjB,SAAK,cAAc;AACnB,SAAK,eAAe;AAEpB,SAAK,iBAAkBA,cAAc;AAErC,SAAK,UAAW,UAAW;AAAA,EAE5B;AAAA,EAEA,KAAM,QAAS;AAEd,SAAK,gBAAgB,OAAO;AAC5B,SAAK,yBAAyB,OAAO;AACrC,SAAK,sBAAsB,OAAO;AAElC,SAAK,YAAY,OAAO;AACxB,SAAK,qBAAqB,OAAO;AAEjC,WAAO,MAAM,KAAM,MAAO;AAAA,EAE3B;AAED;;;AC1CA,IAAMC,iBAAgB,IAAI,eAAe;AAEzC,IAAM,qBAAN,cAAiC,qBAAa;AAAA,EAE7C,YAAa,YAAa;AAEzB,UAAM;AAEN,SAAK,uBAAuB;AAE5B,SAAK,cAAc;AAEnB,SAAK,YAAY;AACjB,SAAK,cAAc;AAEnB,SAAK,gBAAgB;AAErB,SAAK,YAAY;AAEjB,SAAK,WAAW;AAEhB,SAAK,eAAe;AAEpB,SAAK,iBAAkBA,cAAc;AAErC,SAAK,UAAW,UAAW;AAAA,EAE5B;AAAA,EAEA,KAAM,QAAS;AAEd,SAAK,YAAY,OAAO;AACxB,SAAK,cAAc,OAAO;AAE1B,SAAK,gBAAgB,OAAO;AAE5B,SAAK,YAAY,OAAO;AAExB,SAAK,WAAW,OAAO;AAEvB,SAAK,eAAe,OAAO;AAE3B,WAAO,MAAM,KAAM,MAAO;AAAA,EAE3B;AAED;AAEA,IAAO,6BAAQ;;;AC1Cf,IAAMC,iBAAgB,IAAI,eAAe;AAEzC,IAAM,qBAAN,cAAiC,qBAAa;AAAA,EAE7C,YAAa,YAAa;AAEzB,UAAM;AAEN,SAAK,uBAAuB;AAE5B,SAAK,SAAS;AAEd,SAAK,YAAY;AACjB,SAAK,cAAc;AAEnB,SAAK,gBAAgB;AAErB,SAAK,YAAY;AAEjB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,YAAY;AAEjB,SAAK,iBAAkBA,cAAc;AAErC,SAAK,UAAW,UAAW;AAAA,EAE5B;AAAA,EAEA,iBAAkB,SAAU;AAtC7B;AA0CE,UAAM,EAAE,cAAc,cAAc,UAAU,IAAI;AAElD,UAAM,SAAS;AAEf,QAAI,aAAa,IAAK,iBAAiB,eAAe,KAAM,aAAa,KAAK,CAAE,IAAI,KAAM,GAAG,GAAG,GAAG,CAAE,CAAE;AAEvG,QAAI,QAAQ;AAAA,MACX,OAAQ,KAAM,iBAAkB,CAAE,EAAE,GAAG,iBAAkB,CAAE,EAAE,GAAG,iBAAkB,CAAE,EAAE,CAAE,CAAE;AAAA,MAC1F,OAAQ,KAAM,iBAAkB,CAAE,EAAE,GAAG,iBAAkB,CAAE,EAAE,GAAG,iBAAkB,CAAE,EAAE,CAAE,CAAE;AAAA,IAC3F;AAEA,QAAK,cAAc,MAAO;AAEzB,cAAQ,IAAK,OAAO,SAAU;AAAA,IAE/B;AAEA,QAAI,kBAAkB,OAAO;AAE7B,UAAK,aAAQ,OAAO,WAAf,mBAAuB,eAAc,MAAO;AAEhD,wBAAkB,IAAK,iBAAiB,IAAK,QAAS,QAAQ,OAAO,MAAO,GAAG,KAAM,GAAI,CAAE,CAAE;AAAA,IAE9F;AAEA,sBAAkB,IAAK,iBAAiB,KAAM;AAE9C,UAAM,WAAW,gBAAgB;AAEjC,UAAM,kBAAkB;AAAA,MACvB,IAAK,IAAK,IAAK,QAAS,GAAG,gBAAgB,CAAE,GAAG,IAAK,IAAK,QAAS,GAAG,gBAAgB,CAAE,CAAE;AAAA,MAC1F,IAAK,IAAK,IAAK,QAAS,GAAG,gBAAgB,CAAE,GAAG,IAAK,IAAK,QAAS,GAAG,gBAAgB,CAAE,CAAE;AAAA,IAC3F;AAEA,iBAAa,KAAM,IAAK,WAAW,IAAI,gBAAgB,EAAG,GAAG,WAAW,GAAG,WAAW,CAAE;AAExF,UAAMC,uBAAsB,IAAK,wBAAwB,UAAW;AAEpE,YAAQ,QAAQ,SAAS;AAEzB,YAAQ,QAAS,UAAUA,oBAAoB;AAAA,EAEhD;AAAA,EAEA,KAAM,QAAS;AAEd,SAAK,YAAY,OAAO;AACxB,SAAK,cAAc,OAAO;AAE1B,SAAK,gBAAgB,OAAO;AAE5B,SAAK,YAAY,OAAO;AAExB,SAAK,eAAe,OAAO;AAC3B,SAAK,eAAe,OAAO;AAC3B,SAAK,YAAY,OAAO;AAExB,WAAO,MAAM,KAAM,MAAO;AAAA,EAE3B;AAED;AAEA,IAAO,6BAAQ;;;ACvFf,qBAAa,eAAe,SAAW,UAAW;AAEjD,QAAM,cAAc;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,QAAM,OAAO,SAAS,KAAK,QAAS,YAAY,cAAe;AAE/D,MAAK,YAAa,IAAK,MAAM,QAAY;AAExC,WAAO;AAAA,EAER;AAEA,QAAM,eAAe,IAAI,YAAa,IAAK,EAAG,QAAS;AAEvD,aAAY,OAAO,UAAW;AAE7B,QAAK,aAAc,GAAI,MAAM,QAAY;AAExC,mBAAc,GAAI,IAAI,SAAU,GAAI;AAAA,IAErC;AAAA,EAED;AAEA,SAAO;AAER;;;AC1CA,IAAM,wBAAwB,eAAe;AAE7C,eAAe,yBAAyB,SAAW,MAAO;AAEzD,QAAM,cAAc;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,MAAK,YAAa,IAAK,MAAM,QAAY;AAExC,WAAO,IAAI,YAAa,IAAK,EAAE;AAAA,EAEhC;AAEA,SAAO,sBAAsB,KAAM,MAAM,IAAK;AAE/C;AAEA,IAAM,qBAAN,cAAiC,eAAe;AAAA,EAE/C,YAAa,SAAU;AAEtB,UAAO,OAAQ;AAEf,SAAK,QAAQ,CAAC;AAAA,EAEf;AAAA,EAEA,MAAO,MAAO;AAEb,UAAM,WAAW,MAAM,MAAO,IAAK;AAEnC,UAAM,QAAQ,KAAK;AACnB,UAAM,aAAa,KAAK;AAExB,eAAYC,aAAY,YAAa;AAEpC,YAAM,OAAO,WAAYA,SAAS;AAElC,eAAUA,SAAS,IAAI,MAAO,IAAK;AAAA,IAEpC;AAEA,WAAO;AAAA,EAER;AAAA,EAEA,SAAU,OAAQ;AAEjB,SAAK,QAAQ;AAEb,WAAO;AAAA,EAER;AAED;AAEA,IAAO,6BAAQ;;;ACpEf,IAAM,mBAAN,cAA+B,aAAa;AAAA,EAE3C,YAAa,SAAU;AAEtB,UAAO,OAAQ;AAEf,SAAK,aAAa;AAAA,EAEnB;AAAA,EAEA,MAAO,MAAM,QAAS;AAErB,SAAK,aAAa,KAAK;AAEvB,UAAM,OAAO,MAAM,MAAO,MAAM,MAAO;AAEvC,SAAK,aAAa;AAElB,WAAO;AAAA,EAER;AAAA,EAEA,WAAY,MAAM,UAAW;AAE5B,QAAK,SAAS,QAAY;AAEzB,YAAM,SAAS,IAAI,mBAAW;AAC9B,aAAO,YAAa,QAAS;AAE7B,aAAO,OAAO,WAAY,IAAK;AAAA,IAEhC;AAEA,WAAO,CAAC;AAAA,EAET;AAAA,EAEA,eAAgB,MAAM,UAAW;AAEhC,UAAM,YAAY,CAAC;AAEnB,QAAK,SAAS,QAAY;AAEzB,YAAM,QAAQ,KAAK,WAAY,KAAK,YAAY,QAAS;AAEzD,YAAM,SAAS,IAAI,2BAAmB;AACtC,aAAO,YAAa,QAAS;AAC7B,aAAO,SAAU,KAAM;AAEvB,eAAU,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,GAAG,KAAO;AAE/C,cAAM,OAAO,KAAM,CAAE;AAErB,kBAAW,KAAK,IAAK,IAAI,OAAO,MAAO,IAAK;AAAA,MAE7C;AAAA,IAED;AAEA,WAAO;AAAA,EAER;AAED;AAEA,IAAO,2BAAQ;;;ACuCf,IAAM,UAAU;AAAA;AAAA,EAEf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA;AAAA,EAGA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAED;AAEO,IAAM,WAAW,CAAE,SAAU;AAEnC,SAAO,IAAI,QAAS,IAAK,EAAE;AAE5B;",
  "names": ["property", "data", "attribute", "code", "context", "code", "property", "code", "code", "context", "value", "attribute", "length", "code", "fromType", "texture", "property", "property", "property", "userData", "context", "nodeObject", "bool", "uint", "int", "float", "code", "call", "userData", "texture", "texture", "min", "max", "length", "color", "hue", "uv", "normalMap", "color", "toneMapping", "lights", "context", "uv", "texture", "uv", "uv", "dotNV", "roughness", "roughness", "roughness", "color", "lights", "min", "max", "texture", "property", "data", "defaultValues", "defaultValues", "defaultValues", "defaultValues", "defaultValues", "modelViewProjection", "property"]
}
